<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>b2GetPointStates</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a401e2747d276e9fbfd131989e02ff568</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2CollideCircles</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>ab8a1bf2c6a9453307466f4870c1fa333</Anchor>
    <Abstract>Compute the collision manifold between two circles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2CollidePolygonAndCircle</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a30da13c857596fbefa40b47c3e1e78d0</Anchor>
    <Abstract>Compute the collision manifold between a polygon and a circle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2CollidePolygons</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a2f7b9859479384c0e2cceb9e7744afcb</Anchor>
    <Abstract>Compute the collision manifold between two polygons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2CollideEdgeAndCircle</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>aee6f752fdf8c89152e824da12e944733</Anchor>
    <Abstract>Compute the collision manifold between an edge and a circle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2CollideEdgeAndPolygon</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a5d0c5fab412d5ca886b1965666b16d99</Anchor>
    <Abstract>Compute the collision manifold between an edge and a circle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ClipSegmentToLine</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a8b36e651798f55f2533f9837462ded41</Anchor>
    <Abstract>Clipping for contact manifolds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2TestOverlap</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>ae7601420d0b42c1ee494e879dd2009a5</Anchor>
    <Abstract>Determine if two generic shapes overlap.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_nullState</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a0a894e3715ce8c61b7958dd6e083663da7ce77ce1a592f49d92939997976c217b</Anchor>
    <Abstract>point does not exist</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_addState</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a0a894e3715ce8c61b7958dd6e083663dac60dc479bee2089a695b37948179b3d4</Anchor>
    <Abstract>point was added in the update</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_persistState</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a0a894e3715ce8c61b7958dd6e083663dafb032f2175741fa95361e55d1c069e0a</Anchor>
    <Abstract>point persisted across the update</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_removeState</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>b2_collision_8h.html</Path>
    <Anchor>a0a894e3715ce8c61b7958dd6e083663da42ca6d7de57b948c8c895cd6f51ee8be</Anchor>
    <Abstract>point was removed in the update</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_maxManifoldPoints</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>aa5f44cc9edf711433dea2b2ec94f3c42</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_maxPolygonVertices</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a09d71ee1993bee28b5b2e6d893b41884</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_aabbExtension</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>adb86e231496fdd6ac7795ce58d40c870</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_aabbMultiplier</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a7d1bd1594f20601d4079bccbd0a6a03c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_linearSlop</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a57268ade379c5c3373d0ff558b0350cf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_angularSlop</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a67810fb101bb7a7e0b3afc14845383ee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_polygonRadius</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>afc0f934dabffb1e83e081249133ad860</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_maxSubSteps</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>ac1fd56e39ab8499f344b6398b7332e55</Anchor>
    <Abstract>Maximum number of sub-steps per contact in continuous physics simulation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_maxTOIContacts</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>aad3a54bcae5f7ec0235963403c2fccc9</Anchor>
    <Abstract>Maximum number of contacts to be handled to solve a TOI impact.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_velocityThreshold</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a690b448aa2dba2a1393781f8c059c22a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_maxLinearCorrection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a23ab70e4809f5ee23abcd52018d5eb88</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_maxAngularCorrection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a823e4f9a6fa4b9de3c97da696571400a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_maxTranslation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>af2bad257bfbafed3665df3e243ba2b52</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_maxRotation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a5808c5f1e946205d8f7458101ccc698e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_baumgarte</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a88e32539e0f9e69e3832e1321eba3caa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_timeToSleep</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>ab021adb740e4a5e1f5f7d9913ed94781</Anchor>
    <Abstract>The time that a body must be still before it will go to sleep.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_linearSleepTolerance</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a6d882c48142a8c73011b576e20dc6dd8</Anchor>
    <Abstract>A body cannot sleep if its linear velocity is above this tolerance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_angularSleepTolerance</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a571f3e7c864aca14141b163205600eef</Anchor>
    <Abstract>A body cannot sleep if its angular velocity is above this tolerance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Alloc</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a2dca9b286e9b9d6d022055fd61534bd7</Anchor>
    <Abstract>Implement this function to use your own memory allocator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Free</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a50f4abf5edeabd0300946edbd542e24d</Anchor>
    <Abstract>If you implement b2Alloc, you should also implement this function.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Log</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a9f10095d05c74eebfe535931c9061ab2</Anchor>
    <Abstract>Logging function.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2_version</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>b2_settings_8h.html</Path>
    <Anchor>a3a20e3b6a8b05633d911fea031f7a44f</Anchor>
    <Abstract>Current version.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2AABB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Abstract>An axis aligned bounding box.</Abstract>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>a8d170a2de7a267c3e19f5365685b713d</Anchor>
    <Abstract>Verify that the bounds are sorted.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>aa26703e234bd6fb30fd443cd5001795a</Anchor>
    <Abstract>Get the center of the AABB.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetExtents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>aff8b9aa64069a33fe45025299aa0e9b7</Anchor>
    <Abstract>Get the extents of the AABB (half-widths).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetPerimeter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>ace4448c60ef309726e59247a8ae67db5</Anchor>
    <Abstract>Get the perimeter length.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Combine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>ad551edba62d2ad6094672a9ba3e26496</Anchor>
    <Abstract>Combine an AABB into this one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Combine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>a34b9c7d824df845c10caa9c12ae90452</Anchor>
    <Abstract>Combine two AABBs into this one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Contains</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>aba5fc112e3c8d05e034a21d95fc37704</Anchor>
    <Abstract>Does this aabb contain the provided AABB.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowerBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>ab94b68fbad8348b22b0522469b11bdb5</Anchor>
    <Abstract>the lower vertex</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upperBound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2AABB</Scope>
    </TokenIdentifier>
    <Path>structb2_a_a_b_b.html</Path>
    <Anchor>ad4a8ec483ba13a2c02918b01d058a18f</Anchor>
    <Abstract>the upper vertex</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2BlockAllocator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2BlockAllocator</Scope>
    </TokenIdentifier>
    <Path>classb2_block_allocator.html</Path>
    <DeclaredIn>b2BlockAllocator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Allocate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BlockAllocator</Scope>
    </TokenIdentifier>
    <Path>classb2_block_allocator.html</Path>
    <Anchor>a60b4b07a234adfe19cd1279805ed6519</Anchor>
    <Abstract>Allocate memory. This will use b2Alloc if the size is larger than b2_maxBlockSize.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Free</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BlockAllocator</Scope>
    </TokenIdentifier>
    <Path>classb2_block_allocator.html</Path>
    <Anchor>a945fdf86e260318b930a53dcc887ca8b</Anchor>
    <Abstract>Free memory. This will use b2Free if the size is larger than b2_maxBlockSize.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Body</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Abstract>A rigid body. These are created via b2World::CreateBody.</Abstract>
    <DeclaredIn>b2Body.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateFixture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a40dda91b34418bb40e31e2db9b1b76a5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateFixture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a9bdbbc58d1cc51aec51a978174a2ba48</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestroyFixture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a856d1df86b7bded91f02d8cfcaea1c2f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a4686f32bbce5723761e9719c706eca11</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>adaaebca750d0bda56a543884adc5f519</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a798da9dc2d47431912d991d152b13711</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a57c4a1946a6dd5a00e28691bc419fdcd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetWorldCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a04db0c7b12b315802e58b33884f4f63c</Anchor>
    <Abstract>Get the world position of the center of mass.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a27ed7f8a3b36ddfb01069ee8f7106033</Anchor>
    <Abstract>Get the local position of the center of mass.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetLinearVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a832f3989a44f0d4782c80456832197ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLinearVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ac7f1adfdef7c5c3d89fa44276fae0a5a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetAngularVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a37adc4160b84f73e8552a91cbde3f578</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAngularVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a158fe4c141168d2c3e65096b209f548c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplyForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>aa1a2ebd027635ea5a81749f267a19261</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplyForceToCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ab3ede408c7f21b9828119b6b88f268ea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplyTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a2a383c0af1f91f449e74cfcec8fe2604</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplyLinearImpulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ada3c2a70cbb53c4fcee5a4febbbefc15</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ApplyAngularImpulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a2274ca61d7f63babf8fd30348e339083</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a4f62fea4546d2b9ca64a5f6723bbc71c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetInertia</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a8c8916caf67c1e618a07d8b6b9253fa8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMassData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ad0a90df7e2617a8572cd476267f95417</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMassData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a58a641fedf8a81e1e26d09ec00a22fe2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResetMassData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a109d8567c6ae84c61fce2919fb209c63</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetWorldPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a8055b90bccb51383caa8c42fbc96c9c3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetWorldVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>afd44622669b5e45202c23e4a212895fc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a8f9ef0226b7eb989e700fa8898d29fc0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalVector</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a93de09565c0c1a9da2601c1847aa22df</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLinearVelocityFromWorldPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a4238ae43f5afeb2126b8e8bf765334b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLinearVelocityFromLocalPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a4429e3f380e882def11c52ac893b8e2e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLinearDamping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a7283e4821d24aed0fa5b0f7891175183</Anchor>
    <Abstract>Get the linear damping of the body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetLinearDamping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a909f9753ad700f70282a56e00bc182a5</Anchor>
    <Abstract>Set the linear damping of the body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAngularDamping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a5153143f2593802c85e54a21de5464ce</Anchor>
    <Abstract>Get the angular damping of the body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetAngularDamping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a73a79541b18394fa224d2eae8ad493e8</Anchor>
    <Abstract>Set the angular damping of the body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetGravityScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ad8348f06a391d169d6395dfd66762454</Anchor>
    <Abstract>Get the gravity scale of the body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetGravityScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a8e66a570c2aeee93b29d84cae861a612</Anchor>
    <Abstract>Set the gravity scale of the body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a34ff1c84b10b74eb990749a025a1b1ad</Anchor>
    <Abstract>Set the type of this body. This may alter the mass and velocity.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>aa0d5acad4f0104e709e34e29a4a0c1a4</Anchor>
    <Abstract>Get the type of this body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetBullet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a3253af3725b8d6d63d8223bcd2ddab5c</Anchor>
    <Abstract>Should this body be treated like a bullet for continuous collision detection?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsBullet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>af48509b43c9474b394cf76d733b56882</Anchor>
    <Abstract>Is this body treated like a bullet for continuous collision detection?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetSleepingAllowed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a229a6de228416203fecbf7a7544c33bb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSleepingAllowed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ac0b0c558008bda8cf7984dbaf2ee3aea</Anchor>
    <Abstract>Is this body allowed to sleep.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetAwake</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ac72ed3df52a26c33db82252ab57399af</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsAwake</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>aa28fdb95dffac89d20b04bd1a038b4ea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ab8059b7b3e3b64aee17b54f68f7dde80</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ae69b9cb7461ee165b6459ce43d648479</Anchor>
    <Abstract>Get the active state of the body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFixedRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>aff35078e2a221d2d05409674936cb8d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsFixedRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a6bef51a11a1fec3fddad273b11c14214</Anchor>
    <Abstract>Does this body have fixed rotation?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFixtureList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a64634da20c6e0ab2d68a3cc9ea15efc3</Anchor>
    <Abstract>Get the list of all fixtures attached to this body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a55cf2eb851780599ca5c1f6f25a17e41</Anchor>
    <Abstract>Get the list of all joints attached to this body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetContactList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a16bdbfb266c82a0ef51be351a8928bc5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetNext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ad54182a11d02362b027a0eb072775bdc</Anchor>
    <Abstract>Get the next body in the world&amp;#39;s body list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a6833f7e2ef1b6ac82641bb6b07ec50d1</Anchor>
    <Abstract>Get the user data pointer that was provided in the body definition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>a5553a5ecdfd2d7200ba2405ce6043f52</Anchor>
    <Abstract>Set the user data. Use this to store your application specific data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetWorld</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>abfd9466763b20977f9122d0e162dfeb9</Anchor>
    <Abstract>Get the parent world of this body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Body</Scope>
    </TokenIdentifier>
    <Path>classb2_body.html</Path>
    <Anchor>ac9e482f7d9df92801c24e79a7e751d06</Anchor>
    <Abstract>Dump this body to a log file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2BodyDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <DeclaredIn>b2Body.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2BodyDef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a87bee47596b3b3eced0d9dd1f4c18fee</Anchor>
    <Abstract>This constructor sets the body definition default values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a89cc3ad1873908042b002147b3861381</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a680cadc09ad6cf4b3366cbf0914c648b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>angle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a564b16f4f8e9fcb5dda397e64aa9be6f</Anchor>
    <Abstract>The world angle of the body in radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linearVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a25fa5aa78d93159c344241af95bec2bf</Anchor>
    <Abstract>The linear velocity of the body&amp;#39;s origin in world co-ordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>angularVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>add7809f7a29656b8c4b643ad8c2f34a9</Anchor>
    <Abstract>The angular velocity of the body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linearDamping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a728f6df3be7dedb331455105e3659d46</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>angularDamping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a01b8dc8ad9f0962efef9e4a8e836feb6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowSleep</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a0765068172e521ed63cb34084c59c003</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>awake</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a17a8102638aac41e7ab94278651a45bd</Anchor>
    <Abstract>Is this body initially awake or sleeping?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fixedRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a273a51c57440a8884de5939d76b6e3ea</Anchor>
    <Abstract>Should this body be prevented from rotating? Useful for characters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bullet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>a7c0047c9a98a1d20614eeddcdbce7586</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>active</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>adf6f3e9a9e124e080c68bc0edeb170df</Anchor>
    <Abstract>Does this body start out active?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>ae457dd1d39be09945eace6061121be29</Anchor>
    <Abstract>Use this to store application specific body data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gravityScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2BodyDef</Scope>
    </TokenIdentifier>
    <Path>structb2_body_def.html</Path>
    <Anchor>aadea3fa173ed1014739ec8b023de4336</Anchor>
    <Abstract>Scale the gravity applied to this body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2BroadPhase</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <DeclaredIn>b2BroadPhase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateProxy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>ae2f7af756bc55ece45221466c5af449c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestroyProxy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a84f0fb227dc01a9b9baa55c7b8c68984</Anchor>
    <Abstract>Destroy a proxy. It is up to the client to remove any pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MoveProxy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a01dc18a19c2b5d0cc1d9cd8c8554234c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TouchProxy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a67b296431ebbc7b44037f21d645d9166</Anchor>
    <Abstract>Call to trigger a re-processing of it&amp;#39;s pairs on the next call to UpdatePairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFatAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a7b00ac700db52e52248a25397007d4ff</Anchor>
    <Abstract>Get the fat AABB for a proxy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a89c099e95237d68577376d8f9a4ed013</Anchor>
    <Abstract>Get user data from a proxy. Returns NULL if the id is invalid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestOverlap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a1785eb29d14997d81bd537f064d22aba</Anchor>
    <Abstract>Test overlap of fat AABBs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetProxyCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a399fa4f5289a1ec46a65f726f3bac890</Anchor>
    <Abstract>Get the number of proxies.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UpdatePairs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a0a1acd693466b997700242ae00784c20</Anchor>
    <Abstract>Update the pairs. This results in pair callbacks. This can only add pairs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Query</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>aea5732362c8bb3959c6b24f967654d93</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>aebcb837120ce45bbb82b4b61db533026</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetTreeHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>aeb9f94f44840c5bd766031d78f63ca08</Anchor>
    <Abstract>Get the height of the embedded tree.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetTreeBalance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>a1189e783d39bfd69b314284ce52ea3c3</Anchor>
    <Abstract>Get the balance of the embedded tree.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetTreeQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2BroadPhase</Scope>
    </TokenIdentifier>
    <Path>classb2_broad_phase.html</Path>
    <Anchor>abe02c30ca1b3b9c9b84a571a2f8cef92</Anchor>
    <Abstract>Get the quality metric of the embedded tree.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ChainAndCircleContact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ChainAndCircleContact</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_and_circle_contact.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainAndCircleContact</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_and_circle_contact.html</Path>
    <Anchor>afe52ebd870f24cbecedd1db662705f12</Anchor>
    <Abstract>Evaluate this contact with your own manifold and transforms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ChainAndPolygonContact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ChainAndPolygonContact</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_and_polygon_contact.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainAndPolygonContact</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_and_polygon_contact.html</Path>
    <Anchor>a8c25ceb49d981797d0a7f8a1ea769442</Anchor>
    <Abstract>Evaluate this contact with your own manifold and transforms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ChainShape</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <DeclaredIn>b2ChainShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~b2ChainShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a8c032394f5a85e7fc425a437e7689a18</Anchor>
    <Abstract>The destructor frees the vertices using b2Free.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateLoop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>ac257742a52cac391e25962a4c703fb06</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateChain</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>aa0977339b743c05f2179939ccc38e7e0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetPrevVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>aeb2ddbe0c52a98885e91b7c8f597315b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetNextVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a15c7c2821a52266ef57621ac7d34a95f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>aa378f5e1a22ec71224e0182eb482b3e3</Anchor>
    <Abstract>Implement b2Shape. Vertices are cloned using b2Alloc.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetChildCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a44bd58b9602dbe57cdfc3b66f8f03b61</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetChildEdge</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a614e630221ac7f19257c9351edf4bd12</Anchor>
    <Abstract>Get a child edge.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a4fc27b41ecc556985efacf8e0f91c39f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a85c7a17a15581e0e258c7af561cf5403</Anchor>
    <Abstract>Implement b2Shape.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a409c21206e4c84f66700809aac5b164c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeMass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a009259d589abebeda27fe580d117b11e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_vertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>a481116a6886fb3880b13e55c966579da</Anchor>
    <Abstract>The vertices. Owned by this class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_count</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ChainShape</Scope>
    </TokenIdentifier>
    <Path>classb2_chain_shape.html</Path>
    <Anchor>ab2ad711781e6ac81179074e90e0e058b</Anchor>
    <Abstract>The vertex count.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2CircleContact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2CircleContact</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_contact.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleContact</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_contact.html</Path>
    <Anchor>ac0651dda773561b8561b8efa3cd31d5c</Anchor>
    <Abstract>Evaluate this contact with your own manifold and transforms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2CircleShape</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Abstract>A circle shape.</Abstract>
    <DeclaredIn>b2CircleShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a95b7ff40de30768b19475df98dd68c4b</Anchor>
    <Abstract>Implement b2Shape.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetChildCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a64b58799675edc9a6debc09c0d6ddce4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a77171941cd1633c337fed1efb366bebb</Anchor>
    <Abstract>Implement b2Shape.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a76175079381193917026fdf3702190fa</Anchor>
    <Abstract>Implement b2Shape.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>aa6889a5af85aa1e272547fd0008eb64a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeMass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a335edea2ef84789e102dde41ca889828</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a8644ce19547e5efaf43bd8ec543e284e</Anchor>
    <Abstract>Get the supporting vertex index in the given direction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetSupportVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>aa23975b480495bf8bc70073d4f135fd2</Anchor>
    <Abstract>Get the supporting vertex in the given direction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetVertexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a477a087b143147223e4b9fbb6581acf1</Anchor>
    <Abstract>Get the vertex count.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a029e555a3ea76b00479b051f1b813c3a</Anchor>
    <Abstract>Get a vertex by index. Used by b2Distance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_p</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2CircleShape</Scope>
    </TokenIdentifier>
    <Path>classb2_circle_shape.html</Path>
    <Anchor>a190705618b2e65f636f1dc03c63640ff</Anchor>
    <Abstract>Position.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ClipVertex</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ClipVertex</Scope>
    </TokenIdentifier>
    <Path>structb2_clip_vertex.html</Path>
    <Abstract>Used for computing contact manifolds.</Abstract>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Color</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Color</Scope>
    </TokenIdentifier>
    <Path>structb2_color.html</Path>
    <Abstract>Color for debug drawing. Each value has the range [0,1].</Abstract>
    <DeclaredIn>b2Draw.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Contact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <DeclaredIn>b2Contact.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetManifold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>ab0597077b23615476327f9b32d9c4979</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetWorldManifold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a6a30a44a28b44754cb61bba65cb5b728</Anchor>
    <Abstract>Get the world manifold.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsTouching</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a367dc9a563ad7db5547f4247777a33c9</Anchor>
    <Abstract>Is this contact touching?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a6edf582f8c161d6632854cddefe55a0c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>ae7bd71ee1b0bb352bec6eeaab4f91c6a</Anchor>
    <Abstract>Has this contact been disabled?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetNext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>aebfebb1e4b27dc0bd7aa120093e3d650</Anchor>
    <Abstract>Get the next contact in the world&amp;#39;s contact list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFixtureA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a707a3a5a14c2cdd4c6eb7fc648d76037</Anchor>
    <Abstract>Get fixture A in this contact.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetChildIndexA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>ab0c9c059c776f315ae62abb5c978afcc</Anchor>
    <Abstract>Get the child primitive index for fixture A.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFixtureB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a68464fe587d7e6a1f52763e965bb7361</Anchor>
    <Abstract>Get fixture B in this contact.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetChildIndexB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a9edc26022c3d1a9cf1dab9d79d639b3f</Anchor>
    <Abstract>Get the child primitive index for fixture B.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFriction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a5e8fbb6bb2966ac84272bb0ea9d2e4c7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFriction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a0b6daf4137fd1719961f5d780b8dda15</Anchor>
    <Abstract>Get the friction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResetFriction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>ad66d9290da187cef4c9f48c5766d4460</Anchor>
    <Abstract>Reset the friction mixture to the default value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetRestitution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a24ca342c2bb766c53ef5ad04f5268fc1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetRestitution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>aed12746a2855277479802144b699326b</Anchor>
    <Abstract>Get the restitution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ResetRestitution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a243501bc5c146e9eb1296162d328aef1</Anchor>
    <Abstract>Reset the restitution to the default value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>ae3c2842e5325b2d4500f8ed1d4de2f72</Anchor>
    <Abstract>Evaluate this contact with your own manifold and transforms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FlagForFiltering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Contact</Scope>
    </TokenIdentifier>
    <Path>classb2_contact.html</Path>
    <Anchor>a44a3d32149021269eb9dfd4015c98e0d</Anchor>
    <Abstract>Flag this contact for filtering. Filtering will occur the next time step.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactEdge</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_edge.html</Path>
    <DeclaredIn>b2Contact.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>other</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_edge.html</Path>
    <Anchor>a69015fc22e064eac04ed74f27a13ae78</Anchor>
    <Abstract>provides quick access to the other body attached.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contact</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_edge.html</Path>
    <Anchor>a2fbfaffa0dfdf715fd1a709cff939dee</Anchor>
    <Abstract>the contact</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prev</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_edge.html</Path>
    <Anchor>a606dfacb78dc5c51672e4d7449006b8c</Anchor>
    <Abstract>the previous contact edge in the body&amp;#39;s contact list</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>next</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_edge.html</Path>
    <Anchor>a9af32b3cfadf35a927f4dffcf6338a6d</Anchor>
    <Abstract>the next contact edge in the body&amp;#39;s contact list</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactFeature</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactFeature</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_feature.html</Path>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactFeature</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_feature.html</Path>
    <Anchor>a833bc746e7cb5e3cd458f1c0809101d0</Anchor>
    <Abstract>Feature index on shapeA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactFeature</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_feature.html</Path>
    <Anchor>ad96712b6a0cc1f4b22b85b5948eab81d</Anchor>
    <Abstract>Feature index on shapeB.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typeA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactFeature</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_feature.html</Path>
    <Anchor>a3361b651f0a88fb60ec6aba9f4921cc2</Anchor>
    <Abstract>The feature type on shapeA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typeB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactFeature</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_feature.html</Path>
    <Anchor>abb74afd6ee5b60834a3f8e2616182bdf</Anchor>
    <Abstract>The feature type on shapeB.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactFilter</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactFilter</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_filter.html</Path>
    <DeclaredIn>b2WorldCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShouldCollide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ContactFilter</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_filter.html</Path>
    <Anchor>a0e33d4fc90a9345160a07cc494b45ecd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactID</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactID</Scope>
    </TokenIdentifier>
    <Path>unionb2_contact_i_d.html</Path>
    <Abstract>Contact ids to facilitate warm starting.</Abstract>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>key</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ContactID</Scope>
    </TokenIdentifier>
    <Path>unionb2_contact_i_d.html</Path>
    <Anchor>a04c04f8fdcb799b33552d01b3aa3f245</Anchor>
    <Abstract>Used to quickly compare contact ids.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactImpulse</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactImpulse</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_impulse.html</Path>
    <DeclaredIn>b2WorldCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactListener</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactListener</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_listener.html</Path>
    <DeclaredIn>b2WorldCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BeginContact</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ContactListener</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_listener.html</Path>
    <Anchor>a35148fc56fb9eac12077200fbd928f65</Anchor>
    <Abstract>Called when two fixtures begin to touch.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EndContact</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ContactListener</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_listener.html</Path>
    <Anchor>afb3059058e5c47903a3947c2eef5826b</Anchor>
    <Abstract>Called when two fixtures cease to touch.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreSolve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ContactListener</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_listener.html</Path>
    <Anchor>a416f85eb45a1099053402b15a19a7de0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostSolve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2ContactListener</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_listener.html</Path>
    <Anchor>acd58ec96f7569b95eec65b8ca3f8013d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactManager</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactManager</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_manager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactRegister</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactRegister</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_register.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactSolver</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactSolver</Scope>
    </TokenIdentifier>
    <Path>classb2_contact_solver.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactSolverDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactSolverDef</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_solver_def.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ContactVelocityConstraint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ContactVelocityConstraint</Scope>
    </TokenIdentifier>
    <Path>structb2_contact_velocity_constraint.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2DestructionListener</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2DestructionListener</Scope>
    </TokenIdentifier>
    <Path>classb2_destruction_listener.html</Path>
    <DeclaredIn>b2WorldCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SayGoodbye</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DestructionListener</Scope>
    </TokenIdentifier>
    <Path>classb2_destruction_listener.html</Path>
    <Anchor>a6cd15baa6e5c33118cf7173ab5bf6d58</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SayGoodbye</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DestructionListener</Scope>
    </TokenIdentifier>
    <Path>classb2_destruction_listener.html</Path>
    <Anchor>ab327c0073d162112c38d2fe8f8b9fce3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2DistanceInput</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2DistanceInput</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_input.html</Path>
    <DeclaredIn>b2Distance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2DistanceJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <DeclaredIn>b2DistanceJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a66c1cb4deff1166c1dab67df6047a89c</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>afc58d85cf7cc5e23082cf469e1a1a067</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a99413cc114b2f4dc4ce7693c062ce226</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a8d65840abe0b398399020524852788fd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a75a41c40f21e48a6f9e947dd1dc46db4</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a22e9572c8b3d1f0619b340738811c082</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a950a0f187ef691208e50de40ed9223fe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a1a12446f8926a1324edd481d9cd28c8a</Anchor>
    <Abstract>Set/get frequency in Hz.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetDampingRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a58da61301a1f1398a715107b76649923</Anchor>
    <Abstract>Set/get damping ratio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DistanceJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_distance_joint.html</Path>
    <Anchor>a3cebcc6ccce6f3c24432cd130fd53517</Anchor>
    <Abstract>Dump joint to dmLog.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2DistanceJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2DistanceJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_joint_def.html</Path>
    <DeclaredIn>b2DistanceJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2DistanceJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_joint_def.html</Path>
    <Anchor>a99788a534638cc28cd1e44e0036503f0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2DistanceJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_joint_def.html</Path>
    <Anchor>a15c7a75fa277e2056bf1b44198658518</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2DistanceJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_joint_def.html</Path>
    <Anchor>a3c8995be726238eee084af750442255c</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2DistanceJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_joint_def.html</Path>
    <Anchor>ac2c48ad52de91c804c386c12c5bf3714</Anchor>
    <Abstract>The natural length between the anchor points.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frequencyHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2DistanceJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_joint_def.html</Path>
    <Anchor>a35e2362bcb6c58734f95d0ac045863ea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dampingRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2DistanceJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_joint_def.html</Path>
    <Anchor>ad009b24ff211158eb4e1db4815a63b94</Anchor>
    <Abstract>The damping ratio. 0 = no damping, 1 = critical damping.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2DistanceOutput</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2DistanceOutput</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_output.html</Path>
    <Abstract>Output for b2Distance.</Abstract>
    <DeclaredIn>b2Distance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2DistanceOutput</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_output.html</Path>
    <Anchor>a7e0f1f44a64e596dc7d37570c69eefce</Anchor>
    <Abstract>closest point on shapeA</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2DistanceOutput</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_output.html</Path>
    <Anchor>aa85beca17337a506cd4a924d0c6f92cc</Anchor>
    <Abstract>closest point on shapeB</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>iterations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2DistanceOutput</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_output.html</Path>
    <Anchor>ae2d4c84dd3d05ea4f4d20c91099ec8d5</Anchor>
    <Abstract>number of GJK iterations used</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2DistanceProxy</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2DistanceProxy</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_proxy.html</Path>
    <DeclaredIn>b2Distance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2DistanceProxy</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_proxy.html</Path>
    <Anchor>a80a59a9c9e952482a8fc6db4b883365d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetSupport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2DistanceProxy</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_proxy.html</Path>
    <Anchor>ad763543846db0c220e6b0a29275d723e</Anchor>
    <Abstract>Get the supporting vertex index in the given direction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetSupportVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2DistanceProxy</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_proxy.html</Path>
    <Anchor>ad98a909b9aee9e42ba184b1e6bd526ba</Anchor>
    <Abstract>Get the supporting vertex in the given direction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetVertexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2DistanceProxy</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_proxy.html</Path>
    <Anchor>a43c51168f2829c55dacc8b9adbd90206</Anchor>
    <Abstract>Get the vertex count.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2DistanceProxy</Scope>
    </TokenIdentifier>
    <Path>structb2_distance_proxy.html</Path>
    <Anchor>ac5ecae62c2a96afdf220074118c71a92</Anchor>
    <Abstract>Get a vertex by index. Used by b2Distance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Draw</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <DeclaredIn>b2Draw.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>ac2bbe31595478690e44de4ff1e7f347e</Anchor>
    <Abstract>Set the drawing flags.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>acadab1a12ec06541814f6118950aa998</Anchor>
    <Abstract>Get the drawing flags.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AppendFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>acc2fd4648ee0a65574770c64528f7166</Anchor>
    <Abstract>Append flags to the current flags.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClearFlags</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>afc240b71f4ba8c17440d6ed526d4e22e</Anchor>
    <Abstract>Clear flags from the current flags.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DrawPolygon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>acd5427d1d2e7d19f1b34ad3620134d28</Anchor>
    <Abstract>Draw a closed polygon provided in CCW order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DrawSolidPolygon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>a76f2d67de0781a32cab116278c5c9eea</Anchor>
    <Abstract>Draw a solid closed polygon provided in CCW order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DrawCircle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>ae2effe9bca87c8d7cb90e860d13b7e9e</Anchor>
    <Abstract>Draw a circle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DrawSolidCircle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>a775a1d0472c5980d597904c7b596a0a6</Anchor>
    <Abstract>Draw a solid circle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DrawSegment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>a1de5aaf50db875d1c644c596832af57d</Anchor>
    <Abstract>Draw a line segment.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DrawTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>ade698123482a491a7a61fa1fe4d3a4f4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e_shapeBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>ae23c5d6c4f5230621f736593469cf7f2a1c8964c4f1fdc39e98b58ac38ecda1f9</Anchor>
    <Abstract>draw shapes</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e_jointBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>ae23c5d6c4f5230621f736593469cf7f2a241137a63679720c41a271c11681e2b3</Anchor>
    <Abstract>draw joint connections</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e_aabbBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>ae23c5d6c4f5230621f736593469cf7f2acdf1370108930182a45f39e7cc9b0cc7</Anchor>
    <Abstract>draw axis aligned bounding boxes</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e_pairBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>ae23c5d6c4f5230621f736593469cf7f2ac86bb64ac65e555db28827407f2f2d43</Anchor>
    <Abstract>draw broad-phase pairs</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>e_centerOfMassBit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>b2Draw</Scope>
    </TokenIdentifier>
    <Path>classb2_draw.html</Path>
    <Anchor>ae23c5d6c4f5230621f736593469cf7f2a7f1494d816479c7d23997a6c292cd8b6</Anchor>
    <Abstract>draw center of mass frame</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2DynamicTree</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <DeclaredIn>b2DynamicTree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2DynamicTree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>a8af64cf6a1566fa4c5b5c9683bd937d9</Anchor>
    <Abstract>Constructing the tree initializes the node pool.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~b2DynamicTree</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>a9060565fc63b4dd87d9560775c076786</Anchor>
    <Abstract>Destroy the tree, freeing the node pool.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateProxy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>ae44676f12977dada46037da47fc7ffbf</Anchor>
    <Abstract>Create a proxy. Provide a tight fitting AABB and a userData pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestroyProxy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>a62aa451e7d7fe029818dd05f76ea9cdc</Anchor>
    <Abstract>Destroy a proxy. This asserts if the id is invalid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MoveProxy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>a7748252811f3c575015931399cbe4daa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>a44ab57dce3c42b0a5847a64e489a71ce</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFatAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>adf4676b1c34a57b4451bcbeaebe65687</Anchor>
    <Abstract>Get the fat AABB for a proxy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Query</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>adf70aee89b4692fc79d65b1f54308585</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>abd7a5c6a5bc109dbbdb0ec3aae039648</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Validate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>abfac96c615b08406cba3e53b39800f1c</Anchor>
    <Abstract>Validate this tree. For testing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>add7e09cdf279e7c0031da9dfd4cdf4db</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMaxBalance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>ae02c45d1a68b42e59d170438ddbb7977</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAreaRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>ad78282a720c451e032b43c34cba02f1a</Anchor>
    <Abstract>Get the ratio of the sum of the node areas to the root area.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RebuildBottomUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2DynamicTree</Scope>
    </TokenIdentifier>
    <Path>classb2_dynamic_tree.html</Path>
    <Anchor>abd146017cfec1cf5ea7b87331f30a3ff</Anchor>
    <Abstract>Build an optimal tree. Very expensive. For testing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2EdgeAndCircleContact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2EdgeAndCircleContact</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_and_circle_contact.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeAndCircleContact</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_and_circle_contact.html</Path>
    <Anchor>a8f083c4c7c7da83eae38975164fd1452</Anchor>
    <Abstract>Evaluate this contact with your own manifold and transforms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2EdgeAndPolygonContact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2EdgeAndPolygonContact</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_and_polygon_contact.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeAndPolygonContact</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_and_polygon_contact.html</Path>
    <Anchor>a5f360f5f0b1d367beb517ba9f380c84b</Anchor>
    <Abstract>Evaluate this contact with your own manifold and transforms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2EdgeShape</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <DeclaredIn>b2EdgeShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>a67dd3b17630a600033cb4380697a4e9d</Anchor>
    <Abstract>Set this as an isolated edge.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>a24b5aaf94f659ea962dbfb1df220542d</Anchor>
    <Abstract>Implement b2Shape.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetChildCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>a8c15a5a5aa8e7dc69826be17aaa82293</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>a28a977f82e4bc1cf60a3143ba5636c22</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>aefbae6b3840f486b22ffecee7d0d15fd</Anchor>
    <Abstract>Implement b2Shape.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>a30f601c611eb549f9f657eee89d82f9f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeMass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>a3a305707a07ca3dffa6f2eaff3735dff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_vertex1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>a916cf02a752ff1a70db35b2edaf19bb4</Anchor>
    <Abstract>These are the edge vertices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_vertex0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2EdgeShape</Scope>
    </TokenIdentifier>
    <Path>classb2_edge_shape.html</Path>
    <Anchor>a907c9829484cc1ba7527ab368e9fdf93</Anchor>
    <Abstract>Optional adjacent vertices. These are used for smooth collision.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Filter</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Filter</Scope>
    </TokenIdentifier>
    <Path>structb2_filter.html</Path>
    <Abstract>This holds contact filtering data.</Abstract>
    <DeclaredIn>b2Fixture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>categoryBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Filter</Scope>
    </TokenIdentifier>
    <Path>structb2_filter.html</Path>
    <Anchor>a368907397168d39af8b4fc5201d50bba</Anchor>
    <Abstract>The collision category bits. Normally you would just set one bit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maskBits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Filter</Scope>
    </TokenIdentifier>
    <Path>structb2_filter.html</Path>
    <Anchor>a533cccf85e3ba3d9e3700d73b819f6e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>groupIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Filter</Scope>
    </TokenIdentifier>
    <Path>structb2_filter.html</Path>
    <Anchor>a572a8f4a1672f6d5d71123a35e872950</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Fixture</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <DeclaredIn>b2Fixture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>ab0e1d6bc1c42e6f779e77db408ab2d24</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>aaa2b73fa212fa53b1c800cccd7a1d31e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a6198a81dcee0fe814d730383ebfa7038</Anchor>
    <Abstract>Set if this fixture is a sensor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a91758c9dca818ca45f3f6427c7e3fc19</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFilterData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a2c5e0d12c174927a4ad550459be334ad</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFilterData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a5bc271a6e8082e727b053aead1ae86a9</Anchor>
    <Abstract>Get the contact filtering data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Refilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a45d3320f94811d67383c48466165fa26</Anchor>
    <Abstract>Call this if you want to establish collision that was previously disabled by b2ContactFilter::ShouldC...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetBody</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a9d6536ef274d768e86ab0a8330921535</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetNext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a0241952461f6f1a04a3c850306390fd2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a57247425e7c859d7653eec417ec83cdc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a3db7f89ef4493247d922fe3d96351ad9</Anchor>
    <Abstract>Set the user data. Use this to store your application specific data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>ab875147c7a9df4ff94d224f6aa81a7a9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a614e84f47e8b32b503fa719099ecba79</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMassData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>adbfb9b64006abaaa0ca01e6d9e06deea</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetDensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>ad4e1d9323103975c8931d022b952d04a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetDensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a5deb4acfb464f3dcb668f081a2c44ff4</Anchor>
    <Abstract>Get the density of this fixture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetFriction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a31253b90b87f1fec7256bba92aeb4645</Anchor>
    <Abstract>Get the coefficient of friction.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFriction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>ad0cd91eef5858c8ef1d6b62cc2a34ea2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetRestitution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a6ce4d949ffff6201a117f1e3833953f8</Anchor>
    <Abstract>Get the coefficient of restitution.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetRestitution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a19c507332e4f7bd04a05f00426f11ee4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>abdc2a225110310a481a78cdb14000ca7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Fixture</Scope>
    </TokenIdentifier>
    <Path>classb2_fixture.html</Path>
    <Anchor>a57485e73a2063060e320c7176676cd5e</Anchor>
    <Abstract>Dump this fixture to the log file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2FixtureDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <DeclaredIn>b2Fixture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2FixtureDef</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <Anchor>aa34ba06bcf0d6d981931a83cf124a602</Anchor>
    <Abstract>The constructor sets the default fixture definition values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <Anchor>a1e41753d89abf3443e7897e2498a3240</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <Anchor>a4f77ef2b2585a40899b61faf53db1093</Anchor>
    <Abstract>Use this to store application specific fixture data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>friction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <Anchor>a66081c8d0e12d4bdb0b341fb97b46eb6</Anchor>
    <Abstract>The friction coefficient, usually in the range [0,1].</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restitution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <Anchor>ad7ee26656e4749f7b548d2cc0cf9f168</Anchor>
    <Abstract>The restitution (elasticity) usually in the range [0,1].</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>density</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <Anchor>a6e27d733789a35aa689af2b30a1de0ff</Anchor>
    <Abstract>The density, usually in kg/m^2.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <Anchor>ac8cfcc6208663c92861eaab3b3fdc57e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>filter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FixtureDef</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_def.html</Path>
    <Anchor>a4c3e493a13d11ab27fcc2eee9f52fd61</Anchor>
    <Abstract>Contact filtering data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2FixtureProxy</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2FixtureProxy</Scope>
    </TokenIdentifier>
    <Path>structb2_fixture_proxy.html</Path>
    <Abstract>This proxy is used internally to connect fixtures to the broad-phase.</Abstract>
    <DeclaredIn>b2Fixture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2FrictionJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <DeclaredIn>b2FrictionJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>a01918be429fa5d37d51fda4fe0cc639b</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>ac519021aadea0faf1df01f232023c745</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>ae646d8a191e490f690b748f057cdd90b</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>a49479d4af9c4bffa0b146d153c78512c</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>a91ef023d373f775c401ae359f6f74d60</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>acd57698eb559d36eeac6df00dfd8b89f</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMaxForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>a7936d852b5ad71dc92efc397865dda41</Anchor>
    <Abstract>Set the maximum friction force in N.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMaxForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>af3abd33af3943197c89375057302fd0d</Anchor>
    <Abstract>Get the maximum friction force in N.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMaxTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>a9e3aaf485dc86a378bb62ee78cea43aa</Anchor>
    <Abstract>Set the maximum friction torque in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMaxTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>ae59d07030bded21f46a6a432553e71c1</Anchor>
    <Abstract>Get the maximum friction torque in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2FrictionJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_friction_joint.html</Path>
    <Anchor>a9a27084c9f4a7ea0a4f590f687ac1edb</Anchor>
    <Abstract>Dump joint to dmLog.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2FrictionJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2FrictionJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_friction_joint_def.html</Path>
    <Abstract>Friction joint definition.</Abstract>
    <DeclaredIn>b2FrictionJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2FrictionJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_friction_joint_def.html</Path>
    <Anchor>aee104f2aeb34dec4e17e3c52a98f7915</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FrictionJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_friction_joint_def.html</Path>
    <Anchor>a00b246e60ae282a956a42b662993e92a</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FrictionJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_friction_joint_def.html</Path>
    <Anchor>ad6d5a5614a7ac77b13e53fda3e32ed05</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FrictionJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_friction_joint_def.html</Path>
    <Anchor>ad30e97a80790d4ca64bac7a1fa7d1b35</Anchor>
    <Abstract>The maximum friction force in N.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2FrictionJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_friction_joint_def.html</Path>
    <Anchor>a61adfb0ee7c0ed4cb8feee8304c16ef6</Anchor>
    <Abstract>The maximum friction torque in N-m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2GearJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <DeclaredIn>b2GearJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <Anchor>a2b5cdcb78c7ac3df4bd47e4195443a05</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <Anchor>a84b9aedb8918a98b84032c9f0f823e13</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <Anchor>ad415f3db70ba3e60a132ef668c263713</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <Anchor>ae2c4b1ae1cf00f14331332c4fe9ae964</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJoint1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <Anchor>acd3fb38982319f387d1eb7aeddd5311f</Anchor>
    <Abstract>Get the first joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJoint2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <Anchor>af1673b8edd80f3ae3b868c3a18b7b058</Anchor>
    <Abstract>Get the second joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <Anchor>a21c867bdc00c15ade2f399d370f92636</Anchor>
    <Abstract>Set/Get the gear ratio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2GearJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_gear_joint.html</Path>
    <Anchor>a1620b5a39e9da2b40d324c45736ad322</Anchor>
    <Abstract>Dump joint to dmLog.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2GearJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2GearJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_gear_joint_def.html</Path>
    <DeclaredIn>b2GearJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joint1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2GearJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_gear_joint_def.html</Path>
    <Anchor>ae42d33b54291a9e256f3810926883473</Anchor>
    <Abstract>The first revolute/prismatic joint attached to the gear joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joint2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2GearJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_gear_joint_def.html</Path>
    <Anchor>a73cf056fe40e63355073a01b097f4c82</Anchor>
    <Abstract>The second revolute/prismatic joint attached to the gear joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ratio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2GearJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_gear_joint_def.html</Path>
    <Anchor>a57e9f4b6ce1ddc8b89b8455515f69323</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2GrowableStack</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2GrowableStack</Scope>
    </TokenIdentifier>
    <Path>classb2_growable_stack.html</Path>
    <DeclaredIn>b2GrowableStack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Island</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Island</Scope>
    </TokenIdentifier>
    <Path>classb2_island.html</Path>
    <Abstract>This is an internal class.</Abstract>
    <DeclaredIn>b2Island.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Jacobian</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Jacobian</Scope>
    </TokenIdentifier>
    <Path>structb2_jacobian.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Joint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <DeclaredIn>b2Joint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a37a2ca3f0d41c6903d2cc73757f02be2</Anchor>
    <Abstract>Get the type of the concrete joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetBodyA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a2ed5eca3dbdce48665c14452b280613f</Anchor>
    <Abstract>Get the first body attached to this joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetBodyB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a700b3d4c87f34f456151b9598e4641a0</Anchor>
    <Abstract>Get the second body attached to this joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>abe46ca3aad5db73909a9b5a7b2117447</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a88e947c65d4ea26fe539f02a8cb7f7a9</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a7e0eddefb9b69ad050b8ef6425838a74</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>ae355e441c2aa842777dc04e24f15ced0</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetNext</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a1a0e2137b631010750c728cb4e276e5d</Anchor>
    <Abstract>Get the next joint the world joint list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a505ab02c234f1cc20aa3375f3ab7b587</Anchor>
    <Abstract>Get the user data pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a492f2d02496437572aaec6013ebdc1c8</Anchor>
    <Abstract>Set the user data pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a825d3a6abb32014f31fd622f2bfc0363</Anchor>
    <Abstract>Short-cut function to determine if either body is inactive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetCollideConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>a09c6bdfa5842522ba381bac8dd559f4d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Joint</Scope>
    </TokenIdentifier>
    <Path>classb2_joint.html</Path>
    <Anchor>abd35e7316017ad9a40d5dbf9b5ba3f36</Anchor>
    <Abstract>Dump this joint to the log file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2JointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2JointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_def.html</Path>
    <Abstract>Joint definitions are used to construct joints.</Abstract>
    <DeclaredIn>b2Joint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>type</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_def.html</Path>
    <Anchor>a470f2879b24adb05facbd49f338856fb</Anchor>
    <Abstract>The joint type is set automatically for concrete joint types.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_def.html</Path>
    <Anchor>a07eb150daaaa52fc09c3bcf402b295fe</Anchor>
    <Abstract>Use this to attach application specific data to your joints.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bodyA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_def.html</Path>
    <Anchor>a8cd54c93da396be75a9788f2c6897f05</Anchor>
    <Abstract>The first attached body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bodyB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_def.html</Path>
    <Anchor>aa4f4dee2fbcd12187b19506b60e68e3d</Anchor>
    <Abstract>The second attached body.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>collideConnected</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_def.html</Path>
    <Anchor>aef099a1f89b64e230173b6016848ea9b</Anchor>
    <Abstract>Set this flag to true if the attached bodies should collide.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2JointEdge</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2JointEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_edge.html</Path>
    <DeclaredIn>b2Joint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>other</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_edge.html</Path>
    <Anchor>a64aef21fb91211871de8796baecccb95</Anchor>
    <Abstract>provides quick access to the other body attached.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>joint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_edge.html</Path>
    <Anchor>ab5bac5d495af1280c50271f56a221503</Anchor>
    <Abstract>the joint</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prev</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_edge.html</Path>
    <Anchor>acc3621e38d9664db2805e0fc29d71335</Anchor>
    <Abstract>the previous joint edge in the body&amp;#39;s joint list</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>next</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2JointEdge</Scope>
    </TokenIdentifier>
    <Path>structb2_joint_edge.html</Path>
    <Anchor>a3d17286bc697bb620ee151e4cd07438c</Anchor>
    <Abstract>the next joint edge in the body&amp;#39;s joint list</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2LineJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <DeclaredIn>b2LineJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>aa085af07bd2e27768c58be9b62894458</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>a929b129ad6208956fe4eba3a43692764</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>a62f5d04249865beaad5c5c75517ff9e5</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>a5b2f457c36fe8c037d1a7121483b48e1</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointTranslation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>ac6d9bc432f0a91e0d075054f1a72940f</Anchor>
    <Abstract>Get the current joint translation, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>af9d88e37167dc14b898d1c4fbb245073</Anchor>
    <Abstract>Get the current joint translation speed, usually in meters per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsLimitEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>ae8c53e505e763b73ebad6fb495735de4</Anchor>
    <Abstract>Is the joint limit enabled?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>aaf8d692c005976419d131a1365995675</Anchor>
    <Abstract>Enable/disable the joint limit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLowerLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>ad1e39ae5c29d800050eddcfd0e841285</Anchor>
    <Abstract>Get the lower joint limit, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetUpperLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>ad0143cbf09ae63b1326af331c7539453</Anchor>
    <Abstract>Get the upper joint limit, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetLimits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>acfc878589b4e552ae4bff6e78f27e4c0</Anchor>
    <Abstract>Set the joint limits, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsMotorEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>a1f2321787c0a3db2b4f99f00ab60b1fe</Anchor>
    <Abstract>Is the joint motor enabled?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>a626e97f0073bebf74310c0f6bb9b0992</Anchor>
    <Abstract>Enable/disable the joint motor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMotorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>a67662e5a5ef912339d95ab3fb3abd3fe</Anchor>
    <Abstract>Set the motor speed, usually in meters per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMotorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>a57019031344962585e2bc09e153ff5e3</Anchor>
    <Abstract>Get the motor speed, usually in meters per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMaxMotorForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>ae0de07b7a5ea8bdda5db6a5074cf43b4</Anchor>
    <Abstract>Set/Get the maximum motor force, usually in N.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMotorForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2LineJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_line_joint.html</Path>
    <Anchor>aec9130652676b9f08a521596b27659ed</Anchor>
    <Abstract>Get the current motor force, usually in N.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2LineJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <DeclaredIn>b2LineJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>a30147d732c0b47641b94826cd1793a5e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>ae6f279d10b200490c86e3ae7e3ee8cb1</Anchor>
    <Abstract>The local anchor point relative to body1&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>a4ed461be2a9dd186aa40caf0c1a4da44</Anchor>
    <Abstract>The local anchor point relative to body2&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAxisA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>a65a789e7de1b0d498a58fdec33db030e</Anchor>
    <Abstract>The local translation axis in body1.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>a7170e8220ea288e16942818e5047915e</Anchor>
    <Abstract>Enable/disable the joint limit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowerTranslation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>a2b7386e6b142bdb4f5dd533b5f2cc2aa</Anchor>
    <Abstract>The lower translation limit, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upperTranslation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>a9c7d61a2faf9d3ea0e100509131ee988</Anchor>
    <Abstract>The upper translation limit, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>a62bd92436cffcb038f7125a0899b1a1c</Anchor>
    <Abstract>Enable/disable the joint motor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxMotorForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>ade43dd25a96aee4b7d6c7c6b2306c17d</Anchor>
    <Abstract>The maximum motor torque, usually in N-m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2LineJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_line_joint_def.html</Path>
    <Anchor>af20dff10875012d19cea7b34b3b704a6</Anchor>
    <Abstract>The desired motor speed in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Manifold</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Manifold</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold.html</Path>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>points</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Manifold</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold.html</Path>
    <Anchor>ab8021128e9792cc7391a8804ea02173d</Anchor>
    <Abstract>the points of contact</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Manifold</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold.html</Path>
    <Anchor>a3604e9fef2a03347c5649c71a9fd4c79</Anchor>
    <Abstract>not use for Type::e_points</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Manifold</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold.html</Path>
    <Anchor>a8825cea31b27dbbaf22c13c3070870d5</Anchor>
    <Abstract>usage depends on manifold type</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Manifold</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold.html</Path>
    <Anchor>abf59ff6fa36bed34b0242ad54951a696</Anchor>
    <Abstract>the number of manifold points</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2ManifoldPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2ManifoldPoint</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold_point.html</Path>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ManifoldPoint</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold_point.html</Path>
    <Anchor>ab3616990e7d1644deeeb691246094bfa</Anchor>
    <Abstract>usage depends on manifold type</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalImpulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ManifoldPoint</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold_point.html</Path>
    <Anchor>af4218c2359cb7762cd4e9d8ecefab173</Anchor>
    <Abstract>the non-penetration impulse</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tangentImpulse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ManifoldPoint</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold_point.html</Path>
    <Anchor>a0ac5375b1fc4675a0073129f56aa62c9</Anchor>
    <Abstract>the friction impulse</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2ManifoldPoint</Scope>
    </TokenIdentifier>
    <Path>structb2_manifold_point.html</Path>
    <Anchor>afa7ec272b2b27abe129540f8fbe57fc5</Anchor>
    <Abstract>uniquely identifies a contact point between two shapes</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2MassData</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2MassData</Scope>
    </TokenIdentifier>
    <Path>structb2_mass_data.html</Path>
    <Abstract>This holds the mass data computed for a shape.</Abstract>
    <DeclaredIn>b2Shape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2MassData</Scope>
    </TokenIdentifier>
    <Path>structb2_mass_data.html</Path>
    <Anchor>aea85d9595a38d2eed05b8d2ea80d97b1</Anchor>
    <Abstract>The mass of the shape, usually in kilograms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2MassData</Scope>
    </TokenIdentifier>
    <Path>structb2_mass_data.html</Path>
    <Anchor>a1d59bebc7030c4dded0c2febc57ebdd7</Anchor>
    <Abstract>The position of the shape&amp;#39;s centroid relative to the shape&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>I</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2MassData</Scope>
    </TokenIdentifier>
    <Path>structb2_mass_data.html</Path>
    <Anchor>ad2d06e96e2d79d895df16ae0e5fe0376</Anchor>
    <Abstract>The rotational inertia of the shape about the local origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Mat22</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Mat22</Scope>
    </TokenIdentifier>
    <Path>structb2_mat22.html</Path>
    <Abstract>A 2-by-2 matrix. Stored in column-major order.</Abstract>
    <DeclaredIn>b2Math.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Mat22</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat22</Scope>
    </TokenIdentifier>
    <Path>structb2_mat22.html</Path>
    <Anchor>ac3e10f6d457c8dab9062ba378f66bc4d</Anchor>
    <Abstract>The default constructor does nothing (for performance).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Mat22</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat22</Scope>
    </TokenIdentifier>
    <Path>structb2_mat22.html</Path>
    <Anchor>abd674c6d92e26962977f34bcd92ff24d</Anchor>
    <Abstract>Construct this matrix using columns.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Mat22</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat22</Scope>
    </TokenIdentifier>
    <Path>structb2_mat22.html</Path>
    <Anchor>a41d5d8743bda32cb8c6e212528934810</Anchor>
    <Abstract>Construct this matrix using scalars.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat22</Scope>
    </TokenIdentifier>
    <Path>structb2_mat22.html</Path>
    <Anchor>aed3bee1de38a0b3f36e21c90faa24112</Anchor>
    <Abstract>Initialize this matrix using columns.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetIdentity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat22</Scope>
    </TokenIdentifier>
    <Path>structb2_mat22.html</Path>
    <Anchor>a7192f063b771ac9ded060e41df890509</Anchor>
    <Abstract>Set this to the identity matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat22</Scope>
    </TokenIdentifier>
    <Path>structb2_mat22.html</Path>
    <Anchor>aaeae95f61cf3171ffb94703980e3594b</Anchor>
    <Abstract>Set this matrix to all zeros.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Solve</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat22</Scope>
    </TokenIdentifier>
    <Path>structb2_mat22.html</Path>
    <Anchor>ab511ad33f5abf87351581842628a9dc3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Mat33</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Mat33</Scope>
    </TokenIdentifier>
    <Path>structb2_mat33.html</Path>
    <Abstract>A 3-by-3 matrix. Stored in column-major order.</Abstract>
    <DeclaredIn>b2Math.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Mat33</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat33</Scope>
    </TokenIdentifier>
    <Path>structb2_mat33.html</Path>
    <Anchor>a1f4d7ddf1c8a202fc08ec64dfe191463</Anchor>
    <Abstract>The default constructor does nothing (for performance).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Mat33</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat33</Scope>
    </TokenIdentifier>
    <Path>structb2_mat33.html</Path>
    <Anchor>a36d99a037008776c8d09fe0aeb5c759c</Anchor>
    <Abstract>Construct this matrix using columns.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat33</Scope>
    </TokenIdentifier>
    <Path>structb2_mat33.html</Path>
    <Anchor>a42fc6953b025e1c8b59717d0ee7accde</Anchor>
    <Abstract>Set this matrix to all zeros.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Solve33</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat33</Scope>
    </TokenIdentifier>
    <Path>structb2_mat33.html</Path>
    <Anchor>a478872c7b6a3bedd13fbedd3ec7a2edb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Solve22</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat33</Scope>
    </TokenIdentifier>
    <Path>structb2_mat33.html</Path>
    <Anchor>a2580ac2afadc48028a63ed4c8a1f16bc</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetInverse22</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat33</Scope>
    </TokenIdentifier>
    <Path>structb2_mat33.html</Path>
    <Anchor>a9eb5090b15d08ab495458adfec50e7cb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetSymInverse33</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Mat33</Scope>
    </TokenIdentifier>
    <Path>structb2_mat33.html</Path>
    <Anchor>a501f85edde8f080e4e9ecff0ec2ee27e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2MouseJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <DeclaredIn>b2MouseJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>a9db1c131fde2d11e61c6ccee9c28219b</Anchor>
    <Abstract>Implements b2Joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>a0db991ec36238105eb481f75e9b6161a</Anchor>
    <Abstract>Implements b2Joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>ab8e07dbed9d24c1c046d1ede60930c52</Anchor>
    <Abstract>Implements b2Joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>a68efbc617aa7f0a41578e0aea988d662</Anchor>
    <Abstract>Implements b2Joint.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>a96f34c1c990407eddbadf07ae359b1f3</Anchor>
    <Abstract>Use this to update the target point.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMaxForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>a4beba6ea0827960fac2474563591c03a</Anchor>
    <Abstract>Set/get the maximum force in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>a8b37706535923637ca280c5a0467b14d</Anchor>
    <Abstract>Set/get the frequency in Hertz.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetDampingRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>a648c8f3ecb82f4887c0eefcfe48cbd37</Anchor>
    <Abstract>Set/get the damping ratio (dimensionless).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2MouseJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_mouse_joint.html</Path>
    <Anchor>ae3d3a46a0032c0e50f346e7f7129617f</Anchor>
    <Abstract>The mouse joint does not support dumping.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2MouseJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2MouseJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_mouse_joint_def.html</Path>
    <DeclaredIn>b2MouseJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2MouseJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_mouse_joint_def.html</Path>
    <Anchor>aa1b76f72df9aca8d42bdc3e9922e310a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2MouseJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_mouse_joint_def.html</Path>
    <Anchor>ae9c52b3afda8ed006eb62fad163cdc3b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frequencyHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2MouseJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_mouse_joint_def.html</Path>
    <Anchor>a61e9017eb928608f75edddb6e0ca7f63</Anchor>
    <Abstract>The response speed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dampingRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2MouseJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_mouse_joint_def.html</Path>
    <Anchor>aee42888dab204a5c5745ba61acbfb7d6</Anchor>
    <Abstract>The damping ratio. 0 = no damping, 1 = critical damping.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2NullContact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2NullContact</Scope>
    </TokenIdentifier>
    <Path>classb2_null_contact.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Pair</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Pair</Scope>
    </TokenIdentifier>
    <Path>structb2_pair.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2PolygonAndCircleContact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2PolygonAndCircleContact</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_and_circle_contact.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonAndCircleContact</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_and_circle_contact.html</Path>
    <Anchor>ac24d495022aae853cb573f86c8d86c3d</Anchor>
    <Abstract>Evaluate this contact with your own manifold and transforms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2PolygonContact</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2PolygonContact</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_contact.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonContact</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_contact.html</Path>
    <Anchor>ae75f78bb52c76fc4fffda4d91e62d354</Anchor>
    <Abstract>Evaluate this contact with your own manifold and transforms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2PolygonShape</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <DeclaredIn>b2PolygonShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>ae9ae1676632d6b20f787e1207ed2797f</Anchor>
    <Abstract>Implement b2Shape.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetChildCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>ae844375297d19744e01a37b397a5baba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>a8aa13a7584b58f08be4d84181b5a86a8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetAsBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>a6bb90df8b4a40d1c53b64cc352a855dd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetAsBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>a890690250115483da6c7d69829be087e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>a69ccc2f671394b3cc1a00a16ef36b12b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>ac13bded10d09c341f64aaa2750dda6b5</Anchor>
    <Abstract>Implement b2Shape.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>a00e225b0321bf6bb231a554036ffdf23</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeMass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>ad86c4c2a83a7122599462da83bf35389</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetVertexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>ae220f24c42eff4aef4cd452676ca2ced</Anchor>
    <Abstract>Get the vertex count.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PolygonShape</Scope>
    </TokenIdentifier>
    <Path>classb2_polygon_shape.html</Path>
    <Anchor>a88cdb687ec7dc0cbcf4bd25fd37f4da1</Anchor>
    <Abstract>Get a vertex by index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Position</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Position</Scope>
    </TokenIdentifier>
    <Path>structb2_position.html</Path>
    <Abstract>This is an internal structure.</Abstract>
    <DeclaredIn>b2TimeStep.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2PrismaticJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <DeclaredIn>b2PrismaticJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>ae6ccc4b3ceba180e4381fe4b821ef8d1</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>aa2e00a1801989c3b6bc67bf47092b531</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a9e2a6103c1ff57e65d524b42f72b09e0</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a59b419ccec1a5a4b80d6664d03bd256e</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a8453728991590d064f75ac9ee43eb0cb</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a5591358eced21a8845744a8c47b7df9d</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAxisA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>ab1aff69853c5ddb89ed8efdf8a0f4376</Anchor>
    <Abstract>The local joint axis relative to bodyA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReferenceAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>ae9e0a48367f191b2dd6a5bc05364a372</Anchor>
    <Abstract>Get the reference angle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointTranslation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>ade994ac79315258c80bccceef371df57</Anchor>
    <Abstract>Get the current joint translation, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a221aa1c6253686c96a02ecdd99c84b4c</Anchor>
    <Abstract>Get the current joint translation speed, usually in meters per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsLimitEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>afb109fd7f3efbf44eae4b7961169bf9f</Anchor>
    <Abstract>Is the joint limit enabled?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a6d419afe7bd4b0e36d2e4607df7f79f2</Anchor>
    <Abstract>Enable/disable the joint limit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLowerLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>ad58727abc63a820e6d93983408a9508b</Anchor>
    <Abstract>Get the lower joint limit, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetUpperLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>ac72bdcf5108d474d3f11e86773a9a471</Anchor>
    <Abstract>Get the upper joint limit, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetLimits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a82a220e6d5a212c1924882e0855b0bef</Anchor>
    <Abstract>Set the joint limits, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsMotorEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a236650664554a4d81f8644e9a9d19c65</Anchor>
    <Abstract>Is the joint motor enabled?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a4a7fd079de49f7ed5aa4a5d8d90be2a2</Anchor>
    <Abstract>Enable/disable the joint motor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMotorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a602ef7a6ca4fca55d011f1b38ab5a6c3</Anchor>
    <Abstract>Set the motor speed, usually in meters per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMotorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a20f969fefb08d86728bd1f0cf03e121f</Anchor>
    <Abstract>Get the motor speed, usually in meters per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMaxMotorForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>aa7817474aef15ca4815341479ac590e2</Anchor>
    <Abstract>Set the maximum motor force, usually in N.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMotorForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>aee80c02627750559fc382422804a30e6</Anchor>
    <Abstract>Get the current motor force given the inverse time step, usually in N.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PrismaticJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_prismatic_joint.html</Path>
    <Anchor>a1d8e01f0c7ca9e1840f1f17c17dda7db</Anchor>
    <Abstract>Dump to b2Log.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2PrismaticJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <DeclaredIn>b2PrismaticJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>ae60043bc22b077e8c59ab248dc34652f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>abb51df8daff7a55f47adc83e4f7fa5b9</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>a5acc1f2f14d1b659fc9d804ab1baf4a3</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAxisA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>af36fdbcedca5a392a2649cd235c42676</Anchor>
    <Abstract>The local translation unit axis in bodyA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>aa84b43d08e6e11b4daa0c86f46094463</Anchor>
    <Abstract>The constrained angle between the bodies: bodyB_angle - bodyA_angle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>aa61a03b68caac62a5cf66354f6756eae</Anchor>
    <Abstract>Enable/disable the joint limit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowerTranslation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>ac0a0e2a669d640ebea354895fe6a9fb6</Anchor>
    <Abstract>The lower translation limit, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upperTranslation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>ae3eac123c7fe543071bdfcd1a6942350</Anchor>
    <Abstract>The upper translation limit, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>a58ac79a54a8110d3a745e1d6d36990dc</Anchor>
    <Abstract>Enable/disable the joint motor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxMotorForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>aabeec48af1e49c7f9fed5e0bc8270a1b</Anchor>
    <Abstract>The maximum motor torque, usually in N-m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PrismaticJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_prismatic_joint_def.html</Path>
    <Anchor>ac4bdaea15653657e724a04fc60f3f235</Anchor>
    <Abstract>The desired motor speed in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Profile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Profile</Scope>
    </TokenIdentifier>
    <Path>structb2_profile.html</Path>
    <Abstract>Profiling data. Times are in milliseconds.</Abstract>
    <DeclaredIn>b2TimeStep.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2PulleyJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <DeclaredIn>b2PulleyJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>a05ac0d0d927e9541f08b07cb1bf9ec56</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>a5cc3596f683d621b9a885c2569ecd452</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>a38c174bf1cf1011063ff4c16556b331e</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>a418b200055623474c44742b1342dd278</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetGroundAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>a19eefa28d2647882406ea9bfe2850a9e</Anchor>
    <Abstract>Get the first ground anchor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetGroundAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>a1b49d0dbce802f19711a9ab6d7dadfee</Anchor>
    <Abstract>Get the second ground anchor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLengthA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>a6b4c2e5cb4f5da48fcb074c7b5988084</Anchor>
    <Abstract>Get the current length of the segment attached to bodyA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLengthB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>abc7f31a35c6fb32647fd15d57e4ce60c</Anchor>
    <Abstract>Get the current length of the segment attached to bodyB.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>a625685e60d95b7c5a725e8586d146752</Anchor>
    <Abstract>Get the pulley ratio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2PulleyJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_pulley_joint.html</Path>
    <Anchor>ad12d0e03b5d07b2f8af1005c95c67aa2</Anchor>
    <Abstract>Dump joint to dmLog.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2PulleyJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <DeclaredIn>b2PulleyJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <Anchor>abef614a93562b82aa3b5f8cac17d1ce8</Anchor>
    <Abstract>Initialize the bodies, anchors, lengths, max lengths, and ratio using the world anchors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>groundAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <Anchor>aae77c020ce4629ab9e03560e28aa853d</Anchor>
    <Abstract>The first ground anchor in world coordinates. This point never moves.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>groundAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <Anchor>aa412b9f3bffd1fb69ace14f9b3e03b82</Anchor>
    <Abstract>The second ground anchor in world coordinates. This point never moves.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <Anchor>ad7677a4ad02a6e7cb8699fc5012eac3e</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <Anchor>aed3f9c9f5f4145ceb32e7e164de73144</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lengthA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <Anchor>a51d945882c1d7a78af2b0e9ffb31a33b</Anchor>
    <Abstract>The a reference length for the segment attached to bodyA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lengthB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <Anchor>a5857d5b5b9880b6c8201ce3ee8c3eef0</Anchor>
    <Abstract>The a reference length for the segment attached to bodyB.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ratio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2PulleyJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_pulley_joint_def.html</Path>
    <Anchor>af35074246aeacbf239c11682642b31f5</Anchor>
    <Abstract>The pulley ratio, used to simulate a block-and-tackle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2QueryCallback</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2QueryCallback</Scope>
    </TokenIdentifier>
    <Path>classb2_query_callback.html</Path>
    <DeclaredIn>b2WorldCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReportFixture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2QueryCallback</Scope>
    </TokenIdentifier>
    <Path>classb2_query_callback.html</Path>
    <Anchor>a187dd04dd0f5164fb05c2ce2cbfd9ee5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2RayCastCallback</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2RayCastCallback</Scope>
    </TokenIdentifier>
    <Path>classb2_ray_cast_callback.html</Path>
    <DeclaredIn>b2WorldCallbacks.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ReportFixture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RayCastCallback</Scope>
    </TokenIdentifier>
    <Path>classb2_ray_cast_callback.html</Path>
    <Anchor>a658d5c8e89e0c73230cc8bddade4f3a4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2RayCastInput</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2RayCastInput</Scope>
    </TokenIdentifier>
    <Path>structb2_ray_cast_input.html</Path>
    <Abstract>Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).</Abstract>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2RayCastOutput</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2RayCastOutput</Scope>
    </TokenIdentifier>
    <Path>structb2_ray_cast_output.html</Path>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2RevoluteJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <DeclaredIn>b2RevoluteJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a7f266986c12009973fd74c9828b6c236</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a3a67ad189b29ea8ab6602a28697807f6</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>af270a3029b2573bf85cde345c22d65ab</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a985f788cffd53d7bb926b11cf77734e4</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReferenceAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>acfe881247b1f1f8f12aefd3a8f0cfd00</Anchor>
    <Abstract>Get the reference angle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>ab20fc12ce5ad5d84a032eb613c80764a</Anchor>
    <Abstract>Get the current joint angle in radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a48e4db13c187af159587d731656aa0c4</Anchor>
    <Abstract>Get the current joint angle speed in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsLimitEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a7711afbfbdba4451d2dbfa8e55b9ded8</Anchor>
    <Abstract>Is the joint limit enabled?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a56bdfdd04e906e52d0258f6a481b9093</Anchor>
    <Abstract>Enable/disable the joint limit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLowerLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a0f33656869e46ec9405f42d68e858220</Anchor>
    <Abstract>Get the lower joint limit in radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetUpperLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a9bb683118879611e84e4cb26bdc8d39f</Anchor>
    <Abstract>Get the upper joint limit in radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetLimits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a32f9393d8a6b993fd523f0f643c28107</Anchor>
    <Abstract>Set the joint limits in radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsMotorEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a9477b305db080e17dce8f2c6da0babb0</Anchor>
    <Abstract>Is the joint motor enabled?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a80ed5a07d9a0e07d010808a73ffae6ff</Anchor>
    <Abstract>Enable/disable the joint motor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMotorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a56f60bb1ea69048c8a455da49d62bf65</Anchor>
    <Abstract>Set the motor speed in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMotorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a5ebdb2b410725d2c7999d8fce792e0da</Anchor>
    <Abstract>Get the motor speed in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMaxMotorTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a41779d7ec05be33e6368ef00123a3581</Anchor>
    <Abstract>Set the maximum motor torque, usually in N-m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a1e5d6eb28f3f35e825cfc42dbd23d66e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a85cdf204bf80dc0a4df6536e2e9a941e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMotorTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>a64579cb1db5e9674ec17244133c72920</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RevoluteJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_revolute_joint.html</Path>
    <Anchor>aa9d88f5476c77a5c4a6ef5b2ad0d3e6f</Anchor>
    <Abstract>Dump to b2Log.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2RevoluteJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <DeclaredIn>b2RevoluteJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>a6401b2a663533415d032a525e4fa2806</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>a76337d07aa63232a7b20d50decc862ae</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>a3f33bc1d9f6c22043a5ff2f1d89f04e0</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>a1858d897d5fea04c5e606a1ff73f64f8</Anchor>
    <Abstract>The bodyB angle minus bodyA angle in the reference state (radians).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableLimit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>a2eaefc5fc5caf879cfd59ebcd852b756</Anchor>
    <Abstract>A flag to enable joint limits.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lowerAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>a24d0b2638a01405c77bd1c0de3e53de8</Anchor>
    <Abstract>The lower angle for the joint limit (radians).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upperAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>a692cfe333ad12afd5753a6ec54e39a66</Anchor>
    <Abstract>The upper angle for the joint limit (radians).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>aa94d9e66be9f03818d0cfbd9c70b2996</Anchor>
    <Abstract>A flag to enable the joint motor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>aced7cf768f4dcc3561576a39c7b92ec4</Anchor>
    <Abstract>The desired motor speed. Usually in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxMotorTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RevoluteJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_revolute_joint_def.html</Path>
    <Anchor>a9fc1b67fe6d1bc31f88cc2cfd681fe30</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Rope</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Rope</Scope>
    </TokenIdentifier>
    <Path>classb2_rope.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2RopeDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2RopeDef</Scope>
    </TokenIdentifier>
    <Path>structb2_rope_def.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>k2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RopeDef</Scope>
    </TokenIdentifier>
    <Path>structb2_rope_def.html</Path>
    <Anchor>a89de5d2c15afacd41722c76523e33826</Anchor>
    <Abstract>Stretching stiffness.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>k3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RopeDef</Scope>
    </TokenIdentifier>
    <Path>structb2_rope_def.html</Path>
    <Anchor>a3f4749e0a309b53daf804c75adfb4ba8</Anchor>
    <Abstract>Bending stiffness. Values above 0.5 can make the simulation blow up.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2RopeJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <DeclaredIn>b2RopeJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <Anchor>a046c6f0bc73800716c669a2b955b3c05</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <Anchor>a14a8ef7c16e0d6d874cdfb986d0eb8f0</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <Anchor>afe0acc77e40b62133547897a6d01b7e6</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <Anchor>abb7baf596f13ff5a76ff657ad6d3232c</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <Anchor>aa423bbe186d46bff0b50ede8338851d4</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <Anchor>a511b297fbebfbecdcdce68e1cffa272c</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMaxLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <Anchor>a92cea201d21acd2f2a7cc9b00e165848</Anchor>
    <Abstract>Set/Get the maximum length of the rope.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2RopeJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_rope_joint.html</Path>
    <Anchor>a4612dca9851a66701893a48d896dbd14</Anchor>
    <Abstract>Dump joint to dmLog.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2RopeJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2RopeJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_rope_joint_def.html</Path>
    <DeclaredIn>b2RopeJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RopeJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_rope_joint_def.html</Path>
    <Anchor>ab680fcc3cd44741a7a824ddff86ff01e</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RopeJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_rope_joint_def.html</Path>
    <Anchor>a3271da0e4027e25546aa6a81e8fbe4e2</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2RopeJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_rope_joint_def.html</Path>
    <Anchor>a6efdcae22e2bdcfc3aae62da1a5f0d69</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Rot</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Rot</Scope>
    </TokenIdentifier>
    <Path>structb2_rot.html</Path>
    <Abstract>Rotation.</Abstract>
    <DeclaredIn>b2Math.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Rot</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Rot</Scope>
    </TokenIdentifier>
    <Path>structb2_rot.html</Path>
    <Anchor>aa40dda6d390a2f54c793c63027a9b46e</Anchor>
    <Abstract>Initialize from an angle in radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Rot</Scope>
    </TokenIdentifier>
    <Path>structb2_rot.html</Path>
    <Anchor>acde9186de0a4a7397bf8ef714408ad60</Anchor>
    <Abstract>Set using an angle in radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetIdentity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Rot</Scope>
    </TokenIdentifier>
    <Path>structb2_rot.html</Path>
    <Anchor>a7f534cb7ece8d325662d7d0e27d4f617</Anchor>
    <Abstract>Set to the identity rotation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Rot</Scope>
    </TokenIdentifier>
    <Path>structb2_rot.html</Path>
    <Anchor>a67a6c08812c009654f00800256c8bfdc</Anchor>
    <Abstract>Get the angle in radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetXAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Rot</Scope>
    </TokenIdentifier>
    <Path>structb2_rot.html</Path>
    <Anchor>ac4ab7f262adb99f161775314852723d8</Anchor>
    <Abstract>Get the x-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetYAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Rot</Scope>
    </TokenIdentifier>
    <Path>structb2_rot.html</Path>
    <Anchor>ae731c7434fe1754114ee70149df36c7f</Anchor>
    <Abstract>Get the u-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>s</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Rot</Scope>
    </TokenIdentifier>
    <Path>structb2_rot.html</Path>
    <Anchor>a15725ce0a89cc735ad90687b4c0f4dce</Anchor>
    <Abstract>Sine and cosine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Shape</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Shape</Scope>
    </TokenIdentifier>
    <Path>classb2_shape.html</Path>
    <DeclaredIn>b2Shape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Shape</Scope>
    </TokenIdentifier>
    <Path>classb2_shape.html</Path>
    <Anchor>a4716243454bb9cf7c7ee1d9cb23ae634</Anchor>
    <Abstract>Clone the concrete shape using the provided allocator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Shape</Scope>
    </TokenIdentifier>
    <Path>classb2_shape.html</Path>
    <Anchor>a3b6093f16c18f8a877519a29674abca0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetChildCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Shape</Scope>
    </TokenIdentifier>
    <Path>classb2_shape.html</Path>
    <Anchor>a05a3c445017d96df9238ceefe6ce37ab</Anchor>
    <Abstract>Get the number of child primitives.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TestPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Shape</Scope>
    </TokenIdentifier>
    <Path>classb2_shape.html</Path>
    <Anchor>a6ac968e403e2d93e8ae46d728a2e50fa</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Shape</Scope>
    </TokenIdentifier>
    <Path>classb2_shape.html</Path>
    <Anchor>aee53a926f4fe64cd03693f6211ef6335</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Shape</Scope>
    </TokenIdentifier>
    <Path>classb2_shape.html</Path>
    <Anchor>a88e9807fab0c8ca9a98d8926e50a1411</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ComputeMass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Shape</Scope>
    </TokenIdentifier>
    <Path>classb2_shape.html</Path>
    <Anchor>a61b365526241b47f124789b0309cac69</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2SimplexCache</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2SimplexCache</Scope>
    </TokenIdentifier>
    <Path>structb2_simplex_cache.html</Path>
    <DeclaredIn>b2Distance.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>metric</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2SimplexCache</Scope>
    </TokenIdentifier>
    <Path>structb2_simplex_cache.html</Path>
    <Anchor>a018e0a500b417d79bfed3f21310b15a2</Anchor>
    <Abstract>length or area</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2SimplexCache</Scope>
    </TokenIdentifier>
    <Path>structb2_simplex_cache.html</Path>
    <Anchor>ab574159e69dda7e14ead8de848ca6b67</Anchor>
    <Abstract>vertices on shape A</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2SimplexCache</Scope>
    </TokenIdentifier>
    <Path>structb2_simplex_cache.html</Path>
    <Anchor>ab7586465ee2c5f7c3bdd8f80d5e256a7</Anchor>
    <Abstract>vertices on shape B</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2SolverData</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2SolverData</Scope>
    </TokenIdentifier>
    <Path>structb2_solver_data.html</Path>
    <Abstract>Solver Data.</Abstract>
    <DeclaredIn>b2TimeStep.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2StackAllocator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2StackAllocator</Scope>
    </TokenIdentifier>
    <Path>classb2_stack_allocator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2StackEntry</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2StackEntry</Scope>
    </TokenIdentifier>
    <Path>structb2_stack_entry.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Sweep</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Sweep</Scope>
    </TokenIdentifier>
    <Path>structb2_sweep.html</Path>
    <DeclaredIn>b2Math.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Sweep</Scope>
    </TokenIdentifier>
    <Path>structb2_sweep.html</Path>
    <Anchor>a81947646092468290d15005928e12fcd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Advance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Sweep</Scope>
    </TokenIdentifier>
    <Path>structb2_sweep.html</Path>
    <Anchor>a35eb9b976ca87c9b8d758bec070c6c06</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Sweep</Scope>
    </TokenIdentifier>
    <Path>structb2_sweep.html</Path>
    <Anchor>ad66a3086bc7656df9cf7454013a2f61b</Anchor>
    <Abstract>Normalize the angles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Sweep</Scope>
    </TokenIdentifier>
    <Path>structb2_sweep.html</Path>
    <Anchor>a4bcc302cf78771896d6256fc53f2f8be</Anchor>
    <Abstract>local center of mass position</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Sweep</Scope>
    </TokenIdentifier>
    <Path>structb2_sweep.html</Path>
    <Anchor>a1b5402e01b92cc82473389fc6f0375c3</Anchor>
    <Abstract>center world positions</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Sweep</Scope>
    </TokenIdentifier>
    <Path>structb2_sweep.html</Path>
    <Anchor>afa96bacc91dd3c92ae716a45512332d6</Anchor>
    <Abstract>world angles</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alpha0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Sweep</Scope>
    </TokenIdentifier>
    <Path>structb2_sweep.html</Path>
    <Anchor>aa5f8ab90178b58bc0777096cbc6b91cf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Timer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Timer</Scope>
    </TokenIdentifier>
    <Path>classb2_timer.html</Path>
    <DeclaredIn>b2Timer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Timer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Timer</Scope>
    </TokenIdentifier>
    <Path>classb2_timer.html</Path>
    <Anchor>afcc159032a8edeaa9febdf2b6cbd49a5</Anchor>
    <Abstract>Constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Timer</Scope>
    </TokenIdentifier>
    <Path>classb2_timer.html</Path>
    <Anchor>a367388794588e9283600437be82f2889</Anchor>
    <Abstract>Reset the timer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMilliseconds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2Timer</Scope>
    </TokenIdentifier>
    <Path>classb2_timer.html</Path>
    <Anchor>a354e020ec583a067b8f3b90a42a88e53</Anchor>
    <Abstract>Get the time since construction or the last reset.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2TimeStep</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2TimeStep</Scope>
    </TokenIdentifier>
    <Path>structb2_time_step.html</Path>
    <Abstract>This is an internal structure.</Abstract>
    <DeclaredIn>b2TimeStep.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2TOIInput</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2TOIInput</Scope>
    </TokenIdentifier>
    <Path>structb2_t_o_i_input.html</Path>
    <Abstract>Input parameters for b2TimeOfImpact.</Abstract>
    <DeclaredIn>b2TimeOfImpact.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2TOIOutput</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2TOIOutput</Scope>
    </TokenIdentifier>
    <Path>structb2_t_o_i_output.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2TOISolver</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2TOISolver</Scope>
    </TokenIdentifier>
    <Path>classb2_t_o_i_solver.html</Path>
    <DeclaredIn>b2TOISolver.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Transform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Transform</Scope>
    </TokenIdentifier>
    <Path>structb2_transform.html</Path>
    <DeclaredIn>b2Math.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Transform</Scope>
    </TokenIdentifier>
    <Path>structb2_transform.html</Path>
    <Anchor>a765a2e5c692a2e1d05c7a5441019373d</Anchor>
    <Abstract>The default constructor does nothing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Transform</Scope>
    </TokenIdentifier>
    <Path>structb2_transform.html</Path>
    <Anchor>a823e190e4810e35e8100f4414d0bef62</Anchor>
    <Abstract>Initialize using a position vector and a rotation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetIdentity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Transform</Scope>
    </TokenIdentifier>
    <Path>structb2_transform.html</Path>
    <Anchor>af92af4ec6833552b1b22a6ca6d4f5644</Anchor>
    <Abstract>Set this to the identity transform.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Transform</Scope>
    </TokenIdentifier>
    <Path>structb2_transform.html</Path>
    <Anchor>a4db696a0b3fada95f95cde3e7e85ced9</Anchor>
    <Abstract>Set this based on the position and angle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2TreeNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2TreeNode</Scope>
    </TokenIdentifier>
    <Path>structb2_tree_node.html</Path>
    <Abstract>A node in the dynamic tree. The client does not interact with this directly.</Abstract>
    <DeclaredIn>b2DynamicTree.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aabb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2TreeNode</Scope>
    </TokenIdentifier>
    <Path>structb2_tree_node.html</Path>
    <Anchor>a798f1a594b33c713be45e76e79912239</Anchor>
    <Abstract>Enlarged AABB.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Vec2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Abstract>A 2D column vector.</Abstract>
    <DeclaredIn>b2Math.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Vec2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a9171b31deb83af96872f99689939a12f</Anchor>
    <Abstract>Default constructor does nothing (for performance).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Vec2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>aa8a2f026420a84bbbc62f3a3de2041d6</Anchor>
    <Abstract>Construct using coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a5c6cbe27cfb29c6dbb29b9a3285b88d0</Anchor>
    <Abstract>Set this vector to all zeros.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a4d61640a645e470a50b451307d8e94c3</Anchor>
    <Abstract>Set this vector to some specified coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>ab1f648091d3cba00b4c132758fcf4450</Anchor>
    <Abstract>Negate this vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a9cb67b5f755b82d40673337a3652d81f</Anchor>
    <Abstract>Read from and indexed element.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a50b39580d9f479e17b23ce3cb8efbac6</Anchor>
    <Abstract>Write to an indexed element.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a590789342e22ac1e7f9c1a63a2778b6d</Anchor>
    <Abstract>Add a vector to this vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a6b48cab4695a979ae40b7613aedc8b17</Anchor>
    <Abstract>Subtract a vector from this vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a7097696dce578322928f4535b34f1c6b</Anchor>
    <Abstract>Multiply this vector by a scalar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Length</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>afb1c498214b88874fcb07eb6322374da</Anchor>
    <Abstract>Get the length of this vector (the norm).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LengthSquared</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>af66641b887488490e2168bfafc5a7e36</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>adda78c92f318fe53d8a53f9b5cfd8e41</Anchor>
    <Abstract>Convert this vector into a unit vector. Returns the length.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsValid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>aafb971cf7cc726f91fc3a8215fb0aa17</Anchor>
    <Abstract>Does this vector contain finite coordinates?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Skew</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec2</Scope>
    </TokenIdentifier>
    <Path>structb2_vec2.html</Path>
    <Anchor>a8f2c6e60cb5898bc239801bd19e2d619</Anchor>
    <Abstract>Get the skew vector such that dot(skew_vec, other) == cross(vec, other)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Vec3</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Abstract>A 2D column vector with 3 elements.</Abstract>
    <DeclaredIn>b2Math.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Vec3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Anchor>a837423f66d6fb72d815e7390c09938b9</Anchor>
    <Abstract>Default constructor does nothing (for performance).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Vec3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Anchor>a47df55b26ab254dcf42a16638c7feeeb</Anchor>
    <Abstract>Construct using coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Anchor>a5a459ed49f1910a347ca247f848a2dd8</Anchor>
    <Abstract>Set this vector to all zeros.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Anchor>a12a1bc14bbe722dfb175a492d2d00a79</Anchor>
    <Abstract>Set this vector to some specified coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Anchor>a246cb7ed59d3e758989939ed4e30e5ec</Anchor>
    <Abstract>Negate this vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator+=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Anchor>a2aaeed3f5308aad85d19c5f0efc72641</Anchor>
    <Abstract>Add a vector to this vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Anchor>a9e5b535548e1c5dfc0dc258d08f5ca32</Anchor>
    <Abstract>Subtract a vector from this vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator*=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2Vec3</Scope>
    </TokenIdentifier>
    <Path>structb2_vec3.html</Path>
    <Anchor>aaa9aa20195cd0ee53c7176a9a9b02389</Anchor>
    <Abstract>Multiply this vector by a scalar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Velocity</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Velocity</Scope>
    </TokenIdentifier>
    <Path>structb2_velocity.html</Path>
    <Abstract>This is an internal structure.</Abstract>
    <DeclaredIn>b2TimeStep.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2VelocityConstraintPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2VelocityConstraintPoint</Scope>
    </TokenIdentifier>
    <Path>structb2_velocity_constraint_point.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2Version</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2Version</Scope>
    </TokenIdentifier>
    <Path>structb2_version.html</Path>
    <DeclaredIn>b2Settings.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>major</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Version</Scope>
    </TokenIdentifier>
    <Path>structb2_version.html</Path>
    <Anchor>a720da8e346364d1cb34d176125380b44</Anchor>
    <Abstract>significant changes</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Version</Scope>
    </TokenIdentifier>
    <Path>structb2_version.html</Path>
    <Anchor>a115b8797a6e0b8e53f54502bd20d89da</Anchor>
    <Abstract>incremental changes</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>revision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2Version</Scope>
    </TokenIdentifier>
    <Path>structb2_version.html</Path>
    <Anchor>a395cfe1434e348115d2ead3d72b88847</Anchor>
    <Abstract>bug fixes</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2WeldJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <DeclaredIn>b2WeldJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>a8550de74e174a08856bc4bc7a4853429</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>a2030794df9b2a3111bcf7a1eb0593960</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>a2ca6323d03b9fd4b591a0bfadddc25a8</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>a7199b5cce47b29624b4b231d78af71a3</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>aaef4f238fb5badf1112321ba878e8b06</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>a7fdc0c047dc04bbc8c5ca67011be071c</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReferenceAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>a0d347bf22be13aa8a96f615e230b095a</Anchor>
    <Abstract>Get the reference angle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetFrequency</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>a0796404379b7562f1af557729085c447</Anchor>
    <Abstract>Set/get frequency in Hz.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetDampingRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>aea79865e590edba09eff9d2243689967</Anchor>
    <Abstract>Set/get damping ratio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WeldJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_weld_joint.html</Path>
    <Anchor>a2fd073c5e6264e98592240308a006981</Anchor>
    <Abstract>Dump to b2Log.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2WeldJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2WeldJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_weld_joint_def.html</Path>
    <DeclaredIn>b2WeldJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2WeldJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_weld_joint_def.html</Path>
    <Anchor>a9f6592c2a7eba6ce6e07e40c4e82aab5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WeldJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_weld_joint_def.html</Path>
    <Anchor>a3b04af6164bb32efc3f5cf3e8d2b7109</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WeldJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_weld_joint_def.html</Path>
    <Anchor>a528262b92dac10de37411ad8c5637149</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>referenceAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WeldJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_weld_joint_def.html</Path>
    <Anchor>a31aeb208f15842091c55e3f1bab6d8f1</Anchor>
    <Abstract>The bodyB angle minus bodyA angle in the reference state (radians).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frequencyHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WeldJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_weld_joint_def.html</Path>
    <Anchor>abf42ce852914af845e9203b341f55c87</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dampingRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WeldJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_weld_joint_def.html</Path>
    <Anchor>ace1f0131610f14558f3dbaaed7b10e24</Anchor>
    <Abstract>The damping ratio. 0 = no damping, 1 = critical damping.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2WheelJoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <DeclaredIn>b2WheelJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a6499dcd788d29f06c2e1b28c755e01c8</Anchor>
    <Abstract>Get the anchor point on bodyA in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>ace182061f7f78ac2ec3f957a763ca5d3</Anchor>
    <Abstract>Get the anchor point on bodyB in world coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionForce</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>aa16e3a1c0246017bc25e72cf494daa42</Anchor>
    <Abstract>Get the reaction force on bodyB at the joint anchor in Newtons.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetReactionTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>ae88eeec295a19f216acab9b23d9c704b</Anchor>
    <Abstract>Get the reaction torque on bodyB in N*m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>abf725ee0fa640d1b9374283f6f50e82d</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a38313bcd5d5a91f190956086b9d9b8e5</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetLocalAxisA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a03c1a1cf19dbada68630aa3cbf970a55</Anchor>
    <Abstract>The local joint axis relative to bodyA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointTranslation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>abc3791f9c8139e5c5ba0fb72d5c7f9df</Anchor>
    <Abstract>Get the current joint translation, usually in meters.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a398bc3a1f807905e0923cc7d9bff640d</Anchor>
    <Abstract>Get the current joint translation speed, usually in meters per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsMotorEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a419bc80e17cc4c1062a692ea79396d19</Anchor>
    <Abstract>Is the joint motor enabled?</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EnableMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a7a832d814bdda135a78fad41ba671da6</Anchor>
    <Abstract>Enable/disable the joint motor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMotorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a6e3255fcf5c82b979ad7e3dc1c089c0b</Anchor>
    <Abstract>Set the motor speed, usually in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMotorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>acc7a31fdd444614ba1943f57f0c6ac5a</Anchor>
    <Abstract>Get the motor speed, usually in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetMaxMotorTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a8aae3cd624ec9d48fc86c325c4595edc</Anchor>
    <Abstract>Set/Get the maximum motor force, usually in N-m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetMotorTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a4fbfb199ed267f7a2fad934cd2f4fbdc</Anchor>
    <Abstract>Get the current motor torque given the inverse time step, usually in N-m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetSpringFrequencyHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>af9f8fada5cb30f83aa2fbf486e9d347b</Anchor>
    <Abstract>Set/Get the spring frequency in hertz. Setting the frequency to zero disables the spring...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetSpringDampingRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a39b123ac045c8ec93faa65746e6655dc</Anchor>
    <Abstract>Set/Get the spring damping ratio.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2WheelJoint</Scope>
    </TokenIdentifier>
    <Path>classb2_wheel_joint.html</Path>
    <Anchor>a09534b6f4c5d0254711e0bcc7cf3b0e4</Anchor>
    <Abstract>Dump to b2Log.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2WheelJointDef</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <DeclaredIn>b2WheelJoint.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>af26887092d36c3cd03898401a38783e2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>a9429d2273bfdd8bdc0db416e73b89ae4</Anchor>
    <Abstract>The local anchor point relative to bodyA&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAnchorB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>a88ba0f7108076b9d7ced68425be95c27</Anchor>
    <Abstract>The local anchor point relative to bodyB&amp;#39;s origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localAxisA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>ad635ee7b77b50037dc0e021a0f5c93a6</Anchor>
    <Abstract>The local translation axis in bodyA.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableMotor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>a8e7193d6c34c784ffd71e79d3a70acc6</Anchor>
    <Abstract>Enable/disable the joint motor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxMotorTorque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>ab658ce0fae40c6de09133659f7ffb829</Anchor>
    <Abstract>The maximum motor torque, usually in N-m.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>motorSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>a7248e25f2ca6b6c2a5f7079ce16e7748</Anchor>
    <Abstract>The desired motor speed in radians per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frequencyHz</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>acf3540f46eaf3bc91426386939bd37b1</Anchor>
    <Abstract>Suspension frequency, zero indicates no suspension.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dampingRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WheelJointDef</Scope>
    </TokenIdentifier>
    <Path>structb2_wheel_joint_def.html</Path>
    <Anchor>a9976584bfee18b46dec355764797ce54</Anchor>
    <Abstract>Suspension damping ratio, one indicates critical damping.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2World</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <DeclaredIn>b2World.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2World</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>aeccc87fd9e36702c821a8244ca7cd875</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~b2World</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a5250ae4487475c33ccefdead07c768c8</Anchor>
    <Abstract>Destruct the world. All physics entities are destroyed and all heap memory is released.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetDestructionListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>ae377f2dd5512ada7d27f4ad3541c75bf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetContactFilter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a85e6e1e911c7d6366f8c7d57a12b72ff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetContactListener</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a614549967fb8a1584b61c11e2d553d42</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetDebugDraw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a6976d2c67400df03c0d44174ffcfb7ee</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateBody</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a9323d553e4c132b26d8741b457d7c034</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestroyBody</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>ad52231ad7a9556ef5735ac79cbcd8fcf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CreateJoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a8a408c367fe133530f3e577c667d1efd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DestroyJoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>add5942aef171e54cfa384c8975746dca</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Step</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a7a8eff61af98461f978fe43f3af7be90</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClearForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>ac082ab4c4ad0b1c5ec4674315eeec643</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DrawDebugData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a293d9865e407fd463e168b0a29856acc</Anchor>
    <Abstract>Call this to draw shapes and other debug draw data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QueryAABB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a711e55d2c6e68400f93472f807c3775b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RayCast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>ad902548be84df9cc36eced0f4c89ab0a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetBodyList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a1b87c03955e3312d308ddf679adf3c85</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a55db7240f8290aa02cab79f181934de8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetContactList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>ab1e1c59fd7534c0268c2a3e31370a425</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetAllowSleeping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a6755872564fc3db70c69d2b9d349fa33</Anchor>
    <Abstract>Enable/disable sleep.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetWarmStarting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a8e8c12142e8c4884a18787926a261359</Anchor>
    <Abstract>Enable/disable warm starting. For testing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetContinuousPhysics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a536dd9181c2e20096073e3cfe2c8530a</Anchor>
    <Abstract>Enable/disable continuous physics. For testing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetSubStepping</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>ae8aacc78ea4753075067daff51b61778</Anchor>
    <Abstract>Enable/disable single stepped continuous physics. For testing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetProxyCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a67f1f9fbdd85abd2100104c5eabe17cb</Anchor>
    <Abstract>Get the number of broad-phase proxies.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetBodyCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a4559122ea51401b4fb7342eb6232ce74</Anchor>
    <Abstract>Get the number of bodies.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetJointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a54a95a98787ed5f383c6549ee1f4c4d5</Anchor>
    <Abstract>Get the number of joints.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetContactCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>abcc976f1755f9bb94a8650f5f4219a8d</Anchor>
    <Abstract>Get the number of contacts (each may have 0 or more contact points).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetTreeHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a48f90a31dc2ad30dbc50cac5111400d7</Anchor>
    <Abstract>Get the height of the dynamic tree.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetTreeBalance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a9fb7c28d042b600ba1155e3d38f1c5f9</Anchor>
    <Abstract>Get the balance of the dynamic tree.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetTreeQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a0e9dceab7052fd6e0d73d6024cca1bcb</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetGravity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>aeafa43d6580e1dddb0675e672ca2375c</Anchor>
    <Abstract>Change the global gravity vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetGravity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a1e34bcd2f75fbdd41e2d84b3eb26d1ab</Anchor>
    <Abstract>Get the global gravity vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IsLocked</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>ae50c318304546c9cc066ee382668c4a1</Anchor>
    <Abstract>Is the world locked (in the middle of a time step).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SetAutoClearForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>aa2bced28ddef5bbb00ed5666e5e9f620</Anchor>
    <Abstract>Set flag to control automatic clearing of forces after each time step.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetAutoClearForces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>af56cc43ebde27946ed39382b4ea31640</Anchor>
    <Abstract>Get the flag that controls automatic clearing of forces after each time step.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetContactManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a16259159ae1719c30808561c990a8c05</Anchor>
    <Abstract>Get the contact manager for testing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetProfile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>af41b3f1a21efc854b485d311911e24b2</Anchor>
    <Abstract>Get the current profile.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dump</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>b2World</Scope>
    </TokenIdentifier>
    <Path>classb2_world.html</Path>
    <Anchor>a73c1fec260d460514edd335d4c235893</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2WorldManifold</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>b2WorldManifold</Scope>
    </TokenIdentifier>
    <Path>structb2_world_manifold.html</Path>
    <Abstract>This is used to compute the current state of a contact manifold.</Abstract>
    <DeclaredIn>b2Collision.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Initialize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>b2WorldManifold</Scope>
    </TokenIdentifier>
    <Path>structb2_world_manifold.html</Path>
    <Anchor>a896dd7e7d4d6f6a5bc69e19fbd6871bd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WorldManifold</Scope>
    </TokenIdentifier>
    <Path>structb2_world_manifold.html</Path>
    <Anchor>acf8de61b73d9784d16f7d0e824ce44bf</Anchor>
    <Abstract>world vector pointing from A to B</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>points</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>b2WorldManifold</Scope>
    </TokenIdentifier>
    <Path>structb2_world_manifold.html</Path>
    <Anchor>af15e84b90f102c0ac433be2d63604021</Anchor>
    <Abstract>world contact point (point of intersection)</Abstract>
  </Token>
</Tokens>
