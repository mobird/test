<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultFarClippingPlane</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_camera_8h.html</Path>
    <Anchor>aae805b1e52adfe85fb88808ad8ea5621</Anchor>
    <Abstract>Default distance from the camera to the far clipping plane.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultFieldOfView</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_camera_8h.html</Path>
    <Anchor>a9909f5df332c39a7f2c5aecfe7a2d819</Anchor>
    <Abstract>Default camera field of view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultFrustumFitPadding</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_camera_8h.html</Path>
    <Anchor>a0232bec88b285ece1399a788da3f2a42</Anchor>
    <Abstract>Default padding around a node when framed by the camera using one of the moveToShowAllOf:...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultNearClippingPlane</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_camera_8h.html</Path>
    <Anchor>afeb7b84f672c23262157b3bc830b7116</Anchor>
    <Abstract>Default distance from the camera to the near clipping plane.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cc3v</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>af3d4235885f28d7caa59e98b8259d28c</Anchor>
    <Abstract>Convenience alias macro to create CC3Vectors with less keystrokes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ccc4f</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>af9963790c0f2b7475aa21c96d90fa53b</Anchor>
    <Abstract>Convenience alias macro to create ccColor4F with less keystrokes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Angle</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>acf312b78eba0e6329c79569358405da0</Anchor>
    <Abstract>An angle such as a heading or inclination.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3AngularVectorDifference</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ac3fbabec5affd7e28f0abeb12288ebd6</Anchor>
    <Abstract>Returns the difference between two CC3AngularVectors, by subtracting the corresponding heading...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3AngularVectorFromVector</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a0e8b184ee200087dcc587d3a641e9a93</Anchor>
    <Abstract>Returns an CC3AngularVector providing the heading, inclination &amp;amp; radius of the specified CC3Vector...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3AngularVectorMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a46f574bdb0d7270f986b817bee4960ce</Anchor>
    <Abstract>Returns an CC3AngularVector structure constructed from the vector components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3AttenuationCoefficientsMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a39e754228b8d869f4be56391268c9808</Anchor>
    <Abstract>Returns a CC3AttenuationCoefficients structure constructed from the specified coefficients.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3AxisAngleFromQuaternion</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a38a4eadfa7d93587f84c8256b3d8d8c5</Anchor>
    <Abstract>Converts the specified quaternion to a vector that represents a rotation in axis-angle form...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBoxAddPadding</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a1061131474a11c0cb58a117db87faaa0</Anchor>
    <Abstract>Returns a bounding box that has the same dimensions as the specified bounding box, but with each corner expanded outward by the specified amount of padding.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBoxCenter</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a1790c9e3c1c4a005de8cc1722431d790</Anchor>
    <Abstract>Returns the geometric center of the specified bounding box.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBoxEngulfLocation</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a3b644189ac051c02cfe701a760ad3645</Anchor>
    <Abstract>Returns the smallest CC3BoundingBox that contains both the specified bounding box and location...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBoxesAreEqual</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a0d13c0a6f62eb30c90d31d476e6be20a</Anchor>
    <Abstract>Returns whether the two bounding boxes are equal by comparing their respective components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBoxFromMinMax</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a2346cff218961f7e1f6ed55aab8ddd50</Anchor>
    <Abstract>Returns a CC3BoundingBox structure constructed from the min and max vertices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBoxIsNull</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ae8c47162de4e0cc28defcf03213f6545</Anchor>
    <Abstract>Returns whether the specified bounding box is equal to the null bounding box, specified by kCC3Boundi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBoxMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>acfc60f78a4b4be63230f8beaae999397</Anchor>
    <Abstract>Returns a CC3BoundingBox structure constructed from the min and max components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBoxUnion</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>af1203380ac68b02b22e2650ecb72cea9</Anchor>
    <Abstract>Returns the smallest CC3BoundingBox that contains the two specified bounding boxes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3DistanceFromNormalizedPlane</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ac32f422ec6d3b912c8fef6c6164555f5</Anchor>
    <Abstract>Returns the distance from the point represented by the vector to the specified normalized plane...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PlaneFromPoints</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a85d4ab2726e85a281afacab575a0939a</Anchor>
    <Abstract>Returns a CC3Plane structure that contains the specified points.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PlaneMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aa47f5aea41a9f4e1b5b30d6a26c34ba4</Anchor>
    <Abstract>Returns a CC3Plane structure constructed from the specified coefficients.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PlaneNormal</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>af92b4f3a95c05efb8bcc04908b8b597a</Anchor>
    <Abstract>Returns the normal of the plane, which is (a, b, c) from the planar equation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PlaneNormalize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a6cf85a3c7ea52b73ea18d05c0416b0e0</Anchor>
    <Abstract>Returns a normalized copy of the specified CC3Plane so that the length of its normal (a...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3QuaternionFromAxisAngle</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a64d9fbae1a147a1b6cf20e8ffa7a457e</Anchor>
    <Abstract>Converts the specified vector that represents an rotation in axis-angle form to the corresponding qua...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RayFromLocDir</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a660726c8ae8723db86bfbaa4acb40472</Anchor>
    <Abstract>Returns a CC3Ray structure constructed from the start location and direction vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RayIntersectionWithPlane</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a015a46653a78859fdb094a516065928e</Anchor>
    <Abstract>Returns the location of the point where the specified ray intersects the specified plane...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RayMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a5998d7ed88f5f78ea93e896975154841</Anchor>
    <Abstract>Returns a CC3Ray structure constructed from the start location and direction components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3SphereMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ac496de3a4a51b7c6f6faa2a6ef7a2d1e</Anchor>
    <Abstract>Returns a CC3Spere constructed from the specified center and radius.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3SphereUnion</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a1b16aa9e4f4a17c1ed26d7bcc68580fc</Anchor>
    <Abstract>Returns the smallest CC3Sphere that contains the two specified spheres.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4Add</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a065bbf7e9e8fff2979821c7d0b4042f1</Anchor>
    <Abstract>Returns the result of adding the two specified vectors, by adding the corresponding components of bot...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4Dot</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a2265ee63f6c2def0389e88fe182c575d</Anchor>
    <Abstract>Returns the dot-product of the two given vectors (v1 .</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4FromCC3Vector</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a881d45157363eac0df2617594e42fafc</Anchor>
    <Abstract>Returns a CC3Vector4 structure constructed from a 3D vector and a w component.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4Homogenize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a303116a267dd57a3d055bfcb992b6732</Anchor>
    <Abstract>If the specified homogeneous vector represents a location (w is not zero), returns a homoginized copy...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4Length</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a4d9e3da4912a19513291983127390f95</Anchor>
    <Abstract>Returns the scalar length of the specified vector from the origin, including the w-component This is ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4Make</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ad0c8f5ad245aa0e0186ad748e55bae3b</Anchor>
    <Abstract>Returns a CC3Vector4 structure constructed from the vector components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4Negate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a593af28f320396914e266bd30cde9e0c</Anchor>
    <Abstract>Returns a vector that is the negative of the specified vector in all directions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4Normalize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>adf8c5f21438a3752f36b28961c3f239b</Anchor>
    <Abstract>Returns a normalized copy of the specified vector so that its length is 1.0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4sAreEqual</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a6fceccc6c6abade899de58469a5c4319</Anchor>
    <Abstract>Returns whether the two vectors are equal by comparing their respective components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4ScaleUniform</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aecb13b8f8cc2cad2519cfbbdaf3db397</Anchor>
    <Abstract>Returns the result of scaling the original vector by the corresponding scale factor uniformly along a...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4Slerp</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ae53315b71a62342cb03550edc2b5acf4</Anchor>
    <Abstract>Returns a spherical linear interpolation between two vectors, based on the blendFactor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorAdd</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>af01494047767a8740a45183fe8ea580c</Anchor>
    <Abstract>Returns the result of adding the two specified vectors, by adding the corresponding components of bot...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorAverage</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ace25fc7cc72b743543a5758393d43f87</Anchor>
    <Abstract>Returns a vector that represents the average of the two specified vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorCross</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aeb97b68c9a8a8da6ec5dbbcc9ddfa924</Anchor>
    <Abstract>Returns the cross-product of the two given vectors (v1 x v2).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorDifference</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a8d0ba40500bad54a4da8a655ccfc7a5d</Anchor>
    <Abstract>Returns the difference between two vectors, by subtracting the subtrahend from the minuend...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorDistance</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a869a354226611d0492ddc2a5fc939c84</Anchor>
    <Abstract>Returns the positive scalar distance between the ends of the two specified vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorDistanceSquared</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>acd7d0917ec6aecb4923f2862ac79a5be</Anchor>
    <Abstract>Returns the square of the scalar distance between the ends of the two specified vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorDot</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a077f907bd5776a1db67d9257bd3633f1</Anchor>
    <Abstract>Returns the dot-product of the two given vectors (v1 .</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorFromAngularVector</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a9f2b1ecc7df8edc12cd4098d12ca6b55</Anchor>
    <Abstract>Returns a CC3Vector from the specified CC3AngularVector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorFromHomogenizedCC3Vector4</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>acf1fde5ad517a370e07a18eda411f215</Anchor>
    <Abstract>Returns a CC3Vector structure constructed from a CC3Vector4.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorFromTruncatedCC3Vector4</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ada35173ffeb8ca330af8d1220fb85b22</Anchor>
    <Abstract>Returns a CC3Vector structure constructed from a CC3Vector4, by simply ignoring the w component of th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorInvert</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a37ab5f4e82e638d49cc10fc52e3b17c0</Anchor>
    <Abstract>Returns a CC3Vector that is the inverse of the specified vector in all directions, such that scaling the original by the inverse using CC3VectorScale will result in a vector of unit dimension in each direction (1.0, 1.0, 1.0).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorLength</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aff2d63203d286e98e8858842a1d8083b</Anchor>
    <Abstract>Returns the scalar length of the specified CC3Vector from the origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorLengthSquared</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a033d34b07656650375ce4572a98ad533</Anchor>
    <Abstract>Returns the square of the scalar length of the specified CC3Vector from the origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorLerp</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a71bdc5b3e833c1591debb2b0db9b962a</Anchor>
    <Abstract>Returns a linear interpolation between two vectors, based on the blendFactor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a63394568869de5c2edacb4f4cab16b1e</Anchor>
    <Abstract>Returns a CC3Vector structure constructed from the vector components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorMaximize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a21cec0894663114759c499bbb5402142</Anchor>
    <Abstract>Returns a vector whose components comprise the maximum value of each of the respective components of ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorMinimize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>adc290b55b8b541b61880aae34c0468da</Anchor>
    <Abstract>Returns a vector whose components comprise the minimum value of each of the respective components of ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorNegate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a482c810c28d6236fdd82028b7ec0bf47</Anchor>
    <Abstract>Returns a vector that is the negative of the specified vector in all directions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorNormalize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a00df1135cfdac2a00e2fe5d42cf4db62</Anchor>
    <Abstract>Returns a normalized copy of the specified CC3Vector so that its length is 1.0.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorRotationalDifference</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aad5604dd51e88be2bdef618714e56c39</Anchor>
    <Abstract>Returns the difference between two rotation vectors, in terms of the minimal degrees, along each axis, required to travel between the two roations, given that rotations are cyclical with a period of 360 degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorRotationModulo</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a19ed10d8766f1c921d6db235f16f64c4</Anchor>
    <Abstract>Returns a modulo version of the specifed rotation, so that each component is between (+/-360 degrees)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorsAreEqual</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aa08f94289658c01bc44d63bc5e40df33</Anchor>
    <Abstract>Returns whether the two vectors are equal by comparing their respective components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorScale</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a3f108e53c6b7f750bafa90cf667f4189</Anchor>
    <Abstract>Returns the result of scaling the original vector by the corresponding scale vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VectorScaleUniform</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a363a6fd1fee73707966c11000f58e304</Anchor>
    <Abstract>Returns the result of scaling the original vector by the corresponding scale factor uniformly along a...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ViewportContainsPoint</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a4c407a904219b9684fb72a373561277e</Anchor>
    <Abstract>Returns whether the specified point lies within the specified viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ViewportMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a26075503c750de6284aea4f1c3ca5870</Anchor>
    <Abstract>Returns a CC3Viewport structure constructed from the specified components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ViewportsAreEqual</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a95ccb7183be9a2d0b85b9d2f7070911e</Anchor>
    <Abstract>Returns whether the two viewports are equal by comparing their respective components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC3BFromCCC4F</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a7e84fd33f2c98dd5c464db451ce6a8b4</Anchor>
    <Abstract>Returns a ccColor3B structure constructed from the specified ccColor4F.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4BFromCCC4F</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a698614899c76eeac64071c19d6bcaffe</Anchor>
    <Abstract>Returns a ccColor4B structure constructed from the specified ccColor4F.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FAdd</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a4f561377843415d38c1394a1327aa953</Anchor>
    <Abstract>Returns the result of adding the two specified colors, by adding the corresponding components...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FAreEqual</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a8d03cd633763604ac903fc980714bac2</Anchor>
    <Abstract>Returns whether the two colors are equal by comparing their respective components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FBlend</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a1ecc4a602d68d094249b702f9616689a</Anchor>
    <Abstract>Returns an ccColor4F structure whose values are a weighted average of the specified base color and th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FDifference</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a47b52683e6f82080227b6c791255be36</Anchor>
    <Abstract>Returns the difference between two colors, by subtracting the subtrahend from the minuend...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FFromCCC4B</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a2436e4160184c61724284d2fde4182bf</Anchor>
    <Abstract>Returns a ccColor4F structure constructed from the specified ccColor4B.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FFromColorAndOpacity</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a8da4cd9fe422e1d4fd1e380607d896fd</Anchor>
    <Abstract>Returns a ccColor4F structure constructed from the specified ccColor3B and opacity.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FMake</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a4ad34b824cfb7335905ed91e4532f032</Anchor>
    <Abstract>Returns a ccColor4F structure constructed from the specified components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FUniformScale</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a2d6125452f35e51e71fcd6e18dbb98d1</Anchor>
    <Abstract>Returns a ccColor4F structure whose values are those of the specified original color, multiplied by the specified scaling factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCC4FUniformTranslate</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a1eb2402c52aa529f55a0ef53f133dde5</Anchor>
    <Abstract>Returns a ccColor4F structure whose values are those of the specified original color, where each color component has been translated by the specified offset.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCColorByteFromFloat</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ae81b2b94783ca094a7be2abf71344b22</Anchor>
    <Abstract>Returns a GLubyte between 0 and 255 converted from the specified GLfloat value between 0 and 1...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCColorFloatFromByte</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a479e2782a3a0097fb37b22df05dc0800</Anchor>
    <Abstract>Returns a GLfloat between 0 and 1 converted from the specified GLubyte value between 0 and 255...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CGRectFromCC3Viewport</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a065f64674caaeda10da65b8bc16b2b8f</Anchor>
    <Abstract>Returns the dimensions of the specified viewport as a rectangle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromBoolean</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ad08afe4b1d59809b089f70e0199333a1</Anchor>
    <Abstract>Returns the string YES or NO, depending on the specified boolean value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3AngularVector</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a1abfcbcd8ac705bfe78ab8da32022401</Anchor>
    <Abstract>Returns a string description of the specified CC3AngularVector struct in the form &amp;quot;(heading...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3AttenuationCoefficients</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a063049b65e96dd90766d4b10bd84d2b5</Anchor>
    <Abstract>Returns a string description of the specified CC3AttenuationCoefficients struct in the form &amp;quot;(a...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3BoundingBox</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a1fe5950907bc14c4c57703e0f3138727</Anchor>
    <Abstract>Returns a string description of the specified CC3BoundingBox struct.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3Plane</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>afe6733ef4a66c504978046701ec42df1</Anchor>
    <Abstract>Returns a string description of the specified CC3Plane struct in the form &amp;quot;(a, b, c...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3Ray</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aa61331e342c7a98b9cdb5c844e741c32</Anchor>
    <Abstract>Returns a string description of the specified CC3Ray struct.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3Spere</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a534e4183b6f32f51fa25e195e3ef5ed8</Anchor>
    <Abstract>Returns a string description of the specified sphere.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3Vector</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a7416550bf5456f8137b50522ac71dff7</Anchor>
    <Abstract>Returns a string description of the specified CC3Vector struct in the form &amp;quot;(x, y, z)&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3Vector4</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>abc21a6cf614473bc8c6073d2829d9142</Anchor>
    <Abstract>Returns a string description of the specified CC3Vector4 struct in the form &amp;quot;(x, y, z, w)&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCC3Viewport</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a7e0af85485692ecd11dcfb344d3d194f</Anchor>
    <Abstract>Returns a string description of the specified CC3Viewport struct in the form &amp;quot;(x, y...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCCC4F</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a000902607ac8ed6edd77e76e31f2b68c</Anchor>
    <Abstract>Returns a string description of the specified ccColor4F in the form &amp;quot;(r, g, b, a)&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromTouchType</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ad715fce3e01a4a28f4e34384a21c0e49</Anchor>
    <Abstract>Returns the name of the specified touch type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RandomCCC4FBetween</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a3d3208de029c72f28547a5dd66cd8cfb</Anchor>
    <Abstract>Returns a random ccColor4F where each component value between the specified min inclusive and the spe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3BoundingBoxNull</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a17954dcbbe2e5643c6b0bb967f973b0c</Anchor>
    <Abstract>The null bounding box.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3BoundingBoxZero</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a3693c5c231bf0bf8993fdc70e5faedbe</Anchor>
    <Abstract>A CC3BoundingBox of zero origin and dimensions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleSizeAttenuationNone</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a4377b5b2705ad519284f729dbd040a31</Anchor>
    <Abstract>Point size attenuation coefficients corresponding to no attenuation with distance (constant size)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3Vector4QuaternionIdentity</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ad9413ea5478528be0ce053d5ee729e3a</Anchor>
    <Abstract>A CC3Vector4 that represents the identity quaternion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3Vector4Zero</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a7ec5abdcc78f516973db8d540d2b22b6</Anchor>
    <Abstract>A CC3Vector4 of zero length at the origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorUnitCube</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aec681f5efa21af0439aa552f4040af12</Anchor>
    <Abstract>A CC3Vector with each component equal to one, representing the diagonal of a unit cube...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorUnitCubeLength</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a8bc6d4563401bae9d5d95f6006697cb0</Anchor>
    <Abstract>The diagonal length of a unit cube.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorUnitXNegative</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a8dda7b21b340ab260e5539e10cb01a6b</Anchor>
    <Abstract>Unit vector pointing in the same direction as the negative X-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorUnitXPositive</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a92b5337bd77e5ac15817d0c0b420d355</Anchor>
    <Abstract>Unit vector pointing in the same direction as the positive X-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorUnitYNegative</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ab323782b0d8c1d30fa7e7569f88c6914</Anchor>
    <Abstract>Unit vector pointing in the same direction as the negative Y-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorUnitYPositive</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a921ab0c577c6516a1290dd81378b3b56</Anchor>
    <Abstract>Unit vector pointing in the same direction as the positive Y-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorUnitZNegative</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a569b1764b8c6fab0d4e3ca371605e8c6</Anchor>
    <Abstract>Unit vector pointing in the same direction as the negative Z-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorUnitZPositive</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a69a16fa6465b28b935c2746e7f7653b0</Anchor>
    <Abstract>Unit vector pointing in the same direction as the positive Z-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorZero</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ad4257933ee9af679f5127693dc89c06c</Anchor>
    <Abstract>A CC3Vector of zero length at the origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FBlack</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>ad7b893cc9e97501f1ee3371215c1faed</Anchor>
    <Abstract>Opaque Black.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FBlackTransparent</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a176982fa2052fd41f06c4009d94c20ba</Anchor>
    <Abstract>Transparent Black.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FBlue</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a9b03ffd85c230d86b8d00eb1594d9dbb</Anchor>
    <Abstract>Opaque Blue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FCyan</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a42bfe2b260a69369bba00d59ddf0f34a</Anchor>
    <Abstract>Opaque Cyan.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FDarkGray</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a8b2c78ce7243533fb4ab1cd816b2148d</Anchor>
    <Abstract>Opaque Dark Gray.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FGreen</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a747779a160ff4f3f58c9af190374ea79</Anchor>
    <Abstract>Opaque Green.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FLightGray</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a539668e605167d3e2c14bd0148c4f92e</Anchor>
    <Abstract>Opaque Light Gray.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FMagenta</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>acde3e80d6f501b7d33bd776e233264df</Anchor>
    <Abstract>Opaque Magenta.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FRed</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a321a4651b55b786bf9f1d0b80dc2aa6d</Anchor>
    <Abstract>Opaque Red.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FWhite</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>a8adc20c85ba45ebbde23cbf849f0c2a5</Anchor>
    <Abstract>Opaque White.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCCC4FYellow</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_foundation_8h.html</Path>
    <Anchor>aa9cef1c678214e5bec6b3e6adeb40a40</Anchor>
    <Abstract>Opaque Yellow.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultLightAttenuationCoefficients</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_light_8h.html</Path>
    <Anchor>adff340aeb8370dafe9fd613684f7e9d3</Anchor>
    <Abstract>Default light attenuation coefficients.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultLightColorAmbient</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_light_8h.html</Path>
    <Anchor>a695aa5b729e73d8c9335d303f543be5c</Anchor>
    <Abstract>Default ambient light color.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultLightColorDiffuse</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_light_8h.html</Path>
    <Anchor>ae78ccbc663d3ee12bd9a19bbc3ea7f62</Anchor>
    <Abstract>Default diffuse light color.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultLightColorSpecular</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_light_8h.html</Path>
    <Anchor>ad0a39484c03646c758dce2c75a4a6836</Anchor>
    <Abstract>Default specular light color.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3SpotCutoffNone</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_light_8h.html</Path>
    <Anchor>aca65d404e1cebf9017e75e94df3b416a</Anchor>
    <Abstract>Cosntant indicating that the light is not directional.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOGGING_ENABLED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_logging_8h.html</Path>
    <Anchor>a3ccdf5e151cf4faa7bea9d68a1af829a</Anchor>
    <Abstract>For Objective-C code, this library adds flexible, non-intrusive logging capabilities that can be effi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOGGING_INCLUDE_CODE_LOCATION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_logging_8h.html</Path>
    <Anchor>a4d60a6f7a8c5736f93036fe7c66dca43</Anchor>
    <Abstract>Set this switch to indicate whether or not to include class, method and line information in the log e...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LOGGING_LEVEL_TRACE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_logging_8h.html</Path>
    <Anchor>a7d3626052e69f90a94ab64c0e92ed05a</Anchor>
    <Abstract>Set any or all of these switches to enable or disable logging at specific levels.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultMaterialColorAmbient</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_material_8h.html</Path>
    <Anchor>ad5428a8748c3d21e89c799add267c933</Anchor>
    <Abstract>Default material color under ambient lighting.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultMaterialColorDiffuse</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_material_8h.html</Path>
    <Anchor>aa4e8d8e6c53d5b4a63c4a718719594f5</Anchor>
    <Abstract>Default material color under diffuse lighting.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultMaterialColorEmission</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_material_8h.html</Path>
    <Anchor>ae0cc30fc070dc7b70a0ae72f571aa1a4</Anchor>
    <Abstract>Default emissive material color.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultMaterialColorSpecular</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_material_8h.html</Path>
    <Anchor>aceccb19e5061480066e60504ab980c4c</Anchor>
    <Abstract>Default material color under specular lighting.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultMaterialShininess</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_material_8h.html</Path>
    <Anchor>ab449283f14b51e96e1b19580d54c24d1</Anchor>
    <Abstract>Default material shininess.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3MaximumMaterialShininess</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_material_8h.html</Path>
    <Anchor>aa959462d2903facf0b527623c7114962</Anchor>
    <Abstract>Maximum material shininess allowed by OGLES.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Cyclic</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a8dfd68ffdec72622d9ff8c55ef403bf1</Anchor>
    <Abstract>Returns the positive or negative modulo remainder of value divided by period.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLAMP</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>aa46c464f8003d6bc85ccb0d97e7fa481</Anchor>
    <Abstract>Returns the value clamped to be between the min and max values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DegreesToRadiansFactor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a646d8eab6eee79a1d5bc1f3499df2003</Anchor>
    <Abstract>Conversion between degrees and radians.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SIGN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a8c7db0cde6d591a5abad279ba92ef021</Anchor>
    <Abstract>Returns -1, 0 or +1 if the arguement is negative, zero or positive respectively.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WAVG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a8afe6077f1475e5e93fda58fff04df32</Anchor>
    <Abstract>Returns a weighted average of the two values, where weight is between zero and one, inclusive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3CyclicAngle</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a643e3706171df8ca707a7094624fe9cd</Anchor>
    <Abstract>Converts the specified angle, to an equivalent angle between +/-360 degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3CyclicDifference</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a62ab5facec49046ccdb67ccfb9acded6</Anchor>
    <Abstract>Returns the difference between the specified minuend and subtrahend, in terms of the minimum differen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3IsWithinTolerance</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a799fd6fccb66fb6d464e9ebc2102710c</Anchor>
    <Abstract>Returns whether the specified value is as close or closer to the specified benchmark value than the s...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PositiveCyclic</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>af0b6697cfd0e4034475a4de5fdf4fb01</Anchor>
    <Abstract>Returns the positive modulo remainder of value divided by period.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RandomDouble</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>ab9ba6aaec3b48a1de0b0f88603fe8492</Anchor>
    <Abstract>Returns a random double between 0.0 inclusive and 1.0 exclusive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RandomDoubleBetween</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a2df817278804d3d489318728555eddaa</Anchor>
    <Abstract>Returns a random double between the specified min inclusive and the specified max exclusive...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RandomFloat</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>aa9565d3fcfc622177555cb16d260adec</Anchor>
    <Abstract>Returns a random float between 0.0 inclusive and 1.0 exclusive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RandomFloatBetween</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a9f8e53d374e2c1ac804918337d97cca0</Anchor>
    <Abstract>Returns a random float between the specified min inclusive and the specified max exclusive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RandomUInt</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>ac58b1dd7fb2fb3cd897812229967686d</Anchor>
    <Abstract>Returns a random unsigned integer over the full unsigned interger range (between 0 and 0xFFFFFFFF)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RandomUIntBelow</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>aabea14c904ac8b41d1131601928f7e81</Anchor>
    <Abstract>Returns a random unsigned integer between 0 inclusive and the specified max exclusive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3SemiCyclicAngle</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_math_8h.html</Path>
    <Anchor>a91400535fb0a3c851a4b15816fbd949f</Anchor>
    <Abstract>Converts the specified angle, to an equivalent angle between +/-180 degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Det2x2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>aa468c4125a415dfe338af00bd6a4cdfb</Anchor>
    <Abstract>Returns the determinant of the specified matrix values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Det3x3</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>af1cf1a5dfa262684094146ffbabf4fd5</Anchor>
    <Abstract>Returns the determinant of the specified matrix values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Mat4Multiply</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>a23b4d8344ae7cd02d5a833e5a63f454d</Anchor>
    <Abstract>Multiplies mL on the left by mR on the right, and stores the result in mOut.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kmMat4RotationQuaternion</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>a703810f665b8442cb70794227b0a1cb4</Anchor>
    <Abstract>Builds a rotation matrix from a quaternion to a rotation matrix, stores the result in pOut and return...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kmMat4RotationX</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>a85c5c586d97e2cf4d658e4a9ac891b0b</Anchor>
    <Abstract>Builds a rotation matrix around the X-axis, stores the result in pOut and returns the result...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kmMat4RotationY</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>aff69edf00d24c7f0ddc05906bc310cf9</Anchor>
    <Abstract>Builds a rotation matrix around the Y-axis, stores the result in pOut and returns the result...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kmMat4RotationYXZ</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>a245bf0c24507cdf97eea80c947afa931</Anchor>
    <Abstract>Builds a rotation matrix that rotates around all three axes, y (yaw), x (pitch) and z (roll)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kmMat4RotationZ</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>a50024be723bcf32275041289fe9eccbf</Anchor>
    <Abstract>Builds a rotation matrix around the Z-axis, stores the result in pOut and returns the result...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kmMat4RotationZYX</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>a4030fcd81fee48e40438f367c4585649</Anchor>
    <Abstract>Builds a rotation matrix that rotates around all three axes z (roll), y (yaw), and x (pitch)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kmMat4Transformation</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_matrix_math_8h.html</Path>
    <Anchor>abb7951d5d658605b4d32206815089bd9</Anchor>
    <Abstract>Builds a transformation matrix that translates, rotates and scales according to the specified vectors...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3MatrixIsNotDirty</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_node_8h.html</Path>
    <Anchor>afc372b80df2aff99b73a5256475a1836</Anchor>
    <Abstract>Constants used by matrixIsDirtyBy to indicate why the transform matrix is dirty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3NormalScalingNone</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_node_8h.html</Path>
    <Anchor>a4bed21b96ced6e7ff2d912800ab99bbaa3739cc53b5774c8f25f39d8215e21659</Anchor>
    <Abstract>Don&amp;#39;t resize normals.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3NormalScalingRescale</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_node_8h.html</Path>
    <Anchor>a4bed21b96ced6e7ff2d912800ab99bbaa23b1e075f1ac19ca534f319fb857b349</Anchor>
    <Abstract>Uniformly rescale normals using model-view matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3NormalScalingNormalize</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_node_8h.html</Path>
    <Anchor>a4bed21b96ced6e7ff2d912800ab99bbaa837820cd9a5ffe57818f7263e080b019</Anchor>
    <Abstract>Normalize each normal after tranformation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3NormalScalingAutomatic</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_node_8h.html</Path>
    <Anchor>a4bed21b96ced6e7ff2d912800ab99bbaa43df95a47c49a98ce64ebb58579768f2</Anchor>
    <Abstract>Automatically determine optimal normal scaling method.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GL_ERROR_LOGGING_ENABLED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_foundation_8h.html</Path>
    <Anchor>af8f4b363e6e8b1c791d0636fa17c6f8c</Anchor>
    <Abstract>LogGLErrorState logs an ERROR level description of any glError that has occurred since it was last ca...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GetGLErrorText</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_foundation_8h.html</Path>
    <Anchor>ad694dc79e7812c486ca343a5b449d1cc</Anchor>
    <Abstract>Returns a text description of the specified GL error code.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromGLEnum</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_foundation_8h.html</Path>
    <Anchor>a018f6459cde0f14773325006c14713d9</Anchor>
    <Abstract>Returns a string containing the name of the specified GL enumeration code.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GL_LOGGING_ENABLED</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_intercept_8h.html</Path>
    <Anchor>a0fb6e0ee45fee2831e712ca28ed4aede</Anchor>
    <Abstract>This file adds the ability to intercept all OpenGL ES 1.1 gl* calls in order to log the call to stdou...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_state_tracker_8h.html</Path>
    <Anchor>ab4437a57e595aeb6df34c9a1cbabe307</Anchor>
    <Abstract>Declaration of a generic GL function that takes a boolean value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_state_tracker_8h.html</Path>
    <Anchor>a0a0617aeb726e55bacf38c5062c5280c</Anchor>
    <Abstract>Declaration of a generic GL function that takes a float value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_state_tracker_8h.html</Path>
    <Anchor>a51d2a0d3e39b2baa87cbe8cca9365849</Anchor>
    <Abstract>Declaration of a generic GL function that takes an integer value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_state_tracker_8h.html</Path>
    <Anchor>a601d683410323263a5ff203e0cb3821a</Anchor>
    <Abstract>Declaration of a generic GL function that takes an enumerated value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_state_tracker_8h.html</Path>
    <Anchor>a001e1ad79a2ca0e0eb0a17ef9ebbc6aa</Anchor>
    <Abstract>Declaration of a generic GL function that takes color component values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_state_tracker_8h.html</Path>
    <Anchor>a0b1b9b9e5ae33630b54160180b4fc728</Anchor>
    <Abstract>Declaration of a generic GL function that takes color component values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>void</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_state_tracker_8h.html</Path>
    <Anchor>a52898f86e9501f892c75a037692df730</Anchor>
    <Abstract>Declaration of a generic GL function that takes viewport component values.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLElementTypeSize</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_utility_8h.html</Path>
    <Anchor>aaa3e503f2cf465f8b95df937837fd496</Anchor>
    <Abstract>Returns the size of the specified GL dataType, which must be one of: GL_BYTE, GL_UNSIGNED_BYTE, GL_SHORT, GL_UNSIGNED_SHORT, GL_FLOAT, GL_FIXED.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLEnumName</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_open_g_l_e_s11_utility_8h.html</Path>
    <Anchor>a77e3443160070b66430df2d0f3e5fec4</Anchor>
    <Abstract>Returns a string containing the name of the specified GL enumeration code.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PointParticleVertexContent</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>a618528ed4a53a0b3e2a8b3904eb89d25</Anchor>
    <Abstract>Variable type that holds a bitwise-OR of flags enumerating the types of content that should be includ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultParticleSize</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>a151a5bde9a3740480a6d6771a8e3f712</Anchor>
    <Abstract>Default size for particles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleInfiniteEmissionRate</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>a837b742c503e4693d6d641acbeedada2</Anchor>
    <Abstract>Constant representing an infinite rate of emission.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleInfiniteInterval</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>a8817feceff189dca910c0cebb049d88d</Anchor>
    <Abstract>Constant representing an infinite interval of time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleSizeMaximumNone</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>ad74717f6b3c4cee3ba3ca76cca409b30</Anchor>
    <Abstract>Constant used with the particleSizeMaximum property to indicate no maximum size for particles...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleSizeMinimumNone</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>a0f01890b3986d535945790f0f64fd612</Anchor>
    <Abstract>Constant used with the particleSizeMinimum property to indicate no minimum size for particles...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3PointParticleContentColor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>a75d8dc7e6d3eef0ac5af7953066b849a</Anchor>
    <Abstract>Bitwise-OR component of CC3PointParticleVertexContent variables that indicates each particle should c...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3PointParticleContentLocation</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>a671a304c19c52098abc28557b9a7a015</Anchor>
    <Abstract>Bitwise-OR component of CC3PointParticleVertexContent variables that indicates each particle should c...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3PointParticleContentNormal</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>a24ce3d7794dc306fbbf1ecb5fdaa7710</Anchor>
    <Abstract>Bitwise-OR component of CC3PointParticleVertexContent variables that indicates each particle should c...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3PointParticleContentSize</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particles_8h.html</Path>
    <Anchor>af96b381fa98809dd311e432a6e260361</Anchor>
    <Abstract>Bitwise-OR component of CC3PointParticleVertexContent variables that indicates each particle should c...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleConstantComponent</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particle_samples_8h.html</Path>
    <Anchor>aa47c10162cd9247baa946cfd59758b22</Anchor>
    <Abstract>When used as an ending size or component of an ending color for a CC3VariegatedPointParticleHoseEmitt...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleConstantColor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particle_samples_8h.html</Path>
    <Anchor>ac1f4651148e774d684bf0c87b4301ea5</Anchor>
    <Abstract>When used as the ending color for a CC3VariegatedPointParticleHoseEmitter, indicates that the color s...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleConstantSize</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particle_samples_8h.html</Path>
    <Anchor>ab31d316f1d10c0365348f745ca1eb2b9</Anchor>
    <Abstract>When used as the ending size for a CC3VariegatedPointParticleHoseEmitter, indicates that the size sho...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3ParticleFadeOut</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_point_particle_samples_8h.html</Path>
    <Anchor>a599ca3db6de0fd42902ac34b73437805</Anchor>
    <Abstract>When used as the ending color for a CC3VariegatedPointParticleHoseEmitter, indicates that the startin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kItemNotFound</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a55826237cfcd1527ecee48a987bbfca9</Anchor>
    <Abstract>Indication that an item could not be found.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PODClassPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a65a1a1916860ff530310204c0470b2f6</Anchor>
    <Abstract>A pointer to a generic C++ class containing PVR POD data, defined as a void pointer so that it can be...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PODStructPtr</Name>
      <APILanguage>c</APILanguage>
      <Type>tdef</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a6e92625834f5d9008b3088d31b4cb41a</Anchor>
    <Abstract>A pointer to a generic C++ structure containing PVR POD data, defined as a void pointer so that it ca...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLBlendFuncFromEPODBlendFunc</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a4a0e65560c20e6c759949b5e63f276ed</Anchor>
    <Abstract>Maps the specified ePODBlendFunc to a valid GL blend function, and returns the GL value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLDrawingModeForSPODMesh</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a7525bd0babcae2205691309a7fe48d4d</Anchor>
    <Abstract>Extracts and returns the appropriate GL drawing mode from the specified SPODMesh structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GLElementTypeFromEPVRTDataType</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>ad755eb0bc445080adef2abb662b22f30</Anchor>
    <Abstract>Maps the specified ePVRTDataType to a valid GL data type, and returns the GL value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCPODData</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a64c661b4fc5b270323095ce775969f54</Anchor>
    <Abstract>Returns a string description of the specified CPODData structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromCPVRTBoneBatches</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>aefa41ec4497fcc034fb1edcb9e5118d0</Anchor>
    <Abstract>Returns a string description of the specified CPVRTBoneBatches structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromEPODBlendFunc</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a7a289e80e19c64a286f694102073d3ff</Anchor>
    <Abstract>Returns the name of the specified ePODBlendFunc enumeration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromEPODBlendOp</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a89b380dd6439f4d4609429f0cb96ea44</Anchor>
    <Abstract>Returns the name of the specified ePODBlendOp blend operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromEPODLight</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>af58b2002a97aff265e19c00a44127e07</Anchor>
    <Abstract>Returns the name of the specified ePODLight light type operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromEPVRTDataType</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>ab84db75e799045367eb0f6daec6d7ef9</Anchor>
    <Abstract>Returns the name of the specified ePVRTDataType enumeration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromSPODCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a8d93b16e4e7e459fdc47479b13945120</Anchor>
    <Abstract>Returns a string description of the specified SPODCamera structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromSPODLight</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>ac09577a1d172c4f826bfd2f9d3984ae2</Anchor>
    <Abstract>Returns a string description of the specified SPODLight structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromSPODMaterial</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a11ad4973f269fa9e259cf8e67ff78e05</Anchor>
    <Abstract>Returns a string description of the specified SPODMaterial structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromSPODMesh</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>a72492dfcc6a3df5da621d907b5ec4790</Anchor>
    <Abstract>Returns a string description of the specified SPODMesh structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromSPODNode</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>ab217e05b1210d6c9ace8c10868cfca77</Anchor>
    <Abstract>Returns a string description of the specified SPODNode structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSStringFromSPODTexture</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>_c_c3_p_v_r_foundation_8h.html</Path>
    <Anchor>acdba7b94a4cfdb836e06e64e93c6d9e4</Anchor>
    <Abstract>Returns a string description of the specified SPODTexture structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3MatrixIsDirtyByDirection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_targetting_node_8h.html</Path>
    <Anchor>a6f5ac198a89b796e27540bc080d7207e</Anchor>
    <Abstract>Constants used by matrixIsDirtyBy to indicate why the transform matrix is dirty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorInitialForwardDirection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_targetting_node_8h.html</Path>
    <Anchor>a7ffa227c2768ce6ca7c52db42fc3d071</Anchor>
    <Abstract>The OpenGL ES standard initial &amp;quot;forward&amp;quot; direction for unrotated objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorInitialRightDirection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_targetting_node_8h.html</Path>
    <Anchor>a2e6578ebccd781f726e48a9bd23f5399</Anchor>
    <Abstract>The OpenGL ES standard initial &amp;quot;right&amp;quot; direction for unrotated objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3VectorInitialUpDirection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_targetting_node_8h.html</Path>
    <Anchor>ad828198a8c13be0238130210628f6780</Anchor>
    <Abstract>The OpenGL ES standard initial &amp;quot;up&amp;quot; direction for unrotated objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3TargettingAxisRestrictionNone</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_targetting_node_8h.html</Path>
    <Anchor>a4a9d30f8854f20192afb9e798514b4aaa1e0a5ef50d79d4d3f74f19cbafc7a981</Anchor>
    <Abstract>Don&amp;#39;t restrict targetting rotations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3TargettingAxisRestrictionXAxis</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_targetting_node_8h.html</Path>
    <Anchor>a4a9d30f8854f20192afb9e798514b4aaab261eaedca610bad3a5c48efcccc6b18</Anchor>
    <Abstract>Only rotate around the X-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3TargettingAxisRestrictionYAxis</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_targetting_node_8h.html</Path>
    <Anchor>a4a9d30f8854f20192afb9e798514b4aaa3030f9550470074c3f25112daf6d36df</Anchor>
    <Abstract>Only rotate around the Y-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3TargettingAxisRestrictionZAxis</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_targetting_node_8h.html</Path>
    <Anchor>a4a9d30f8854f20192afb9e798514b4aaadcec448d5c4d4a94d326dd44e2438a5b</Anchor>
    <Abstract>Only rotate around the Z-axis.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultTextureParameters</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_texture_8h.html</Path>
    <Anchor>a1a4734a67ab3440925e7cb17238b03c2</Anchor>
    <Abstract>Default texture parameters assigned to the textureParameters property of each instance during instanc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DOT3RGB_XYZ</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_texture_unit_8h.html</Path>
    <Anchor>a3abfbc20c3346f0b31489dd7921758c3a28b6043d45ec2ad414dd4988f9e86464</Anchor>
    <Abstract>R=X, G=Y, B=Z.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DOT3RGB_XZY</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_texture_unit_8h.html</Path>
    <Anchor>a3abfbc20c3346f0b31489dd7921758c3a333bc29c4cd0040126e2627fa743dfdd</Anchor>
    <Abstract>R=X, G=Z, B=Y.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DOT3RGB_YXZ</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_texture_unit_8h.html</Path>
    <Anchor>a3abfbc20c3346f0b31489dd7921758c3a2b40980642ebf027850491decd18c8d2</Anchor>
    <Abstract>R=Y, G=X, B=Z.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DOT3RGB_YZX</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_texture_unit_8h.html</Path>
    <Anchor>a3abfbc20c3346f0b31489dd7921758c3a891c3f014b87c575127b17d8b7dbd5ef</Anchor>
    <Abstract>R=Y, G=Z, B=X.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DOT3RGB_ZXY</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_texture_unit_8h.html</Path>
    <Anchor>a3abfbc20c3346f0b31489dd7921758c3a65fdfd4274bcd7bff47a042244194db9</Anchor>
    <Abstract>R=Z, G=X, B=Y.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DOT3RGB_ZYX</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>_c_c3_texture_unit_8h.html</Path>
    <Anchor>a3abfbc20c3346f0b31489dd7921758c3a0ce0c2853443318351a2071e61f2b36d</Anchor>
    <Abstract>R=Z, G=Y, B=X.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3UnitTextureRectangle</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_vertex_arrays_8h.html</Path>
    <Anchor>a4fe1ba8bff82d23151d88104abd6f64d</Anchor>
    <Abstract>A rectangle with origin zero and unit size for initial value of the textureRectangle property...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3TouchQueueLength</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>_c_c3_world_8h.html</Path>
    <Anchor>ab93a87074f38b9bc9a0df0ae40bb8553</Anchor>
    <Abstract>The max length of the queue that tracks touch events.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultLightColorAmbientWorld</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_world_8h.html</Path>
    <Anchor>a8d90a67db0fd6fab284316c0e5b97ea8</Anchor>
    <Abstract>Default color for the ambient world light.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultMaximumUpdateInterval</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_world_8h.html</Path>
    <Anchor>af2672b1ceee4d73cae354b28767a37ef</Anchor>
    <Abstract>Default value of the maxUpdateInterval property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>kCC3DefaultMinimumUpdateInterval</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>_c_c3_world_8h.html</Path>
    <Anchor>afd5d39825cf2ba6c4aa8d026b1911e9a</Anchor>
    <Abstract>Default value of the minUpdateInterval property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deprecated</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>deprecated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ActionRangeLimit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ActionRangeLimit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_action_range_limit.html</Path>
    <Abstract>A CC3ActionRangeLimit holds another action, and serves to modify the normal zero-to-one range of upda...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithAction:limitFrom:to:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ActionRangeLimit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_action_range_limit.html</Path>
    <Anchor>a6c99c24708cc78e8c9fee7a420d8c72c</Anchor>
    <Abstract>Initializes this instance to modify the update values that are forwarded to the specified action so t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithAction:limitFrom:to:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ActionRangeLimit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_action_range_limit.html</Path>
    <Anchor>acdbb9a975bbf23f7d405d493321097b6</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance that modify the update values that are forwarded t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3AngularVector</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3AngularVector</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_angular_vector.html</Path>
    <Abstract>Specifies a vector using angular coordinate axes.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>heading</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3AngularVector</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_angular_vector.html</Path>
    <Anchor>adddda3d8fc7e9c12b7790bf2bcbe4eb7</Anchor>
    <Abstract>The horizontal heading.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inclination</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3AngularVector</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_angular_vector.html</Path>
    <Anchor>a6adbfc7a2eed43550e7c269525b3cb31</Anchor>
    <Abstract>The inclination from horizontal.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3AngularVector</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_angular_vector.html</Path>
    <Anchor>ae7a40c757facc6d192b8d9335d4b6479</Anchor>
    <Abstract>The radial distance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Animate</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Animate</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_animate.html</Path>
    <Abstract>A CCActionInterval that animates a CC3Node.</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asActionLimitedFrom:to:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Animate</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_animate.html</Path>
    <Anchor>a28d52bf8d73a8c6f07199f45057a5382</Anchor>
    <Abstract>Wraps this instance in an autoreleased CC3ActionRangeLimit instance that maps the normal zero-to-one ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:limitFrom:to:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Animate</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_animate.html</Path>
    <Anchor>ac09d88c6aa71f0aa68097c3eb7f1e798</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified duration, then wraps that insta...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isReversed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Animate</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_animate.html</Path>
    <Anchor>abf84213618a61d863c9876a8d6c9fd9d</Anchor>
    <Abstract>Indicates whether this action is running in reverse.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ArrayNodeAnimation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Abstract>A concrete CC3NodeAnimation that holds animation data in simple arrays.</Abstract>
    <DeclaredIn>CC3NodeAnimation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateLocations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>a1bbd00c45bf6dc11fef531482d5a6ee3</Anchor>
    <Abstract>Allocates underlying memory for an array of location vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateQuaternions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>adabec87e922e9f1a7e1db5af4d80de7b</Anchor>
    <Abstract>Allocates underlying memory for an array of quaternions vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateRotations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>a559454be3578982cc243e73f702e66ed</Anchor>
    <Abstract>Allocates underlying memory for an array of rotation vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateScales</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>a73a14572278c48f38abd4ae03844506b</Anchor>
    <Abstract>Allocates underlying memory for an array of scale vectors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocateLocations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>aff36016962f0a8375acd0ce1949b675c</Anchor>
    <Abstract>Deallocates the underlying location array allocated with the allocateLocations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocateQuaternions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>a2ed2c7d3b88f15fc377523f326d26f5c</Anchor>
    <Abstract>Deallocates the underlying quaternion array allocated with the allocateQuaternions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocateRotations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>a9d1f0a009db985efa039a29e26f4cb43</Anchor>
    <Abstract>Deallocates the underlying rotation array allocated with the allocateRotations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocateScales</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>a601a20f64112374c529312209cec12ed</Anchor>
    <Abstract>Deallocates the underlying scale array allocated with the allocateScales.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animatedLocations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>a84787559e46bbab1ef867c80febf18c6</Anchor>
    <Abstract>An array of location data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animatedQuaternions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>adad609a85ea0d3be75cee2e49f9e9c0f</Anchor>
    <Abstract>An array of rotation quaternion data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animatedRotations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>a5dbeaf1e5f2bec714fc7405776ae8437</Anchor>
    <Abstract>An array of rotation data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animatedScales</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ArrayNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_array_node_animation.html</Path>
    <Anchor>af2e9a448e94da849b8fd3f5ea785ddc0</Anchor>
    <Abstract>An array of scale data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3AttenuationCoefficients</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3AttenuationCoefficients</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_attenuation_coefficients.html</Path>
    <Abstract>The coefficients of the equation for an attenuation function: (a + b*r + c*r*r), where r is the radia...</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3AttenuationCoefficients</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_attenuation_coefficients.html</Path>
    <Anchor>a8c8298cacb660f4b6c4e9efe8fbdcc86</Anchor>
    <Abstract>The a coefficient in the attenuation function.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3AttenuationCoefficients</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_attenuation_coefficients.html</Path>
    <Anchor>acb30593f549c36e2680e79e67db907c6</Anchor>
    <Abstract>The b coefficient in the attenuation function.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3AttenuationCoefficients</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_attenuation_coefficients.html</Path>
    <Anchor>a6d648b6de594ec356cf25fc7d8e65d19</Anchor>
    <Abstract>The c coefficient in the attenuation function.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Billboard</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Abstract>This CC3Node displays a 2D cocos2d CCNode as part of the 3D world.</Abstract>
    <DeclaredIn>CC3Billboard.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignToCamera:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>ac186a8a9df9848ee6a0121c12a52462d</Anchor>
    <Abstract>Invoked automatically by the CC3World to configure the 2D node relative to the location of the camera...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesIntersectBounds:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a167dc005fac488f8db81c039566217d6</Anchor>
    <Abstract>Returns whether the local content of this node intersects the given bounding rectangle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw2dWithinBounds:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a364d63f410c2bb363ca0a7bc9a73e7e3</Anchor>
    <Abstract>If the value of the shouldDrawAs2DOverlay property is YES, and the 2D node is within the given bounds...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithBillboard:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a5efa472f042f75866ee334dd31dde03d</Anchor>
    <Abstract>Initializes this unnamed instance with an automatically generated unique tag value, and the specified 2D node to be drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithName:withBillboard:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>ac1516daf49aaae65ebc0ec993417d0d8</Anchor>
    <Abstract>Initializes this instance with an automatically generated unique tag value, and the specified name an...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:withName:withBillboard:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a8c636b3c8b739c841c2d6781ccd728d1</Anchor>
    <Abstract>Initializes this instance with the specified tag, name and 2D node to be drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetBillboardBoundingRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a4dc55220a01574fd80c49bf5b3e6f626</Anchor>
    <Abstract>Resets the value of the billboardBoundingRect property so that it will be measured again from the 2D ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deviceScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a3f519d4c15a9f23b2bac7bce37719fd9</Anchor>
    <Abstract>The scaling factor used to adjust the scale of the 2D overlay node so that it&amp;#39;s size relative to the ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithBillboard:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a467cee4b4a2c39d81cde969d68217c9b</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithName:withBillboard:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a2a8f2d376c75258cfd4d78b9c5a9b6bb</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with an automatically generated unique tag value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>billboard</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>ac2fce27cd6417e1e9bbfd4f5ec6116bc</Anchor>
    <Abstract>The 2D artifact that this node will display.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>billboardBoundingRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a68bf62bcde2b3f3c2af1d883eae7d98b</Anchor>
    <Abstract>The rectangle, in pixels, bounding the 2D CCNode, in the local coordinate system of the 2D node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maximumBillboardScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a1324c538b91b816e4b1ab42b664b855d</Anchor>
    <Abstract>The maximum scale to which the 2D node will be allowed to grow as it approaches the camera...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minimumBillboardScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a78e9cdabfa206c83e65a26669e6d3d5d</Anchor>
    <Abstract>The minimum scale to which the 2D node will be allowed to shrink as it moves away from the camera...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>offsetPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>aad89ceeef943483999d94ba3c2955d6c</Anchor>
    <Abstract>An offset, measured in 2D display points, at which the 2D node should be positioned relative to the 2...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAlwaysMeasureBillboardBoundingRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>aee3367696940f4e162aa9f6c3215f64e</Anchor>
    <Abstract>Indicates whether the value of the billboardBoundingRect property should be measured from the 2D node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawAs2DOverlay</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a4cbd36ec999e2517f600e5e91af1c36b</Anchor>
    <Abstract>Indicates whether this instance should be drawn in 2D as an overlay on top of the 3D world...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldMaximizeBillboardBoundingRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a187a0823c2112e71054b0ca01e1a41d6</Anchor>
    <Abstract>If the value of this property is set to YES, the boundary of the 2D node will be measured each time t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNormalizeScaleToDevice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>a13596cd43c1ee52a2836aaf9b6966637</Anchor>
    <Abstract>Indicates whether the size of the 2D billboard node should be adjusted so that its size relative to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUnitIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>aa1e0acc68da1aeb51ac09232cdc77d36</Anchor>
    <Abstract>The index of the GL texture unit to use when drawing the 2D CCNode.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unityScaleDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Billboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard.html</Path>
    <Anchor>aa3145d74235f0e6c982486283b321940</Anchor>
    <Abstract>The distance from the camera, in 3D space, at which the 2D artifact will be displayed at unity scale ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BillboardBoundingBoxArea</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3BillboardBoundingBoxArea</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard_bounding_box_area.html</Path>
    <Abstract>A CC3NodeBoundingArea, used exclusively with CC3Billboards, that uses the billboardBoundingRect prope...</Abstract>
    <DeclaredIn>CC3Billboard.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBoundingRectVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3BillboardBoundingBoxArea</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_billboard_bounding_box_area.html</Path>
    <Anchor>a95984c37851230525e127fb871a07056</Anchor>
    <Abstract>An array of the four vertices of the bounding rectangle, in the global coordinate system...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Bone</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Bone</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_bone.html</Path>
    <Abstract>CC3Bone is the building block of skeletons that control the deformation of a skin mesh...</Abstract>
    <DeclaredIn>CC3VertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyPoseTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Bone</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_bone.html</Path>
    <Anchor>a969667d271d1356772019bbf7ead9df0</Anchor>
    <Abstract>Applies the changes to the current transform of this bone, relative to the rest pose of this bone...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restPoseInvertedMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Bone</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_bone.html</Path>
    <Anchor>a953557cbc18fa048ecef15739d5adf1d</Anchor>
    <Abstract>Returns the cached inverted rest pose matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoundingBox</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3BoundingBox</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_bounding_box.html</Path>
    <Abstract>Defines an axially-aligned-bounding-box (AABB), describing a 3D volume by specifying the minimum and ...</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maximum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3BoundingBox</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_bounding_box.html</Path>
    <Anchor>a450a31e7f5b3f448ea2cadfbd9423d24</Anchor>
    <Abstract>The maximum corner (top-right-front).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minimum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3BoundingBox</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_bounding_box.html</Path>
    <Anchor>abcd98745765908bc284682e6b2d93c1f</Anchor>
    <Abstract>The minimum corner (bottom-left-rear).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BoxNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3BoxNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_box_node.html</Path>
    <Abstract>CC3BoxNode is a type of CC3MeshNode that is specialized to display simple box or cube meshes...</Abstract>
    <DeclaredIn>CC3MeshNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BTreeNodeSequencer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3BTreeNodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_b_tree_node_sequencer.html</Path>
    <Abstract>An CC3BTreeNodeSequencer is a type of CC3NodeSequencer that separates nodes into a B-tree structure o...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSequencer:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3BTreeNodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_b_tree_node_sequencer.html</Path>
    <Anchor>a88302450a9c415e90f293dead3433510</Anchor>
    <Abstract>Adds the specified sequencer as a child sequencer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sequencerLocalContentOpaqueFirst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3BTreeNodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_b_tree_node_sequencer.html</Path>
    <Anchor>a9cbc95b8d54e28763ac8a320f663d74d</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance that accepts only nodes that have local content to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sequencerLocalContentOpaqueFirstGroupMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3BTreeNodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_b_tree_node_sequencer.html</Path>
    <Anchor>a7741bc1109d5364fbb5182ff382dc700</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance that accepts only nodes that have local content to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sequencerLocalContentOpaqueFirstGroupTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3BTreeNodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_b_tree_node_sequencer.html</Path>
    <Anchor>a2f55a3ca70be988e6c9a5051b3b37cd2</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance that accepts only nodes that have local content to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sequencers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3BTreeNodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_b_tree_node_sequencer.html</Path>
    <Anchor>a6ee637da863246ad00464734cac3c8b7</Anchor>
    <Abstract>The array of child sequencers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3BumpMapTextureUnit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3BumpMapTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_bump_map_texture_unit.html</Path>
    <Abstract>A texture unit configured for DOT3 bump-mapping.</Abstract>
    <DeclaredIn>CC3TextureUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBumpMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3BumpMapTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_bump_map_texture_unit.html</Path>
    <Anchor>a1dabe37724632ce7ea82670f12e613a7</Anchor>
    <Abstract>Returns whether this texture unit is configured as a bump-map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Camera</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Abstract>CC3Camera represents the camera viewing the 3D world.</Abstract>
    <DeclaredIn>CC3Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildPerspective</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>aa8bff98eb09eb858c676ee3e6aabaf54</Anchor>
    <Abstract>Updates the transformMatrix and modelviewMatrix if the target has moved, builds the projectionMatrix ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateLocationToShowAllOf:fromDirection:withPadding:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a2b07b9bbc87b31f35a0e610c7ef18f4e</Anchor>
    <Abstract>Calculates and returns where to position this camera along a line extending in the specified directio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a384baf192b9c79660eea8d71a2e8d33f</Anchor>
    <Abstract>Closes the camera for drawing operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markProjectionDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a9fd0add570884eb4bd75b7b764d335bd</Anchor>
    <Abstract>Indicates that the projection matrix is dirty and needs to be recalculated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToShowAllOf:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a99652a747327243106680e854f065533</Anchor>
    <Abstract>Moves this camera to a location along a line between the center of the specified node and this camera...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToShowAllOf:fromDirection:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a44bcbf5a0d6d319a26a5ab886c34e9bf</Anchor>
    <Abstract>Moves this camera to a location along a line extending in the specified direction from the center of ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToShowAllOf:fromDirection:withPadding:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a5035d4372a834ddfe78bfb03562c74e3</Anchor>
    <Abstract>Moves this camera to a location along a line extending in the specified direction from the center of ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToShowAllOf:withPadding:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>ae1a7e835df13bcd22176fcb2054254f5</Anchor>
    <Abstract>Moves this camera to a location along a line between the center of the specified node and this camera...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveWithDuration:toShowAllOf:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a39f017f94c2319f2eb935afb3b88c26a</Anchor>
    <Abstract>Moves this camera to a location along a line between the center of the specified node and this camera...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveWithDuration:toShowAllOf:fromDirection:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>abb8480e6b0572d9f95cfd031edc434f5</Anchor>
    <Abstract>Moves this camera to a location along a line extending in the specified direction from the center of ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveWithDuration:toShowAllOf:fromDirection:withPadding:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a564dffa3635e2c663ad543eb8c50ab0a</Anchor>
    <Abstract>Moves this camera to a location along a line extending in the specified direction from the center of ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveWithDuration:toShowAllOf:withPadding:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a73b585ab26e6b59228e08acfcb3658f8</Anchor>
    <Abstract>Moves this camera to a location along a line between the center of the specified node and this camera...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>afee86c1a0699c4b7ff4c9e37e37a2c5b</Anchor>
    <Abstract>Opens the camera for drawing operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectLocation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a1899ddd174df5fc78f1bbb4b82b265b7</Anchor>
    <Abstract>Projects the specified global 3D world location onto a 2D position in the viewport coordinate space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>adcc121548cd5bde83bc81a56e75f0d38</Anchor>
    <Abstract>Projects the globalLocation of the specified node onto a 2D position in the viewport coordinate space...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unprojectPoint:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a9ed4facde99ae62c2063740798e17834</Anchor>
    <Abstract>Projects a 2D point, which is specified in the local coordinates of the CC3Layer, into a ray extendin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unprojectPoint:ontoPlane:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a426694924d2c5f76c304b7f8717e9a25</Anchor>
    <Abstract>Projects a 2D point, which is specified in the local coordinates of the CC3Layer, to a 3D location on...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>farClippingPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>ae4471dee865493cfe3be7292c3b18c51</Anchor>
    <Abstract>The distance from the camera to the clipping plane of the camera&amp;#39;s frustrum that is farthest from the...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>ad9f808685004fa2c48af48240d351e49</Anchor>
    <Abstract>The nominal field of view of this camera, in degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a76546e898f27e8fc8665b0b02c2d33cc</Anchor>
    <Abstract>The frustum of the camera.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingParallelProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a89c14ac272e49437406aa9b382f7b5bb</Anchor>
    <Abstract>Indicates whether this camera uses parallel projection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modelviewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a9c696571b5d0575727d615bf1a07ed22</Anchor>
    <Abstract>The matrix that holds the transform from model space to view space.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nearClippingPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a6f7c7ea7029e0cc2b68570e09d821893</Anchor>
    <Abstract>The distance from the camera to the clipping plane of the camera&amp;#39;s frustrum that is nearest to the ca...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Camera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_camera.html</Path>
    <Anchor>a9c1f626dc55792105895cd4a91c79641</Anchor>
    <Abstract>The projection matrix that takes the camera&amp;#39;s modelview and projects it to the viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ConfigurableTextureUnit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Abstract>A texture unit that provides complete flexibility to define the way the texture will be combined with...</Abstract>
    <DeclaredIn>CC3TextureUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaOperand0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a39165688e5cc0667650e07928f1e43de</Anchor>
    <Abstract>Defines the operand to be applied to the alpha component of alphaSource0 prior to it being used by th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaOperand1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>aa09e86adbcb92ee0f1e21452c7b920b0</Anchor>
    <Abstract>Defines the operand to be applied to the alpha component of alphaSource1 prior to it being used by th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaOperand2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>abfc1b72c59ae533d059b7ec0bb997d9a</Anchor>
    <Abstract>Defines the operand to be applied to the alpha component of alphaSource2 prior to it being used by th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaSource0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a287e06864983b5ccc05b8a2d65b1081f</Anchor>
    <Abstract>Identifies the source texture for the alpha component used as argument zero in the texture function d...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaSource1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a699c9fb1e9ca4c9fbe4803e96b61aad5</Anchor>
    <Abstract>Identifies the source texture for the alpha components used as argument one in the texture function d...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaSource2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a8b922fbd588cc3afd3f20b73916f4d64</Anchor>
    <Abstract>Identifies the source texture for the alpha components used as argument two in the texture function d...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combineAlphaFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a9d50961ad2d86bc38a44ba86212fcdd9</Anchor>
    <Abstract>If the textureEnvironmentMode property is set to GL_COMBINE, this property defines the form of combin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combineRGBFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>aaf574ab44e15a8701d4271c6adca0e51</Anchor>
    <Abstract>If the textureEnvironmentMode property is set to GL_COMBINE, this property defines the form of combin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBumpMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a9d2326f6b783cd6ef587efffc05fbb6c</Anchor>
    <Abstract>Returns whether this texture unit is configured as a bump-map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbOperand0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a0df5732307c996182b565588d9e079f4</Anchor>
    <Abstract>Defines the operand to be applied to the RGB components of rgbSource0 prior to them being used by the...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbOperand1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a45999dc5169244671099624cc0a8461e</Anchor>
    <Abstract>Defines the operand to be applied to the RGB components of rgbSource1 prior to them being used by the...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbOperand2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a812c7e363fbf615a0db7dbaa83503231</Anchor>
    <Abstract>Defines the operand to be applied to the RGB components of rgbSource2 prior to them being used by the...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbSource0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>afa202b7736ce42f7af3f89f5ca94c2f3</Anchor>
    <Abstract>Identifies the source texture for the RGB components used as argument zero in the texture function de...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbSource1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>ae133bb7c7ec1a19ccc262460429f8d2f</Anchor>
    <Abstract>Identifies the source texture for the RGB components used as argument one in the texture function def...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbSource2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a1bfaa3b5770e7cedd9473261a4d0b040</Anchor>
    <Abstract>Identifies the source texture for the RGB components used as argument two in the texture function def...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureEnvironmentMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ConfigurableTextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_configurable_texture_unit.html</Path>
    <Anchor>a37821151af05df31798422fc26518720</Anchor>
    <Abstract>Defines the texture function to be used when combining this texture unit with the output of the previ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3DirectionalRotator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3DirectionalRotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_directional_rotator.html</Path>
    <Abstract>This CC3Rotator subclass adds the ability to set rotation based on directional information.</Abstract>
    <DeclaredIn>CC3TargettingNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DirectionalRotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_directional_rotator.html</Path>
    <Anchor>a58c7bd0576dc2f9822ec5f4df479a41a</Anchor>
    <Abstract>The direction towards which this node is pointing, relative to the parent of the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rightDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DirectionalRotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_directional_rotator.html</Path>
    <Anchor>a1ec23413a4e257368d573bfafdeb9e62</Anchor>
    <Abstract>The direction in the node&amp;#39;s coordinate system that would be considered to be &amp;quot;off to the right&amp;quot; relat...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DirectionalRotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_directional_rotator.html</Path>
    <Anchor>a6fc0b6165edf0805af40dbe1f4dbd8d3</Anchor>
    <Abstract>The direction, in the node&amp;#39;s coordinate system, that is considered to be &amp;#39;up&amp;#39;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>worldUpDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DirectionalRotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_directional_rotator.html</Path>
    <Anchor>a71c51b79f20af9aed9f198a95568d80e</Anchor>
    <Abstract>The direction, in the global coordinate system, that is considered to be &amp;#39;up&amp;#39;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3DirectionMarkerNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3DirectionMarkerNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_direction_marker_node.html</Path>
    <Abstract>CC3DirectionMarkerNode is a type of CC3LineNode specialized for drawing a line from the pivot point o...</Abstract>
    <DeclaredIn>CC3MeshNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>directionMarkerScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3DirectionMarkerNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_direction_marker_node.html</Path>
    <Anchor>a508db83fca96adc22e6011e6217d7d28</Anchor>
    <Abstract>Returns the proportional distance that the direction marker line should protrude from the parent node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirectionMarkerScale:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3DirectionMarkerNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_direction_marker_node.html</Path>
    <Anchor>a0e36ccf1cccccfd6bd1f44ea57028f0b</Anchor>
    <Abstract>Sets the proportional distance that the direction marker line should protrude from the parent node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markerDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DirectionMarkerNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_direction_marker_node.html</Path>
    <Anchor>a1822ed05ed60b9b371256a0f2fd056b9</Anchor>
    <Abstract>Indicates the unit direction towards which this line marker will point from the pivot point (origin) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3DrawableVertexArray</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Abstract>This abstract subclass of CC3VertexArray adds the functionality to draw the vertex data to the displa...</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateStripLengths:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>afb5a79916b3ec45b5326c8aa61d2e248</Anchor>
    <Abstract>Sets the specified number of strips into the stripCount property, then allocates an array of Gluints ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocateStripLengths</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>a9c74ce098d6ce31a039f53911edae516</Anchor>
    <Abstract>Deallocates the array of strip-lengths that was created by a previous invocation of the allocateStrip...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawFrom:forCount:withVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>af3d88895c5889c07ffec882826222422</Anchor>
    <Abstract>Draws the specified number of vertices, starting at the specified vertex index, in a single GL draw c...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>a1e9dcf7292bfebe3fb8153f6e3d6cf2a</Anchor>
    <Abstract>Draws the elements, either in strips, or in a single call, depending on the value of the stripCount p...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>faceCountFromVertexCount:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>a85c00e2111f3e6644748d68d4c74996e</Anchor>
    <Abstract>Returns the number of faces to be drawn from the specified number of vertices, based on the drawing m...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexCountFromFaceCount:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>a178fd1673388358f8aafde7292c78e64</Anchor>
    <Abstract>Returns the number of vertices required to draw the specified number of faces, based on the drawing m...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawingMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>a319efcee3ca6b6eb97d70172a6f2d016</Anchor>
    <Abstract>The drawing mode indicating how the vertices are connected (points, lines, triangles...).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>ae8f12a263733a07140b02ec5e3259743</Anchor>
    <Abstract>An index reference to the first element that will be drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stripCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>aff491470eb7d388ec2965a24ca624aac</Anchor>
    <Abstract>The underlying data can be drawn in strips, using multiple GL calls, rather than a single call...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stripLengths</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3DrawableVertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_drawable_vertex_array.html</Path>
    <Anchor>ae9726608aae5690d4d9ea9d589839720</Anchor>
    <Abstract>An array of values, each indicating the number of elements to draw in the corresponding strip...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3EAGLView</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3EAGLView</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_e_a_g_l_view.html</Path>
    <Abstract>If your application supports BOTH multisampling AND node-picking from touch events, you should use this class instead of EAGLView.</Abstract>
    <DeclaredIn>CC3EAGLView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ES1Renderer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ES1Renderer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_e_s1_renderer.html</Path>
    <Abstract>Specialized renderer that supports node-picking while multisampling antialiasing is active...</Abstract>
    <DeclaredIn>CC3EAGLView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closePicking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ES1Renderer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_e_s1_renderer.html</Path>
    <Anchor>a85af63fb4ba02db21746c07bd0d0987c</Anchor>
    <Abstract>Restores the rendering framework to normal rendering.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPicking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ES1Renderer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_e_s1_renderer.html</Path>
    <Anchor>a2660df79ac5cc7159e1b10bf5e416098</Anchor>
    <Abstract>Sets up the rendering framework to support rendering custom colors and reading a pixel color during n...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Fog</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Abstract>CC3Fog controls fog in the 3D world.</Abstract>
    <DeclaredIn>CC3Fog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a82bd512fb2f857fb1715d528a9eef0d1</Anchor>
    <Abstract>If the visible property is set to YES, draws the fog to the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActionByTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a64d9522e4a013755d88fe0a0a948aa0a</Anchor>
    <Abstract>Gets an action from the running action list given its tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfRunningActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a7d9f535f097fa5a9a160f0f101f494b1</Anchor>
    <Abstract>Returns the numbers of actions that are running plus the ones that are scheduled to run (actions in a...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runAction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>ad4202d2bf49d3b5d741a7e22d174ea2f</Anchor>
    <Abstract>Executes an action, and returns the action that is executed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopAction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a251bc8b3709153777ebf339615fd83bf</Anchor>
    <Abstract>Removes an action from the running action list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopActionByTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>accf5a9b35c68bcb83866f9dc20071049</Anchor>
    <Abstract>Removes an action from the running action list given its tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopAllActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>ae1813afa65032b766138426373159d32</Anchor>
    <Abstract>Removes all actions from the running action list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a3990f2a54cde9fe3903b504a8ae5d1fa</Anchor>
    <Abstract>Disables the rendering of fog in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a3ce53a8abb66cb41e8d9b947b63ab039</Anchor>
    <Abstract>This method is invoked periodically when the fog is to be updated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a87f9990d705a9fe11356b6e18893dc28</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a3990f2a54cde9fe3903b504a8ae5d1fa</Anchor>
    <Abstract>Disables the rendering of fog in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attenuationMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a6f4d58c05f948741dc822de540bb8528</Anchor>
    <Abstract>Indicates how the fog attenuates visibility with distance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>density</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>ad7b34a73754dce3e5e7ba4fde4bd2a8e</Anchor>
    <Abstract>The density value used in the exponential functions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a81cf68fcda00572cdebf25b2c27bf440</Anchor>
    <Abstract>The distance from the camera, at which linear attenuation ends.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>floatColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>af65e447139e0ec4185c568ecf70dc3d9</Anchor>
    <Abstract>The color of the fog.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a54bb2153b0582ba438282a5ec91f201b</Anchor>
    <Abstract>Indicates whether the dynamic behaviour of this fog is enabled.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performanceHint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>aa48608a6e8ea82af992a3a45dcb5b905</Anchor>
    <Abstract>Indicates how the GL engine should trade off between rendering quality and speed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>a0fa6a145400fbfc15ec1d29a90009033</Anchor>
    <Abstract>The distance from the camera, at which linear attenuation starts.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_fog.html</Path>
    <Anchor>aa6f8caf750ef3643079907080ad3d09b</Anchor>
    <Abstract>Controls whether the fog should be drawn into the world.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Frustum</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Abstract>Represents a camera&amp;#39;s frustum.</Abstract>
    <DeclaredIn>CC3Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildPlanes:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a18f15e3b34a8eebcedb0aa493ff685e0</Anchor>
    <Abstract>Builds the planes in this frustum from the internal projectionMatrix and specified modelviewMatrix by...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesIntersectPointAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>aa3c9efc464fe00c2bc48180befd07fd1</Anchor>
    <Abstract>Returns whether the specified global location intersects (is inside) this frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesIntersectSphereAt:withRadius:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a7202b6ccbe91d07b747184737f737881</Anchor>
    <Abstract>Returns whether a sphere, centered at the specified global location, and with the specified radius...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a7d910d96b8d7a0ee9649ef75ad52b86c</Anchor>
    <Abstract>Returns a string containing a more complete description of this frustum, including a description of e...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markPlanesDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a013537d6bfc78decb8c4f8428bd4f1cd</Anchor>
    <Abstract>Marks the planes as dirty and in need of recalculation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateFrom:andAspect:andNearClip:andFarClip:andZoom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a7e54bb0fa6fb33040bcf405c70e51b0c</Anchor>
    <Abstract>Calculates the six frustum dimensions and the projectionMatrix from the specified projection paramete...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frustum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>af0f9c41a0515c7a842cbb9dba9a4d93d</Anchor>
    <Abstract>Allocates and initializes an autorelease instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bottom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a7373e7d5d699bf9372472f834f168119</Anchor>
    <Abstract>The distance from view center to the bottom of this frustum at the near clipping plane.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bottomPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>ac55effdb3514c02d9744bb150a596953</Anchor>
    <Abstract>The clip plane at the bottom of this frustum, in global coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>far</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>aa445e4e4630e880b274f46df1bfe6d27</Anchor>
    <Abstract>The distance to the far end of this frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>farPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a6d122efd1ef9fa786fe9e46c712ee174</Anchor>
    <Abstract>The clip plane at the far end of this frustum, in global coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingParallelProjection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a6e8bcf54d5aa9e9f92d75bbf6986ed48</Anchor>
    <Abstract>Indicates whether this frustum uses parallel projection.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>left</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>ad8bb9d06af5dba485cef90a3d83a64cf</Anchor>
    <Abstract>The distance from view center to the left edge of this frustum at the near clipping plane...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leftPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a69f3d2b4485210492e6fb95f31e4fbaf</Anchor>
    <Abstract>The clip plane at the left side of this frustum, in global coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>near</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>ab647a7557fa23f7de11e1ef53f819c94</Anchor>
    <Abstract>The distance to the near end of this frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nearPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a23b303125b354a94147be30bdbc7e8c9</Anchor>
    <Abstract>The clip plane at the near end of this frustum, in global coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>afd824f0cc5de2c096e84cd468f43047d</Anchor>
    <Abstract>The projection matrix that takes the camera&amp;#39;s modelview and projects it to the viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>right</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>ad412e203b4ecad19faee51bf9a6d174c</Anchor>
    <Abstract>The distance from view center to the right edge of this frustum at the near clipping plane...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rightPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>aabab0c19c73d53fae266eda4cc18cc56</Anchor>
    <Abstract>The clip plane at the right side of this frustum, in global coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>top</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>a8fd975c3c952510d2463a1cf3c9b24fc</Anchor>
    <Abstract>The distance from view center to the top of this frustum at the near clipping plane.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>topPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Frustum</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_frustum.html</Path>
    <Anchor>ab7b7cbb007e60a7d639242176455791d</Anchor>
    <Abstract>The clip plane at the top of this frustum, in global coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3GLMatrix</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Abstract>A wrapper class for a 4x4 OpenGL matrix array.</Abstract>
    <DeclaredIn>CC3GLMatrix.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractForwardDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a594af1b372f4988df4e9cd0f5ca6fb86</Anchor>
    <Abstract>Extracts and returns the &amp;#39;forward&amp;#39; direction vector from the rotation component of this matrix...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractQuaternion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a04145aec5a33656c41d767ce4e3e3290</Anchor>
    <Abstract>Extracts the rotation component of this matrix and returns it as a quaternion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractRightDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a9866ac7f8f6dc4efdd238dfffafd0223</Anchor>
    <Abstract>Extracts and returns the &amp;#39;right&amp;#39; direction vector from the rotation component of this matrix...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>af158388891c813c27ce6d650eb36aba9</Anchor>
    <Abstract>Extracts the rotation component of this matrix and returns it as an Euler rotation vector...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractUpDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a73adc27e1d160763a02835a9af5982b4</Anchor>
    <Abstract>Extracts and returns the &amp;#39;up&amp;#39; direction vector from the rotation component of this matrix...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a5b3a666897bb69a0044ae5cb9a321443</Anchor>
    <Abstract>Returns an initialized instance with all elements set to zero.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromGLMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a35c620bd2a3f6d48e932c5192f0c9a43</Anchor>
    <Abstract>Returns an initialized instance with all elements copied from the specified GL matrix, which must be a standard 4x4 OpenGL matrix in column-major order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initIdentity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ab8cd3a95725332c9455b091fad1fdb7b</Anchor>
    <Abstract>Returns an initialized instance with all elements populated as an identity matrix (ones on the diagon...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initOnGLMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a3001711bb027bec7ff6fd5aa66e83bb0</Anchor>
    <Abstract>Returns an initialized instance that wraps the specified GL matrix, which must be a standard 4x4 Open...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithElements:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>afbfdab6ee142333b8c85026e951f2a5b</Anchor>
    <Abstract>Returns an initialized instance with elements populated from the specified variable arguments...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a8c289e7e4c890bbdeac5f04aeac57ef0</Anchor>
    <Abstract>Inverts this matrix by using the algorithm of calculating the classical adjoint and dividing by the d...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertAffine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>aebaacef6a99b5aaf32e9e14c7f847943</Anchor>
    <Abstract>Inverts this matrix by using the algorithm of calculating the classical adjoint and dividing by the d...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertRigid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a031643d629aeb5bf3b512cfa94a0a449</Anchor>
    <Abstract>Inverts this matrix using transposition and translation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leftMultiplyByMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>af5a858977bf47dfa292446b59e03b515</Anchor>
    <Abstract>Multiplies a matrix by the specified matrix, where, in the matrix multiplication equation, the specified matrix is on the left and this matrix is on the right.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiplyByMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a1279d3b7c25dd48f88634bc61240a734</Anchor>
    <Abstract>Multiplies a matrix by the specified matrix, where, in the matrix multiplication equation, this matrix is on the left, and the specified matrix is on the right.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a151890a3ff0a35fb24d700d61584c756</Anchor>
    <Abstract>Populates this instance from data copied from the specified matrix instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateFromFrustumLeft:andRight:andBottom:andTop:andNear:andFar:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a559996fd7610741f1f526367e8bd3014</Anchor>
    <Abstract>Populates this matrix as a perspective projection matrix with the specified frustum dimensions...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateFromGLMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a5357cfa424b9571f307f43b287c8a7d4</Anchor>
    <Abstract>Populates this instance from data copied from the specified GL matrix, which must be a standard 4x4 O...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateFromQuaternion:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a954d52b8b860adbd73ca40deb168bb94</Anchor>
    <Abstract>Populates this instance with the rotation data provided by the specified quaternion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateFromRotation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>aad800f66966ba6d7637a0f56be296c81</Anchor>
    <Abstract>Populates this instance with the rotation data provided by the specified rotation vector...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateFromScale:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>afa76b8936fa194b1ae8b7f9ed0b96ee9</Anchor>
    <Abstract>Populates this instance with the scaling data provided by the specified scaling vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateFromTranslation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a15cdf556c246f4102561270d42719470</Anchor>
    <Abstract>Populates this instance with the translation data provided by the specified translation vector...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateIdentity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>aef13fa0c6dcf83c09a03aa7251543119</Anchor>
    <Abstract>Populates this instance as an identity matrix (ones on the diagonal, zeros elsewhere).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateOrthoFromFrustumLeft:andRight:andBottom:andTop:andNear:andFar:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a13760ce846b6594eb38b8a921235f1a9</Anchor>
    <Abstract>Populates this matrix as a parallel projection matrix with the specified frustum dimensions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateToLookAt:withEyeAt:withUp:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a3907fcfc6174ebf29c12020a1e6667e4</Anchor>
    <Abstract>Populates this matrix so that it will transform a vector between the targetLocation and the eyeLocati...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateToPointTowards:withUp:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ae4c25be98db908c1557ded9db9cd1ca2</Anchor>
    <Abstract>Populates this matrix so that it will transform a vector pointed down the negative Z-axis to point in...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateZero</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a64cec56a8c38c471ada687c88106d73a</Anchor>
    <Abstract>Populates this instance so that all elements are zero.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>aa36818d5fafa8b2d47d973a5a18b4442</Anchor>
    <Abstract>Rotates this matrix by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateByQuaternion:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a1d568e50e2af9dafd19fa09ea6f5b00f</Anchor>
    <Abstract>Rotates this matrix by the rotation specified in the given quaternion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateByX:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a8457abfa6c5264a4cb2a0067deb493b1</Anchor>
    <Abstract>Rotates this matrix around the X-axis by the specified number of degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateByY:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a85d7e2467984a6b9b8b02717f7328de4</Anchor>
    <Abstract>Rotates this matrix around the Y-axis by the specified number of degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateByZ:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a388d3f1cf67a98f8ab557a66e4c3f2c7</Anchor>
    <Abstract>Rotates this matrix around the Z-axis by the specified number of degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a37aaba903ed8be0426fcdb4c228052e2</Anchor>
    <Abstract>Scales this matrix in three dimensions by the specified scaling vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleByX:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ace88e0add8dfed5575e8421ed4b8eb56</Anchor>
    <Abstract>Scales this matrix along the X-axis by the specified factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleByY:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a1d160af5bbef8313b10fad53c6b40cde</Anchor>
    <Abstract>Scales this matrix along the Y-axis by the specified factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleByZ:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>adaf438e0f5e3413c50f6fc87b55fa94b</Anchor>
    <Abstract>Scales this matrix along the Z-axis by the specified factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleUniformlyBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a806f04e72472ab49db9c3104ea77368a</Anchor>
    <Abstract>Scales this matrix uniformly in three dimensions by the specified factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformDirection:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>afc70fb7e4b017c0ccf81cedd6a2e0641</Anchor>
    <Abstract>Transforms the specified direction vector using this matrix, and returns the transformed direction...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformHomogeneousVector:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a91f8d25c482b68da9077a383ee31ccad</Anchor>
    <Abstract>Transforms the specified homogeneous vector using this matrix, and returns the transformed homogeneou...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformLocation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a070e8fafc0dac92e7ff2d0544771f40f</Anchor>
    <Abstract>Transforms the specified location vector using this matrix, and returns the transformed location...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translateBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a0f5c6b1724592b97b24d0777ea867f93</Anchor>
    <Abstract>Translates this matrix in three dimensions by the specified translation vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translateBy:rotateBy:scaleBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a895eb121083298cf7c32a680d284f436</Anchor>
    <Abstract>Translates, rotates and scales (in that order) this matrix by the specified amounts.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translateByX:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ab7a6fcc39f5894743fcdf8ef5b15272b</Anchor>
    <Abstract>Translates this matrix along the X-axis by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translateByY:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>aa3e92638532b0edb07f866a8695240c1</Anchor>
    <Abstract>Translates this matrix along the Y-axis by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translateByZ:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a94cc218bfa5f67b1992b33a9b947d4dc</Anchor>
    <Abstract>Translates this matrix along the Z-axis by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transpose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a89f2cc2b10e43e1f8e8efd3801b40128</Anchor>
    <Abstract>Transposes this matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyMatrix:into:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a3b05b5e0793929fe745bf4c8f26129f5</Anchor>
    <Abstract>Copies all data from the source matrix to the destination matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractForwardDirectionFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a7508e92e9446cd2bf981e611e950fa81</Anchor>
    <Abstract>Extracts and returns the &amp;#39;forward&amp;#39; direction vector from the rotation component of the specified matr...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractQuaternionFromMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>aef6d36cde1d653fe65eed0888a95366c</Anchor>
    <Abstract>Extracts the rotation component of the specified matrix and returns it as a quaternion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractRightDirectionFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a8eb10c1a85f9b656418a687ebf94aaaf</Anchor>
    <Abstract>Extracts and returns the &amp;#39;right&amp;#39; direction vector from the rotation component of the specified matrix...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractRotationYXZFromMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>af7facf8173c81ec1de4d5f58726ba152</Anchor>
    <Abstract>Extracts the rotation component of the specified matrix and returns it as an Euler rotation vector...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractRotationZYXFromMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ade373e3117386ca344e4b8907b0788dc</Anchor>
    <Abstract>Extracts the rotation component of the specified matrix and returns it as an Euler rotation vector...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractUpDirectionFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ac1e2f2abdb6330ae2ee26817d5989f71</Anchor>
    <Abstract>Extracts and returns the &amp;#39;up&amp;#39; direction vector from the rotation component of the specified matrix...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>acc74e53ddfbe78d2fa0eaeccb14bc79e</Anchor>
    <Abstract>Allocates and returns an initialized autoreleased instance with all elements populated as an identity...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invert:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a6c2d5aef577e09e4d538902f75509a73</Anchor>
    <Abstract>Inverts the specified matrix by using the algorithm of calculating the classical adjoint and dividing...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertAffine:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>abf04457213de23d46c4a83e7d0b7733c</Anchor>
    <Abstract>Inverts the specified matrix by using the algorithm of calculating the classical adjoint and dividing...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertRigid:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a77c6d1f3521f938932d5181cb6154484</Anchor>
    <Abstract>Inverts the specified matrix using transposition and translation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leftMultiply:byMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a2532bfcbbd22650beff3698a3bc7988b</Anchor>
    <Abstract>Multiplies a matrix by another matrix, where, in the matrix multiplication equation, the first matrix is on the right and the second matrix is on the left.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a81c9d09b678a0700a0abd3df3f9b2f81</Anchor>
    <Abstract>Allocates and returns an initialized autoreleased instance with all elements set to zero...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixFromGLMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a8efc53a90d23e62224486fe7f8b6ce7a</Anchor>
    <Abstract>Allocates and returns an initialized autoreleased instance with all elements copied from the specifie...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixOnGLMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a05a58a6fccebf116ea8a11d11a1b5d8b</Anchor>
    <Abstract>Allocates and returns an initialized autoreleased instance that wraps the specified GL matrix...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixWithElements:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ad0fde0dbe8964dbb37456b672c5bec59</Anchor>
    <Abstract>Allocates and returns an initialized autoreleased instance with elements populated from the specified...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply:byMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>af66a22a46875bcddf05507682f7cf0f5</Anchor>
    <Abstract>Multiplies a matrix by another matrix, where, in the matrix multiplication equation, the first matrix is on the left and the second matrix is on the right.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populate:fromFrustumLeft:andRight:andBottom:andTop:andNear:andFar:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a727d057d13dc57439c279a5c9f128b14</Anchor>
    <Abstract>Populates the specified matrix as a perspective projection matrix with the specified frustum dimensio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populate:toLookAt:withEyeAt:withUp:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>acba047c2f851fcf4810448125637632f</Anchor>
    <Abstract>Populates the specified matrix so that it will transform a vector between the targetLocation and the ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populate:toPointTowards:withUp:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a1284b1f473ebd48e7592ffe2ff5b8391</Anchor>
    <Abstract>Populates the specified matrix so that it will transform a vector pointed down the negative Z-axis to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateOrtho:fromFrustumLeft:andRight:andBottom:andTop:andNear:andFar:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a767d98b77fe022014d2e23d8efcdf99a</Anchor>
    <Abstract>Populates the specified matrix as a parallel projection matrix with the specified frustum dimensions...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate:byQuaternion:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>add7e134bd1fd8483385b4a236291568b</Anchor>
    <Abstract>Rotates the specified matrix by the rotation specified in the given quaternion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate:byX:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>aa16e7cc6e951edf57fa4fe786662e370</Anchor>
    <Abstract>Rotates the specified matrix around the X-axis by the specified number of degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate:byY:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a1bdec1ecbb5f1784c97fc662a2b930d0</Anchor>
    <Abstract>Rotates the specified matrix around the Y-axis by the specified number of degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate:byZ:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ad7e2cbbfe9c615254fc24cbdf424e71c</Anchor>
    <Abstract>Rotates the specified matrix around the Z-axis by the specified number of degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateYXZ:by:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a6bd3bd8024eab258e85b30f14b10211f</Anchor>
    <Abstract>Rotates the specified matrix by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateZYX:by:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a0de5a4e324d38376187712742b11604f</Anchor>
    <Abstract>Rotates the specified matrix by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale:by:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a420d0548f6f8475a20a42f3298683484</Anchor>
    <Abstract>Scales this matrix in three dimensions by the specified scaling vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale:byX:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>af7063a8c67a2a43687ac887a23a38ccb</Anchor>
    <Abstract>Scales this matrix along the X-axis by the specified factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale:byY:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ac5db3545e11a21e38764ef9cc16f752c</Anchor>
    <Abstract>Scales this matrix along the Y-axis by the specified factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale:byZ:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>aa1288fadee0fee4292db280e6ec7c1a6</Anchor>
    <Abstract>Scales this matrix along the Z-axis by the specified factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale:uniformlyBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a44c60d64f0a74524ec59830427e3e96e</Anchor>
    <Abstract>Scales this matrix uniformly in three dimensions by the specified factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform:translateBy:rotateBy:scaleBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a47bb4a2109857ee8915520d1a9178bbb</Anchor>
    <Abstract>Translates, rotates and scales (in that order) the specified matrix by the specified amounts...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformDirection:withMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>acbe6474a29eff1a5b4bb1ca403efb16f</Anchor>
    <Abstract>Transforms the specified direction vector using the specified matrix, and returns the transformed dir...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformHomogeneousVector:withMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>adda956162c85ae5004dfcc4fdaf90a6c</Anchor>
    <Abstract>Transforms the specified homogeneous vector using the specified matrix, and returns the transformed h...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformLocation:withMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a0ea2431314fe4861c898d3dff4dbb948</Anchor>
    <Abstract>Transforms the specified location vector using the specified matrix, and returns the transformed loca...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate:by:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a0ff99eef841b459fd4d09f7f989ef4a8</Anchor>
    <Abstract>Translates this matrix in three dimensions by the specified translation vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate:byX:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a15e2ace10f171c04fbd6c6d2b39f98b4</Anchor>
    <Abstract>Translates this matrix along the X-axis by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate:byY:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a1525cb082bf9b581905cc977475d1242</Anchor>
    <Abstract>Translates this matrix along the Y-axis by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate:byZ:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a57a3fc704259e966e5019e8b753767a2</Anchor>
    <Abstract>Translates this matrix along the Z-axis by the specified amount.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transpose:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a0cd39eb8c54e3dcd5b211ad41327a7b1</Anchor>
    <Abstract>Transposes the specified matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>a25383bc486461a0b2ad8acffe5f76448</Anchor>
    <Abstract>Returns a pointer to the underlying array of 16 GLfloats stored in column-major order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isIdentity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3GLMatrix</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_g_l_matrix.html</Path>
    <Anchor>ae16ba83352ed7b4ff4d6bfed48fd6b30</Anchor>
    <Abstract>Indicates whether this matrix is an identity matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Identifiable</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Abstract>This is a base subclass for any class that uses tags or names to identify individual instances...</Abstract>
    <DeclaredIn>CC3Identifiable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>ac177c497bf19de1f8208eb375edfef37</Anchor>
    <Abstract>Returns a newly allocated (retained) copy of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyUserDataFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>aaba6f6333ec6b859b17394fa95a549f1</Anchor>
    <Abstract>Invoked automatically when this instance has been created as a copy of the specified instance...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyWithName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a2fc25bb52f8f0815c0985e02aeac0e35</Anchor>
    <Abstract>Returns a newly allocated (retained) copy of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyWithName:asClass:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>aff3b74491add447b79ad63f7f9912b9e</Anchor>
    <Abstract>Returns a newly allocated (retained) copy of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyWithZone:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>aa5698b73dad043a09dd57c19290c1dcf</Anchor>
    <Abstract>Returns a newly allocated (retained) copy of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyWithZone:withName:asClass:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a6788277bbfff67ed111f2392db9f685a</Anchor>
    <Abstract>Returns a newly allocated (retained) copy of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>af84be89f3c9397c4247d406009137b5d</Anchor>
    <Abstract>Returns a string containing a more complete description of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a51802b824fd430e3281e22574f1266ed</Anchor>
    <Abstract>Initializes this unnamed instance with an automatically generated unique tag value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initAtIndex:fromPODResource:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a3b7bc9cbacb8a25b1ee680b2401cd0eb</Anchor>
    <Abstract>Initializes this instance from the data of this type at the specified index within the specified POD ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a096bc5294d2cc78dd979782504456569</Anchor>
    <Abstract>Invoked automatically from the init* family of methods to initialize the userData reference...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>afc220d9cffa20a01ecebefa44a44f354</Anchor>
    <Abstract>Initializes this instance with the specified name and an automatically generated unique tag value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>af7d154e055437d2e0ba9e707a69e3ec0</Anchor>
    <Abstract>Initializes this unnamed instance with the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a36e0ab825fd6f3e9a703d28039c98886</Anchor>
    <Abstract>Initializes this instance with the specified tag and name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextTag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a30472ca8359ea9480479ed8301a93eb8</Anchor>
    <Abstract>Returns a unique tag value to identify instances.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseUserData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a3ff66522d7caeeef0e445e1ec4e7413a</Anchor>
    <Abstract>Invoked automatically from the dealloc method to release or dispose of the data referenced in the use...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>instanceCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a13ae00555f231e938fcfed31769b8fef</Anchor>
    <Abstract>Indicates the total number of active instances, over all subclasses, that have been allocated and ini...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTagAllocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a0eb2e642c739adb8e0a70f98cf1bfcde</Anchor>
    <Abstract>Resets the allocation of new tags to resume at one again.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a5843985f6bd1d8fa100d80ce142af35b</Anchor>
    <Abstract>An arbitrary name for this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>podIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a922b7ebb2139dc6a88f5eb80d2985fff</Anchor>
    <Abstract>The index of this object in the POD resource data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldIncludeInDeepCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a65202edca1a66ef060b5b0411cb547c3</Anchor>
    <Abstract>Returns whether this instance should be included in a deep copy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a4fe2d1079602a9b93e1803b5d8aefdcc</Anchor>
    <Abstract>An arbitrary identification.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>userData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Identifiable</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_identifiable.html</Path>
    <Anchor>a2ca06e1464a6f6c273b30b75fceb4596</Anchor>
    <Abstract>Application-specific data associated with this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Layer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Layer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_layer.html</Path>
    <Abstract>CC3Layer is a cocos2d CCLayer that supports full 3D rendering in combination with normal cocos2d 2D r...</Abstract>
    <DeclaredIn>CC3Layer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawBackdrop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Layer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_layer.html</Path>
    <Anchor>a36c78beb1ba8a4c1de85ada54129e1af</Anchor>
    <Abstract>If a background color has been specified, and this layer is not overlaying the device camera...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeControls</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Layer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_layer.html</Path>
    <Anchor>a0dd20963bf8a354addd7005eda1671da</Anchor>
    <Abstract>Template method that is invoked automatically during initialization, regardless of the actual init* m...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Layer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_layer.html</Path>
    <Anchor>a705c7256f21ae0e55e36d64a7800110f</Anchor>
    <Abstract>This method is invoked periodically when the components in the CC3World are to be updated...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Layer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_layer.html</Path>
    <Anchor>a202b859f691d1671992aae0962e7978b</Anchor>
    <Abstract>Updates the viewport of the contained CC3World instance with the dimensions of this layer and the dev...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cc3World</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Layer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_layer.html</Path>
    <Anchor>a2a30ee4b31902a35c1b9e93a15c750c5</Anchor>
    <Abstract>The CC3World instance that maintains the 3D models and draws the 3D content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpaque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Layer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_layer.html</Path>
    <Anchor>a05946ca7d7dce3fe93e1a0f49e2e81df</Anchor>
    <Abstract>Returns whether this layer is opaque.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAlwaysUpdateViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Layer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_layer.html</Path>
    <Anchor>a68ea5dd275d896a803782f109b435d5b</Anchor>
    <Abstract>Indicates whether this layer should update the 3D viewport on each rendering frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Light</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Abstract>CC3Light represents the light in the 3D world.</Abstract>
    <DeclaredIn>CC3Light.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>ab069a390c360507ce9cfd27fa49718f9</Anchor>
    <Abstract>Initializes this unnamed instance with an automatically generated unique tag value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>ada7288abd6efc318e0528c9157511ac6</Anchor>
    <Abstract>Initializes this unnamed instance with the specified GL light index, and an automatically generated u...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>afac0b3f6632e9b9e69cf630dc941af95</Anchor>
    <Abstract>Initializes this instance with the specified name and an automatically generated unique tag value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithName:withLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a6f8b9cfff7882e4836f5635b9dc16beb</Anchor>
    <Abstract>Initializes this instance with the specified GL light index, the specified name, and an automatically...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a8a65ad33a559b04022eadfbcdbdedab4</Anchor>
    <Abstract>Initializes this unnamed instance with the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:withLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>ab80779ad3bec786accefff473b8d2c0c</Anchor>
    <Abstract>Initializes this unnamed instance with the specified GL light index, and the specified tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a7b5d9dfa7789b97850849d7c2da72e87</Anchor>
    <Abstract>Initializes this instance with the specified tag and name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:withName:withLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a67da7e232d34702ca05926e1be2c5b8f</Anchor>
    <Abstract>Initializes this instance with the specified GL light index, the specified name, and the specified ta...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>turnOn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a1a5a49a3b8e7bdbcf5351bc6a4bdb163</Anchor>
    <Abstract>If this light is visible, turns it on by enabling this light in the GL engine, and then applies the p...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableReservedLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a487308366e6e0172e495de166c8af2bc</Anchor>
    <Abstract>Disables the lights that were reserved for the 2D world by setLightPoolStartIndex:.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a98cdec67b32082f8dec9361dcf22a027</Anchor>
    <Abstract>Returns the number of lights that have already been instantiated (and not yet deallocated).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightPoolStartIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a3f4425e56404bdd70ad8dd98ab5cef51</Anchor>
    <Abstract>Indicates the smallest index number to assign to a 3D light.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightWithLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a94bb593cf1c716530f5d0917f6db9326</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with the specified GL light index...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightWithName:withLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a28373a4deb32277d83f65e5d85881269</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified GL light index, the specified name, and an automatically generated unique tag value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightWithTag:withLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a90d8be18c252eadaa5c257eedb3c176b</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with the specified GL light index...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightWithTag:withName:withLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>ab9b36776d9472808225d22ef4a248ca9</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified GL light index, the specified name, and the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLightPoolStartIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>aa6856204ab7ff5452b28e136397b3dd5</Anchor>
    <Abstract>Sets the smallest index number to assign to a 3D light.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ambientColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a3ab57af7eba4f8816712b6c87365051a</Anchor>
    <Abstract>The ambient color of this light.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attenuationCoefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>aa41373002adea2deaaef9ec26356da9b</Anchor>
    <Abstract>The coefficients of the attenuation function that reduces the intensity of the light based on the dis...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diffuseColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a91b08c3c6f18db7e0dd1ce22e8a2f57f</Anchor>
    <Abstract>The diffuse color of this light.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>homogeneousLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a3f6432a43014d3bbe74c6ec12583cd4b</Anchor>
    <Abstract>The location of this light in the 4D homogeneous coordinate space.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDirectionalOnly</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a7351f737b952226a53bd4f8387797626</Anchor>
    <Abstract>Indicates whether this light is directional and without a specified location.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a25e2f3fbc846a1843938c679ea9204fd</Anchor>
    <Abstract>The index of this light to identify it to the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCopyLightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a92c0f7217dc5c18c6d34ab26b5282069</Anchor>
    <Abstract>When a copy is made of this node, indicates whether this node should copy the value of the lightIndex...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specularColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a4123c1e20b025f5989db09400394f951</Anchor>
    <Abstract>The specular color of this light.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spotCutoffAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>acc25f06d3a2921a586f81a94050e5178</Anchor>
    <Abstract>Indicates the angle, in degrees, of dispersion of the light from the direction of the light...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spotExponent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light.html</Path>
    <Anchor>a937b1a8eb6ea83020c8c4b7ca2980cff</Anchor>
    <Abstract>Indicates the intensity distribution of the light.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3LightTracker</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3LightTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_light_tracker.html</Path>
    <Abstract>CC3LightTracker is a specialized CC3TargettingNode that tracks a target and automatically updates its...</Abstract>
    <DeclaredIn>CC3TargettingNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3LineNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3LineNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_line_node.html</Path>
    <Abstract>CC3LineNode is a type of CC3MeshNode that is specialized to display lines.</Abstract>
    <DeclaredIn>CC3MeshNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lineWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3LineNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_line_node.html</Path>
    <Anchor>afc1c4b76ad004cd8f5d4c26d27a62ac0</Anchor>
    <Abstract>The width of the lines that will be drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performanceHint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3LineNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_line_node.html</Path>
    <Anchor>a42fba1f725de78b5378f9c04512c7ce9</Anchor>
    <Abstract>Indicates how the GL engine should trade off between rendering quality and speed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldSmoothLines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3LineNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_line_node.html</Path>
    <Anchor>aaf68bcadea23c69538a5c1449f40c7b0</Anchor>
    <Abstract>Indicates whether lines should be smoothed (antialiased).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3LocalContentNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Abstract>CC3LocalContentNode is an abstract class that forms the basis for nodes that have local content to dr...</Abstract>
    <DeclaredIn>CC3Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDrawingOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Anchor>ac8968cbf06cb1242f9dbbbaae139477f</Anchor>
    <Abstract>Checks that this node is in the correct drawing order relative to other nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localContentWireframeBoxColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Anchor>ab7a59b652a27e55b2c6374886841c50a</Anchor>
    <Abstract>Returns the color that local content wireframe bounding boxes will be drawn in when created using the...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocalContentWireframeBoxColor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Anchor>af031429a9b5f69a229714ee263b36c0a</Anchor>
    <Abstract>Sets the color that local content wireframes will be drawn in when created using the shouldDrawWirefr...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Anchor>a274eeaa4a5c9481c774dfa8450b04ba0</Anchor>
    <Abstract>Indicates the order in which this node should be drawn when compared to other nodes, when drawing order should be determined by distance from the camera (Z-order).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalLocalContentBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Anchor>aa59cd0e14547682c70b0355427b9f1d3</Anchor>
    <Abstract>Returns the bounding box of this node&amp;#39;s mesh, in the global coordinate system, by transforming the ei...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localContentBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Anchor>a8258e0ddbd7f0ba311c643456e3e5b0a</Anchor>
    <Abstract>Returns the bounding box of this node&amp;#39;s local content, in this node&amp;#39;s local coordinate system...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>localContentWireframeBoxNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Anchor>ae129310b7ce32a61f1919315aa0897eb</Anchor>
    <Abstract>If the shouldDrawLocalContentWireframeBox is set to YES, returns the child node that draws the wirefr...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawLocalContentWireframeBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3LocalContentNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node.html</Path>
    <Anchor>a26a646afb0b19e54d0246fed71a863bb</Anchor>
    <Abstract>Indicates whether the node should display a wireframe box around the local content of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3LocalContentNodeAcceptor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3LocalContentNodeAcceptor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node_acceptor.html</Path>
    <Abstract>A type of CC3LocalContentNodeEvaluator that accepts all nodes with local content, and rejects all oth...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3LocalContentNodeEvaluator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3LocalContentNodeEvaluator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node_evaluator.html</Path>
    <Abstract>A type of CC3NodeEvaluator that specializes in evaluating only CC3Nodes with local content...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluateLocalContentNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3LocalContentNodeEvaluator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_local_content_node_evaluator.html</Path>
    <Anchor>ae5b7e42577f8bc7c0915040d129290a2</Anchor>
    <Abstract>Performs the evaluation defined by this class on the specified node, which must be a type of CC3Local...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Material</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Abstract>CC3Material manages information about a material that is used to cover one or more meshes...</Abstract>
    <DeclaredIn>CC3Material.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ae6ae5aa8d01f7ee4718764d825a8a45d</Anchor>
    <Abstract>In most situations, the material will use a single CC3Texture in the texture property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a2cf7b4f23c2d86fde33e4054a0676894</Anchor>
    <Abstract>Applies this material to the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureNamed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>aebd9670e3268299c4de24a5b7354d8ba</Anchor>
    <Abstract>Returns the texture with the specified name, that was added either via the texture property or via th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>aeef261147b2559fb4a282d8d71ff91fe</Anchor>
    <Abstract>Removes all textures from this material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>aca53fca1d8b7b40a937f6592ee668b3d</Anchor>
    <Abstract>Removes the specified texture from this material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTexture:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ace937216a1762002c5178e06173250de</Anchor>
    <Abstract>Sets the texture that will be processed by the texture unit with the specified index, which should be a number between zero, and the value of the textureCount property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureForTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>aa32362b80cdbb948368a31a43fea7b7b</Anchor>
    <Abstract>Returns the texture that will be processed by the texture unit with the specified index...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>acc08aa7c02cd4b0e6c2025f95cb3ccdb</Anchor>
    <Abstract>Unbinds the GL engine from any materials.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultBlendFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a3a5a7844f2c06f38f0ec4b2d685d110d</Anchor>
    <Abstract>Returns the default GL material source and destination blend function used for new instances...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>material</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ac7b3c9ac975cc5a4608c04b5890ecdec</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materialWithName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>acfbc5f5237b301ef0d6d2b61cd60e3b5</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified name and an automatically gener...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materialWithTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>aa362cc91fe53baf5d4b013d8a7f679ea</Anchor>
    <Abstract>Allocates and initializes an unnamed autoreleased instance with the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materialWithTag:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ab395e6105d3b9c98f0d79283272408fc</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified tag and name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetSwitching</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a35731ec0fe4765bc1caa303b546195c9</Anchor>
    <Abstract>Resets the tracking of the material switching functionality.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultBlendFunc:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a893183d57ebc88523759ae2d4d8efc69</Anchor>
    <Abstract>Sets the default GL material source and destination blend function used for new instances.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shiny</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a0dac6222240307b9265d8925e1a85ade</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shinyWhite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a5d4c41233629f3940333122d2888c0ef</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>acc08aa7c02cd4b0e6c2025f95cb3ccdb</Anchor>
    <Abstract>Unbinds the GL engine from any materials.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaTestFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a9f7f6b0c7fbd2704bfe55d6811c461d2</Anchor>
    <Abstract>Indicates the alpha test function that is used to determine if a pixel should be drawn, based on the value of its alpha component.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaTestReference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a76876ec68366bc046eb16dd3ae7eadfb</Anchor>
    <Abstract>Indicates the reference value used by the alpha test function to compare against the alpha value of e...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ambientColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ab7846ec0d2ae3410fe84acc424ac5ceb</Anchor>
    <Abstract>The color of this material under ambient lighting.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blendFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>afe43489aee0ba07a343b235db8235b0a</Anchor>
    <Abstract>Implementation of the CCBlendProtocol blendFunc property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a93431d16cadeed4a09e077e8f31b1d67</Anchor>
    <Abstract>Implementation of the CCRGBAProtocol color property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destinationBlend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ad0627fd29fa0f6382cfd0ca8df6398f9</Anchor>
    <Abstract>The blending function for the destination material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diffuseColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a919a8cef853de8f25572cc5552c2a15c</Anchor>
    <Abstract>The color of this material under ambient lighting.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emissionColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ad55970a3cf2c59d4eceb284b130554d1</Anchor>
    <Abstract>The emission color of this material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasBumpMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>afd63ee59a294524a191376db150a5c02</Anchor>
    <Abstract>Returns whether this material contains a texture that is configured as a bump-map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpaque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a4448709cd5fdec222a4a045e689727a5</Anchor>
    <Abstract>Indicates whether this material is opaque.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a0a38e6cb6cc7d9174be38db4ec37f90d</Anchor>
    <Abstract>The direction, in local tangent coordinates, of the light source that is to interact with any texture...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>opacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ad276a69a937c94607600c32c86ac80a6</Anchor>
    <Abstract>Implementation of the CCRGBAProtocol opacity property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shininess</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>aa09ebe1c19c1ca60388f16657ebff415</Anchor>
    <Abstract>The shininess of this material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawLowAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a46b21c61e69df46542568e3502a02b5f</Anchor>
    <Abstract>Indicates whether alpha testing should be used to determine if pixels with lower alpha values should ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseLighting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a0ef77d2693dce9fbcff5495bcfa1f482</Anchor>
    <Abstract>If this value is set to YES, current lighting conditions will be taken into consideration when drawin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sourceBlend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>ad02c0e1797b037dd6c8af8707fd44889</Anchor>
    <Abstract>The blending function for the source material (this material).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specularColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a150d153b442cd047327a63c840d19492</Anchor>
    <Abstract>The color of this material under ambient lighting.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a71569bea158450f0dbad1da10128c402</Anchor>
    <Abstract>When using a single texture for this material, this property holds that texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Material</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_material.html</Path>
    <Anchor>a1bbe2552c8c7eaa364926306a4228b00</Anchor>
    <Abstract>Returns the number of textures attached to this material, regardless of whether the textures were att...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Mesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Abstract>A CC3Mesh holds the 3D mesh for a CC3MeshNode.</Abstract>
    <DeclaredIn>CC3Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignWithInvertedTexturesIn:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>ad4f6651b2fbe0dcdc48dc5ddf281fbb7</Anchor>
    <Abstract>Aligns the texture coordinates of the mesh with the textures held in the specified material...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignWithTexturesIn:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a91e883a043d0c4e5fdf006d41c5b915b</Anchor>
    <Abstract>Aligns the texture coordinates of the mesh with the textures held in the specified material...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGLBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>add9407049ba2360bd1e4fb7d71528f72</Anchor>
    <Abstract>Convenience method to create GL buffers for all vertex arrays used by this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultBoundingVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a604e2a044074bc3edf3aac6fe10f1cb2</Anchor>
    <Abstract>Returns an allocated, initialized, autorelease instance of the bounding volume to be used by the CC3M...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteGLBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a229ebe05173b24083df7670142329dc0</Anchor>
    <Abstract>Convenience method to delete any GL buffers for all vertex arrays used by this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexColors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>abf52e2f315042f9d460fe498ce2e49ae</Anchor>
    <Abstract>Convenience method to cause the vertex color data to be skipped when createGLBuffers is invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>ad90ec5e09f1e234180493efa7cffeba9</Anchor>
    <Abstract>Convenience method to cause the vertex index data to be skipped when createGLBuffers is invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexLocations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>af13c4436396a1f7665419abaa6e36d2b</Anchor>
    <Abstract>Convenience method to cause the vertex location data to be skipped when createGLBuffers is invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>af143643024e51626d7964ab32e42640b</Anchor>
    <Abstract>Convenience method to cause the vertex normal data to be skipped when createGLBuffers is invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexTextureCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>acf2aac3eaa854c47447ffb2012b80343</Anchor>
    <Abstract>Convenience method to cause the vertex texture coordinate data for all texture units used by this mes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawFrom:forCount:withVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>ae88ac2a93a7d9d69744a3042062b85b0</Anchor>
    <Abstract>Draws a portion of the mesh data to the GL engine, starting at the vertex at the specified index...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a5e6349c01b70f4a2bad6b542407e2ee1</Anchor>
    <Abstract>Draws the mesh data to the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>faceCountFromVertexCount:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a2288666a187bfe6805bce345279d8e0f</Anchor>
    <Abstract>Returns the number of faces to be drawn from the specified number of vertices, based on the type of p...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>movePivotTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a8eb6e704ee1f81c79ddcee258855af42</Anchor>
    <Abstract>Changes the mesh data so that the pivot point of the mesh will be at the specified location...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>movePivotToCenterOfGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a8dcc0b0903b5cad6772dcd3e8258c194</Anchor>
    <Abstract>Changes the mesh data so that the pivot point of the mesh will be at the center of geometry of the me...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseRedundantData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a4d0254d8892c61cd600fa2a991b8773e</Anchor>
    <Abstract>Once the elements data has been buffered into a GL vertex buffer object (VBO) within the GL engine...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>repeatTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>aa256b77a007dc390ca8b4af81bf329ab</Anchor>
    <Abstract>Configures the mesh so that a texture applied to this mesh will be repeated the specified number of t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexColors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a4d4e4f796b40b81f5041c7db69692de5</Anchor>
    <Abstract>Convenience method to cause the vertex color data to be retained in application memory when releaseRe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>af9418b19b821c6127392eddeed7730d8</Anchor>
    <Abstract>Convenience method to cause the vertex index data to be retained in application memory when releaseRe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexLocations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a4aa5bd30d6c22ab7fb3d9b43627e9a95</Anchor>
    <Abstract>Convenience method to cause the vertex location data to be retained in application memory when releas...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a087f4bde149868930686af3bdac971f8</Anchor>
    <Abstract>Convenience method to cause the vertex normal data to be retained in application memory when releaseR...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexTextureCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>ab8e83fd5ac13c16e87948ef08bb09b8c</Anchor>
    <Abstract>Convenience method to cause the vertex texture coordinate data for all texture units used by this mes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a6d4b01c5368d3425072124f59b2ad7a6</Anchor>
    <Abstract>Sets the textureRectangle property from the texture coordinates that are mapping the specified textur...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexColor4B:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>ac8c445ca1a860ad8c872defc0df96ffd</Anchor>
    <Abstract>Sets the color element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexColor4F:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a54bf4707da6abc0129bef0038d6ca6ca</Anchor>
    <Abstract>Sets the color element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexIndex:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a610b4ba40f8148becf3e249e5512d0a8</Anchor>
    <Abstract>Sets the index element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexLocation:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a33d7cbde7a0d48ef30a83aa4c28355f5</Anchor>
    <Abstract>Sets the location element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexNormal:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>aaa9d605ae22451efe5bf33cebd40d562</Anchor>
    <Abstract>Sets the normal element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexTexCoord2F:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a8460525eb2dd82c3d0ed63112b1e7264</Anchor>
    <Abstract>Sets the texture coordinate element at the specified index in the vertex data, at the commonly used t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexTexCoord2F:at:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a1e3841c4ac9e493ebf97d16918825250</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexTexCoord2F:forTextureUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>aaf181aca33dda5d5cf37af240f805ebc</Anchor>
    <Abstract>Sets the texture coordinate element at the specified index in the vertex data, at the specified textu...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureRectangleForTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a50bcbd2a4349f0cac6c4f43b6368ccce</Anchor>
    <Abstract>Returns the textureRectangle property from the texture coordinates that are mapping the specified tex...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexColorsGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>af94e31962b7d39013aeb746d6d2c4160</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex color data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexIndicesGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>ab925a11366aa934f5cf797b666258998</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex index data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexLocationsGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a2ff690a5a325fef4f05e50c3f0958e82</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex location data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexNormalsGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a03c94d644d9c71eea23e24b559f9982c</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex normal data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexTextureCoordinatesGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>aedc3dee48200842097c95a0dbcb6812d</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex texture coord data from texture unit zero in this mesh...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexTextureCoordinatesGLBufferForTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a4f2b7a99b8db027d40207a7ce3f0532a</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex texture coord data from the specified texture unit in th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexColor4BAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a5404a9d6cac27ee7f1a501b214c308b9</Anchor>
    <Abstract>Returns the color element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexColor4FAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>aa5b51894550c4dd0b000826066981fb8</Anchor>
    <Abstract>Returns the color element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexCountFromFaceCount:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a3084ed5df5b17cf21abd18ecc5ee46ce</Anchor>
    <Abstract>Returns the number of vertices required to draw the specified number of faces, based on the type of p...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexIndexAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a8495a5045ec3d7a8dea2c69f28af5938</Anchor>
    <Abstract>Returns the index element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexLocationAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a15c2acf94ea8002c6c36180ddbf61396</Anchor>
    <Abstract>Returns the location element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexNormalAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a89dd062b65206fa670f181922ec8b6bc</Anchor>
    <Abstract>Returns the normal element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexTexCoord2FAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a4618534025813c65b2b9c1e3f2fa97a8</Anchor>
    <Abstract>Returns the texture coordinate element at the specified index from the vertex data at the commonly us...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexTexCoord2FAt:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a50ce35ec3aba59ecb31892a0d319c736</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexTexCoord2FForTextureUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>aaf688de3ea36c3d2bf3bc0fbb6233fc6</Anchor>
    <Abstract>Returns the texture coordinate element at the specified index from the vertex data at the specified t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>aba5a511998a9ba82ac2d0e886d01b6b8</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshWithName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a8bdc6046a3a3702348138f0ed58565f8</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified name and an automatically gener...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshWithTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a2f7917909ad2887d109ef4ba508a87d9</Anchor>
    <Abstract>Allocates and initializes an unnamed autoreleased instance with the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshWithTag:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>ab5202c876913aa8043e226ea32df8ec2</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified tag and name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetSwitching</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a41f97e217dfb0500c27a8279e448ea58</Anchor>
    <Abstract>Resets the tracking of the mesh switching functionality.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a894a773da6f0d4e72c80b1fc471b4ff2</Anchor>
    <Abstract>The axially-aligned-bounding-box (AABB) in the mesh local (untransformed) coordinate system...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasColors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a799ba572f5741b70f68575626e7c0d33</Anchor>
    <Abstract>Indicates whether this mesh contains data for vertex colors.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a7831fd442e211cd7eae17c7e59506bf8</Anchor>
    <Abstract>Indicates whether this mesh contains data for vertex normals.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>aec0451580686743d8bbf5baf0745cf7f</Anchor>
    <Abstract>Defines the rectangular area of the textures, for all texture units, that should be mapped to this me...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Mesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh.html</Path>
    <Anchor>a00ab53446893ad0baf4537a731881eb1</Anchor>
    <Abstract>Returns the number of vertices in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MeshModel</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MeshModel</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_model.html</Path>
    <Abstract>Deprecated CC3MeshModel renamed to CC3Mesh.</Abstract>
    <DeclaredIn>CC3Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MeshNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Abstract>A CC3Node that draws a 3D mesh.</Abstract>
    <DeclaredIn>CC3MeshNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignInvertedTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a38e50d04d8d52734b33246590fdded38</Anchor>
    <Abstract>Aligns the texture coordinates of the mesh with the textures held in the material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a943e5c901a964ec7a421f7f38b7046de</Anchor>
    <Abstract>Aligns the texture coordinates of the mesh with the textures held in the material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a8a15c4a11e9d1075a623105fe81b96f9</Anchor>
    <Abstract>Draws the local content of this mesh node by following these steps:</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>movePivotTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ae2233ea892001bf075a2affc7f73c174</Anchor>
    <Abstract>Changes the mesh data so that the pivot point of the mesh will be at the specified location...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>movePivotToCenterOfGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>aea4ca7e6c9b44d00590248713b9d1ca2</Anchor>
    <Abstract>Changes the mesh data so that the pivot point of the mesh will be at the center of geometry of the me...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsCenteredRectangleWithSize:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ae57f208fe2dc911287f9872f7862deec</Anchor>
    <Abstract>Populates this instance as a simple rectangular mesh of the specified size, centered at the origin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsCenteredRectangleWithSize:andTessellation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ad4f35b8a4c99fdf8089492b05ffe963e</Anchor>
    <Abstract>Populates this instance as a simple rectangular mesh of the specified size, centered at the origin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsCenteredRectangleWithSize:andTessellation:withTexture:invertTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a9a3a3efa2c63efb1398eb271d4b5f80d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsCenteredRectangleWithSize:withTexture:invertTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ae89822fc38fc4772a110bb1b8b35cfb7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsCenteredTexturedRectangleWithSize:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a1e87161b0e6fc10f35206ee6704c7343</Anchor>
    <Abstract>Populates this instance as a rectangular mesh of the specified size, centered at the origin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsCenteredTexturedRectangleWithSize:andTessellation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ad1bce9ea33dc76b7f06df1b97f4db15c</Anchor>
    <Abstract>Populates this instance as a rectangular mesh of the specified size, centered at the origin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsLineStripWith:vertices:andRetain:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a32ede9a6cbd5b1ee51fd2fe58e9b5934</Anchor>
    <Abstract>Populates this instance as a line strip with the specified number of vertex points.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsRectangleWithSize:andPivot:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a2372988a089bf02820974644e2acc98e</Anchor>
    <Abstract>Populates this instance as a simple rectangular mesh of the specified size, with the specified pivot ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsRectangleWithSize:andPivot:andTessellation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>aff9d8831e7ec49299b31910ab0b1dc19</Anchor>
    <Abstract>Populates this instance as a simple rectangular mesh of the specified size, with the specified pivot ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsRectangleWithSize:andPivot:andTessellation:withTexture:invertTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a978a5f54ea2eb24c8afa37976f867e01</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsRectangleWithSize:andPivot:withTexture:invertTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ac299281c24bf0531d0ab639a3048006a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsSolidBox:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a1ea6896b09a8a424b09452283b8b6702</Anchor>
    <Abstract>Populates this instance as a simple rectangular box mesh from the specified bounding box...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsTexturedBox:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>aa47ab37ab2c849a5f6e98d7ac1b2e078</Anchor>
    <Abstract>Populates this instance as a simple rectangular box mesh from the specified bounding box...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsTexturedBox:withCorner:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a2476d68c1449e1b8c27daa3ff343ebb7</Anchor>
    <Abstract>Populates this instance as a simple rectangular box mesh from the specified bounding box...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsTexturedRectangleWithSize:andPivot:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a66ea3d7d7c60f53b84ed804b1c07e4ec</Anchor>
    <Abstract>Populates this instance as a rectangular mesh of the specified size, with the specified pivot point a...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsTexturedRectangleWithSize:andPivot:andTessellation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a5e8eddffb318b7294082a8972d2c6dbc</Anchor>
    <Abstract>Populates this instance as a rectangular mesh of the specified size, with the specified pivot point a...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateAsWireBox:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a9872aced2bf86dcc192457d1fb1a56b5</Anchor>
    <Abstract>Populates this instance as a wire-frame box with the specified dimensions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>repeatTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a0bf58ada0895f6d057fc98e7bd0a5e7d</Anchor>
    <Abstract>Configures the mesh so that a texture applied to this mesh will be repeated the specified number of t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a4ae2877853694867b97ebf78b33126b5</Anchor>
    <Abstract>Sets the textureRectangle property from the texture coordinates that are mapping the specified textur...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexColor4B:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a6b79e7c92b6a77ec18dbdee5d007d610</Anchor>
    <Abstract>Sets the color element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexColor4F:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ad1d7f5a839a3b00f6a5e1859d6250408</Anchor>
    <Abstract>Sets the color element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexIndex:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a5ab34fb95e763b49392102572336e091</Anchor>
    <Abstract>Sets the index element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexLocation:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a8d9e80c3c224f8674fb9c62dd7cf7350</Anchor>
    <Abstract>Sets the location element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexNormal:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>afacf68a203820d1ee4fe372c91e1d242</Anchor>
    <Abstract>Sets the normal element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexTexCoord2F:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>aed8b5c07945af57a59f254e90fb4ebb7</Anchor>
    <Abstract>Sets the texture coordinate element at the specified index in the vertex data, at the commonly used t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexTexCoord2F:at:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a14d4c3ada0ad471dc04c0a2cd210693c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVertexTexCoord2F:forTextureUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a62118cf69cb4b1565710b72afbf4bea0</Anchor>
    <Abstract>Sets the texture coordinate element at the specified index in the vertex data, at the specified textu...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureRectangleForTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>abf62b261e4c4bcf4dddc439502c6deb1</Anchor>
    <Abstract>Returns the textureRectangle property from the texture coordinates that are mapping the specified tex...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexColorsGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a410d15616e85748ce08b77ea5da8decb</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex color data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexIndicesGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a8c64fe8a5ada06497266bcd8f0c59d6e</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex index data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexLocationsGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>aa22ed6c99ab406bb6db4ceb4761df6a4</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex location data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexNormalsGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a5d40646aecf0cfc154f301e51d30188c</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex normal data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexTextureCoordinatesGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ad44d62a32b1f5a178fb72dc557e18c53</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex texture coord data from texture unit zero in this mesh...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexTextureCoordinatesGLBufferForTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a42d1058314a48ed8219f10ffb21e1fbb</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex texture coord data from the specified texture unit in th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexColor4BAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a8cdc654b1b7b9c5d6bd7cc43f4b48854</Anchor>
    <Abstract>Returns the color element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexColor4FAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>adb59f427e74e4c91e491127b2c5334b0</Anchor>
    <Abstract>Returns the color element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexIndexAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a580a2158248a5502239a469cf5d4bd41</Anchor>
    <Abstract>Returns the index element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexLocationAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a5e938fe4af9e968d54b03bcf20180741</Anchor>
    <Abstract>Returns the location element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexNormalAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>abe085d7a7651f24a84b0351203225efc</Anchor>
    <Abstract>Returns the normal element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexTexCoord2FAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>acff9e22dd21e4a1fc10cc8fd1227bb7f</Anchor>
    <Abstract>Returns the texture coordinate element at the specified index from the vertex data at the commonly us...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexTexCoord2FAt:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a337da566060400aacd1015d1831a3a87</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexTexCoord2FForTextureUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ad0268f81b9c11ee435683f6b2e70da79</Anchor>
    <Abstract>Returns the texture coordinate element at the specified index from the vertex data at the specified t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depthFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ab4521a811bbadf0fc5077d70e2b696f4</Anchor>
    <Abstract>The depth function used by the GL engine when comparing the Z-distance of this node against previousl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalScalingMethod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a99927d686b53cd38f0adfff1dd694083</Anchor>
    <Abstract>Specifies the method to be used to scale vertex normals after they have been transformed during verte...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCullBackFaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a0a2dcf49d0997083a838a366d7a026d1</Anchor>
    <Abstract>Indicates whether the back faces should be culled on the meshes contained in descendants of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCullFrontFaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>aba9c33476284294c99a718a0259c4c9a</Anchor>
    <Abstract>Indicates whether the front faces should be culled on the meshes contained in descendants of this nod...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDisableDepthMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a36ab2366c2f8cb77f6898c7a6a65f682</Anchor>
    <Abstract>Indicates whether this instance will disable the GL depth mask while drawing the content of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDisableDepthTest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a8710a0a76335e1cffa53c0304214a036</Anchor>
    <Abstract>Indicates whether this instance will disable the GL depth test while drawing the content of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseClockwiseFrontFaceWinding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a4a416a1c347b2e7808aaae647a3d7ede</Anchor>
    <Abstract>Indicates whether the edge-widing algorithm used by the GL engine to determine which face of a triang...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseSmoothShading</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ae8856e39d188accad9ad49dbd40649f2</Anchor>
    <Abstract>Indicates whether the shading of the faces of the mesh of this node should be smoothly shaded...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ambientColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a9386e779eac298341f6516010931b514</Anchor>
    <Abstract>The ambient color of the material of this mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blendFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a0014822499c656bc65edffcc1ddeb032</Anchor>
    <Abstract>Implementation of the CCBlendProtocol blendFunc property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a06c3e0690e2999a93919ba2d28e29193</Anchor>
    <Abstract>Implementation of the CCRGBAProtocol color property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DEPRECATED_ATTRIBUTE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a4d20b4f99edba78e678636b6138497a2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diffuseColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a1c4476ee10e9dad251c00b0723ef7ba7</Anchor>
    <Abstract>The diffuse color of the material of this mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emissionColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a27945960af75a269569cb02f687e151b</Anchor>
    <Abstract>The emission color of the material of this mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalLightLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a09ac6d16d320cecc66c0917979a92b3e</Anchor>
    <Abstract>When this mesh node is textured with a DOT3 bump-map (normal map), this property indicates the locati...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpaque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ac754a405d9012e05421e24989865f7c4</Anchor>
    <Abstract>Indicates whether the material of this mesh node is opaque.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>material</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ad2c0fcf674357d22301cc5402cb4d21f</Anchor>
    <Abstract>The material covering this mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a0602b5efbec034a0385d306b549a183e</Anchor>
    <Abstract>The mesh that holds the vertex data for this mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>opacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>af790e70c1f94c040dea7e7229c28b851</Anchor>
    <Abstract>Implementation of the CCRGBAProtocol opacity property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>podMaterialIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a38e40a48403707d3934a935271ce8c98</Anchor>
    <Abstract>The index of the material in the POD file used by this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pureColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a0acd881192a53c06b30cab629a849832</Anchor>
    <Abstract>The pure, solid color used to paint the mesh if no material is established for this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawLowAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>ab3f2190eb12f133a7d2d35ba8173952d</Anchor>
    <Abstract>Indicates whether alpha testing should be used to determine if pixels with lower alpha values should ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseLighting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a32c89a1b1bdb7ec9ebb2bbaafd5a53d9</Anchor>
    <Abstract>If this value is set to YES, current lighting conditions will be taken into consideration when drawin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specularColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>add17365ad2a6a86b4a75b63b12b8bcfc</Anchor>
    <Abstract>The specular color of the material of this mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>abbfb00b5c05dee12ae7dec23c79f4829</Anchor>
    <Abstract>When the material covering this mesh contains a single texture, this property references that texture...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>abe70cbf2b2075f510361eaa7441f0f7e</Anchor>
    <Abstract>Defines the rectangular area of the textures, for all texture units, that should be mapped to the mes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node.html</Path>
    <Anchor>a7b583556730377b5e838e0dfcfb3d8ac</Anchor>
    <Abstract>Returns the number of vertices in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MeshNodeArraySequencer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MeshNodeArraySequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node_array_sequencer.html</Path>
    <Abstract>An CC3MeshNodeArraySequencer is a type of CC3NodeArraySequencer that only accepts mesh nodes...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldInsertMeshNode:between:and:withVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MeshNodeArraySequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node_array_sequencer.html</Path>
    <Anchor>ab3d9b8968686fa408c87c43d02ebb42a</Anchor>
    <Abstract>Attempts to insert the specified node between two specified nodes that already exist in the array...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MeshNodeArraySequencerGroupMeshes</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MeshNodeArraySequencerGroupMeshes</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node_array_sequencer_group_meshes.html</Path>
    <Abstract>An CC3MeshNodeArraySequencerGroupTextures is a type of CC3MeshNodeArraySequencer that groups together...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MeshNodeArraySequencerGroupTextures</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MeshNodeArraySequencerGroupTextures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mesh_node_array_sequencer_group_textures.html</Path>
    <Abstract>An CC3MeshNodeArraySequencerGroupTextures is a type of CC3MeshNodeArraySequencer that groups together...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ModelSampleFactory</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ModelSampleFactory</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_model_sample_factory.html</Path>
    <Abstract>CC3ModelSampleFactory is a convenience utility for creating sample 3D models for experimentation.</Abstract>
    <DeclaredIn>CC3ModelSampleFactory.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeLogoTexturedTeapotNamed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ModelSampleFactory</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_model_sample_factory.html</Path>
    <Anchor>ae05c094101ae65ca4b0069aef8675f74</Anchor>
    <Abstract>Returns an allocated, initialized, autoreleased instance of a teapot in a particular color...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeMultiColoredTeapotNamed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ModelSampleFactory</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_model_sample_factory.html</Path>
    <Anchor>af4c3ae5abeb4af0bd699a63c112c57b1</Anchor>
    <Abstract>Returns an allocated, initialized, autoreleased instance of a teapot painted with a funky color gradi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>makeUniColoredTeapotNamed:withColor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ModelSampleFactory</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_model_sample_factory.html</Path>
    <Anchor>a0130844ae31783fc5cf395a23ab0012e</Anchor>
    <Abstract>Returns an allocated, initialized, autoreleased instance of a teapot in a particular color...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ModelSampleFactory</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_model_sample_factory.html</Path>
    <Anchor>a1a6982cfcc21104e37e5d49d160584cb</Anchor>
    <Abstract>Returns the singleton instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multicoloredTeapotMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ModelSampleFactory</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_model_sample_factory.html</Path>
    <Anchor>aff71d92ceedbe00aea182b5d483e9916</Anchor>
    <Abstract>An instance of a teapot mesh that includes a vertex color array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texturedTeapotMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ModelSampleFactory</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_model_sample_factory.html</Path>
    <Anchor>a0d70397c567cf32f0cafdd8fd8329a88</Anchor>
    <Abstract>An instance of a teapot mesh that includes a texture coordinate map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unicoloredTeapotMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ModelSampleFactory</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_model_sample_factory.html</Path>
    <Anchor>aa4db1147560525a973b98c3449d76b1c</Anchor>
    <Abstract>An instance of a teapot mesh that will be covered in a single color.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MortalPointParticle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MortalPointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle.html</Path>
    <Abstract>CC3MortalPointParticle is a type of CC3PointParticle that has a finite life.</Abstract>
    <DeclaredIn>CC3PointParticles.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateLife:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MortalPointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle.html</Path>
    <Anchor>a32833b52e0b2abae9bbddc5dd895b5e5</Anchor>
    <Abstract>Invoked automatically from the udpate: method, while the particle is alive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lifeSpan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MortalPointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle.html</Path>
    <Anchor>acde7dfc36b7121da034243c47bb36231</Anchor>
    <Abstract>Indicates the overall life span of the particle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>timeToLive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MortalPointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle.html</Path>
    <Anchor>afde312595c7ab78d7e63e4ee4a6a73f5</Anchor>
    <Abstract>Indicates the remaining time the particle has to live.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MortalPointParticleEmitter</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MortalPointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle_emitter.html</Path>
    <Abstract>CC3MortalPointParticleEmitter emits particles of type CC3MortalPointParticle.</Abstract>
    <DeclaredIn>CC3PointParticles.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeMortalParticle:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MortalPointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle_emitter.html</Path>
    <Anchor>a0b3236fda9ee134192a6c210aaa325af</Anchor>
    <Abstract>Template method that initializes the particle after its lifeSpan property has been set...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeParticle:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MortalPointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle_emitter.html</Path>
    <Anchor>a8f4bc283444ff694148ffeed41beec39</Anchor>
    <Abstract>Template method that initializes the particle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxParticleLifeSpan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MortalPointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle_emitter.html</Path>
    <Anchor>ad04281bb43b5f9fa73eb39c8eae9f891</Anchor>
    <Abstract>Indicates the upper limit of the range of possible particle life spans.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minParticleLifeSpan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3MortalPointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_mortal_point_particle_emitter.html</Path>
    <Anchor>a1e9b2c75f9864c9d859a65534640d01c</Anchor>
    <Abstract>Indicates the lower limit of the range of possible particle life spans.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MoveBy</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MoveBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_move_by.html</Path>
    <Abstract>CC3MoveBy is a CCActionInterval that moves a target CC3Node by a specific translation amount...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:moveBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MoveBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_move_by.html</Path>
    <Anchor>a0187ad0cd27c27daec74e34576d5bdc6</Anchor>
    <Abstract>Initializes this instance to move the target node by the specified translation amount, within the specified time duration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:moveBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3MoveBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_move_by.html</Path>
    <Anchor>ad91503ce6797af28a95d7d902ec37385</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to move the target node by the specified translati...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3MoveTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3MoveTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_move_to.html</Path>
    <Abstract>CC3MoveTo is a CCActionInterval that moves a target CC3Node to a specific location.</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:moveTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3MoveTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_move_to.html</Path>
    <Anchor>a74fb09ea495e247abc52a0f7b8b8b7c1</Anchor>
    <Abstract>Initializes this instance to move the target node to the specified location, within the specified tim...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:moveTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3MoveTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_move_to.html</Path>
    <Anchor>ad33e89ef0c2b930eb69ad586456bdfda</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to move the target node to the specified location...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Node</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Abstract>CC3Node and its subclasses form the basis of all 3D artifacts in the 3D world, including visible mesh...</Abstract>
    <DeclaredIn>CC3Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAndLocalizeChild:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a14386e095b6fa995faf1544dd09c8b1d</Anchor>
    <Abstract>Adds the specified node as a direct child node to this node, and localizes the child node&amp;#39;s location...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAxesDirectionMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae2e9f558c788f29f9107799cc6c1dde8</Anchor>
    <Abstract>Adds three visble direction marker lines, indicating the direction of the X, Y &amp;amp; Z axes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ac4d0746d13937340c19e38b1c04c3476</Anchor>
    <Abstract>Adds the specified node as a direct child node to this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDirectionMarker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aa930b2bc24563bfd1f635f8d833ba618</Anchor>
    <Abstract>Adds a visble line, drawn in the color indicated by the directionMarkerColor class-side property...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDirectionMarkerColored:inDirection:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a5a5b607ec466a3fa89e5943c6f242cb9</Anchor>
    <Abstract>Adds a visble line, drawn in the specified color, from the pivot location of this node (the origin in...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignInvertedTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a5b69b89f01d7c98c0303f1e03d976558</Anchor>
    <Abstract>Aligns the texture coordinates held by a mesh in any descendant node with the textures held in the ma...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a6ba26fe792bf02227f68e7e22d3a56cb</Anchor>
    <Abstract>Aligns the texture coordinates held by a mesh in any descendant node with the textures held in the ma...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendStructureDescriptionTo:withIndent:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a5e0c8eb0c20c5eee0c4cc4384846ce08</Anchor>
    <Abstract>Appends the description of this node to the specified mutable string, on a new line and indented the ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asCameraTracker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a012a06e674832b208b83d0b2c14235b7</Anchor>
    <Abstract>Wraps this node in an instance of CC3TargettingNode, and returns the autoreleased CC3TargettingNode i...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asLightTracker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ab568988d7fd88958b233974a540ec3a7</Anchor>
    <Abstract>Wraps this node in an instance of CC3LightTracker, and returns the autoreleased CC3LightTracker insta...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asTargettingNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a194e5a2dae03a9d9536273f34b141c47</Anchor>
    <Abstract>Wraps this node in an instance of CC3TargettingNode, and returns the autoreleased CC3TargettingNode i...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asTracker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a0141caa285eb8aef6de547765bceacc7</Anchor>
    <Abstract>Wraps this node in an instance of CC3TargettingNode, and returns the autoreleased CC3TargettingNode i...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindRestPose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>acaf3b104117af9ee7cfc8ed440bc5bbd</Anchor>
    <Abstract>Binds the rest pose of any skeletons contained within the descendants of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTransformMatrixWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>af97c6f748a3d85fd23a8a4c62e9decd8</Anchor>
    <Abstract>Template method that recalculates the transform matrix of this node from the location, rotation and scale transformation properties, using the specified visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkDrawingOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a65611a362386a198f5037c953c5a8f7e</Anchor>
    <Abstract>Checks that the child nodes of this node are in the correct drawing order relative to other nodes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cleanup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a112737ec0e32b70af8504b54dda5fe90</Anchor>
    <Abstract>Stops all running CCActions for this node and all descendant nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a7bda04af22d4853e65cbb1b2a7be0097</Anchor>
    <Abstract>Returns a newly allocated (retained) copy of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyWithName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aec0fbbf1cbbbf174ec68f2322856db97</Anchor>
    <Abstract>Returns a newly allocated (retained) copy of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGLBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aa1be5eb9f0e3e3f2513b5050e4d585f8</Anchor>
    <Abstract>Creates OpenGL ES buffers to be used by the GL engine hardware.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteGLBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a0789463c8d3f49e650adbb3212353f2b</Anchor>
    <Abstract>Deletes any OpenGL buffers that were created by any child nodes via a prior invocation of createGLBuf...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableAllAnimation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a82c485272397d436522a17cccaa8fdb3</Anchor>
    <Abstract>Disables animation of this node, and all descendant nodes, from animation data held in the animation ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableAnimation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ad73159b10aa52fe8089eb982bdbf5250</Anchor>
    <Abstract>Disables animation of this node from animation data held in the animation property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesIntersectFrustum:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a313faba92d4638b21ad6d02ba7ca6e95</Anchor>
    <Abstract>Returns whether the local content of this node intersects the given frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexColors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a4073440a0b8f9c18533cbc5121649657</Anchor>
    <Abstract>Convenience method to cause the vertex color data of this node and all descendant nodes to be skipped...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a17688b23c1dea97ed7b7419bf4d3b789</Anchor>
    <Abstract>Convenience method to cause the vertex index data of this node and all descendant nodes to be skipped...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexLocations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a1c776539f12809fbf268332920a7f21d</Anchor>
    <Abstract>Convenience method to cause the vertex location data of this node and all descendant nodes to be skip...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>af3a1d834d261b862e7af1f7426c071d5</Anchor>
    <Abstract>Convenience method to cause the vertex normal data of this node and all descendant nodes to be skippe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexTextureCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a388e8ab71dceb5b771695ce8785ac411</Anchor>
    <Abstract>Convenience method to cause the vertex texture coordinate data of this node and all descendant nodes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a883c0a80269bd598483d19480b8276ec</Anchor>
    <Abstract>Draws the content of this node to the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableAllAnimation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ad3307a8e1d887ce258b8bd370d8799c5</Anchor>
    <Abstract>Enables animation of this node, and all descendant nodes, from animation data held in the animation p...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableAnimation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a3e99eb2ee98ebcb169f77a76aac19a08</Anchor>
    <Abstract>Enables animation of this node from animation data held in the animation property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>establishAnimationFrameAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a4adf77b1b7e0ac1f8fcb45213714405d</Anchor>
    <Abstract>Updates the location, rotation and scale of this node based on the animation frame located at the spe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flatten</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aae71487c59c9183c237e11ce5910189e</Anchor>
    <Abstract>Returns an autoreleased array containing this node and all its descendants.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flattenInto:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aebd507bc13477ca1919d7ce762727600</Anchor>
    <Abstract>Adds this node to the specified array, and then invokes this method on each child node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getActionByTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a3b7859bf10890a905ba5f1a1e3a8e8ba</Anchor>
    <Abstract>Gets an action from the running action list given its tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeNamed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a42cd132329b6a2a98cf1456f3fe58275</Anchor>
    <Abstract>Retrieves the first node found with the specified name, anywhere in the structural hierarchy of desce...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNodeTagged:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a8f4927d3aca147fe0993ae4c29f6d9c1</Anchor>
    <Abstract>Retrieves the first node found with the specified tag, anywhere in the structural hierarchy of descen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDescendantOf:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>afde494ed8885dc8873dfd104e1622394</Anchor>
    <Abstract>Returns whether this node is a structural descendant (child, grandchild, etc) of the specified node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linkToPODNodes:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a34fa1a364640216ee61ab9d25471b147</Anchor>
    <Abstract>Create links to the nodes in the specified array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markTransformDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>abe610fe825b7adc7c427df840a521712</Anchor>
    <Abstract>Indicates that the transformation matrix is dirty and needs to be recalculated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodePODStructAtIndex:fromPODResource:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aadece09770edf39fcf3624e417ba92ed</Anchor>
    <Abstract>Returns the underlying SPODNode data structure from the specified resource, for the SPODNode at the s...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfRunningActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aea16e1b4f5d61972ae0997ae85d88835</Anchor>
    <Abstract>Returns the numbers of actions that are running plus the ones that are scheduled to run (actions in a...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reattachBonesFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aefaf0265e8b2f99e9ab38cef8694805c</Anchor>
    <Abstract>After copying a skin mesh node, the newly created copy will still be influenced by the original skele...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rebuildBoundingVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aed659e8d9413127d5d8e9c82828888fc</Anchor>
    <Abstract>If the shouldUseFixedBoundingVolume property is set to NO, this method forces the bounding volume to ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseRedundantData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a88b275ed5a68b2d8a78712ff41d6acbc</Anchor>
    <Abstract>Once the elements data has been buffered into a GL vertex buffer object (VBO) within the GL engine...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ab638f5dbea673bc7b88dc311bf7ae470</Anchor>
    <Abstract>Convenience method that removes this node from its structural hierarchy by simply invoking removeChil...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a0532b78d1036a404f8dd6d87b97d4e87</Anchor>
    <Abstract>Removes all child nodes of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllDirectionMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>abae4e44bd04d192def8a432fe0bb397e</Anchor>
    <Abstract>Removes all the direction marker child nodes that were previously added using the addDirectionMarkerC...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeChild:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aba8f89a7edb29eb961336837f4cf3dd5</Anchor>
    <Abstract>Removes the specified node as a direct child node to this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexColors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aae6580702191d386d7495c6801a016ce</Anchor>
    <Abstract>Convenience method to cause the vertex color data of this node and all descendant nodes to be retaine...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>af476409b656940fe8fd6e348b5b8b2be</Anchor>
    <Abstract>Convenience method to cause the vertex index data of this node and all descendant nodes to be retaine...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexLocations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a99cdb8a721320e3b4aa237389eeb117a</Anchor>
    <Abstract>Convenience method to cause the vertex location data of this node and all descendant nodes to be reta...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a41dc7d2c118673a0690be00d450094ab</Anchor>
    <Abstract>Convenience method to cause the vertex normal data of this node and all descendant nodes to be retain...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexTextureCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a3f757942e44ce601a9d72eedca5a1f2a</Anchor>
    <Abstract>Convenience method to cause the vertex texture coordinate data of this node and all descendant nodes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae31dc98fcd8cf5cfe08414ffd1d221e6</Anchor>
    <Abstract>Rotates this node from its current rotational state by the specified Euler angles in degrees...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateByAngle:aroundAxis:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a9d49f8a0bc739861bc44ca4ad1e9ffdc</Anchor>
    <Abstract>Rotates this node from its current rotational state by rotating around the specified axis by the spec...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateByQuaternion:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aa66db6ffa7347b7fbe8afa73c4e51f91</Anchor>
    <Abstract>Rotates this node from its current rotational state by the specified quaternion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runAction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a88bc1389a0a31d1684f197ed50e24677</Anchor>
    <Abstract>Executes an action, and returns the action that is executed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopAction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a5491e5b27a1c2c241cbc0389a1c25ed8</Anchor>
    <Abstract>Removes an action from the running action list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopActionByTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a77d78c07263fb63bac5870f613120ab2</Anchor>
    <Abstract>Removes an action from the running action list given its tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stopAllActions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a6b01f39758bd6f3f8e906b7a2fb0e6b3</Anchor>
    <Abstract>Removes all actions from the running action list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchDisableAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ab82ef9ad2019facf5e9abce84ab60407</Anchor>
    <Abstract>Sets the isTouchEnabled property to NO on this node and all descendant nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchEnableAll</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aa67c8b5f44c53322c4eebc9f5254cf61</Anchor>
    <Abstract>Sets the isTouchEnabled property to YES on this node and all descendant nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformAndDrawWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a422d97fc205cb37b3386424a19d7fa83</Anchor>
    <Abstract>Template method that applies this node&amp;#39;s transform matrix to the GL matrix stack and draws this node ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformVisitorClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a731c3aeca363031bbabe0d5a871d94cd</Anchor>
    <Abstract>Returns the class of visitor that will automatically be instantiated when visiting this node to trans...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translateBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ac184ae5d67268b69539f89d90ac04676</Anchor>
    <Abstract>Translates the location of this node by the specified vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateAfterTransform:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a3c74947cca4fdd39d89ea8cdf6e48dca</Anchor>
    <Abstract>This template method is invoked periodically whenever the 3D nodes are to be updated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateBeforeTransform:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ab33607fc5db4c079ebfb42d9da5acbea</Anchor>
    <Abstract>This template method is invoked periodically whenever the 3D nodes are to be updated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTransformMatrices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aad700ea837bfc1a3116d65b4d706dd1b</Anchor>
    <Abstract>Applies the transform properties (location, rotation, scale) to the transformMatrix of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateTransformMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aca3ae47f66bacb1c171d37a5ee4458db</Anchor>
    <Abstract>Applies the transform properties (location, rotation, scale) to the transformMatrix of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae728eca9485726ddd19641aa6750fc07</Anchor>
    <Abstract>Template method that is invoked automatically when this node is removed from its parent node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultScaleTolerance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ada3f710a973e5f1dbe55fb1f36cd830d</Anchor>
    <Abstract>The default value used to set the initial value of the scaleTolerance property of new CC3Node instanc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>descriptorFontSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aca18dcafe9eb909c1828835372e5dc38</Anchor>
    <Abstract>Returns the font size that will be used when drawing the descriptor text when the shouldDrawDescripto...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>directionMarkerColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ad9766013ea54fd0d093eb6c5eb622fb5</Anchor>
    <Abstract>Returns the color that direction marker lines will be drawn in when created using the addDirectionMar...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ad6d70878798bce4171f1d4350c44d8a5</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeAtIndex:fromPODResource:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a41a17bdf54960dc689a3b70977f86219</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance from the data of this type at the specified index ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aee98350cf8efb119effb2bb42537b420</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified name and an automatically gener...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a13a146da2a8401c683cc5cdd3524a577</Anchor>
    <Abstract>Allocates and initializes an unnamed autoreleased instance with the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithTag:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae7eec38a17f61714d1924669e556b530</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified tag and name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDefaultScaleTolerance:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a1b88fcdbe55ee1f3225cea1857841a17</Anchor>
    <Abstract>Sets the default value used to set the initial value of the property of new CC3Node instances...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDescriptorFontSize:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a9d4305b124b27d89d50b859f9ebff784</Anchor>
    <Abstract>Sets the font size that will be used when drawing the descriptor text when the shouldDrawDescriptor p...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDirectionMarkerColor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a4ba164580d0895194fbf3a5b859ecb60</Anchor>
    <Abstract>Sets the color that direction marker lines will be drawn in when created using the addDirectionMarker...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWireframeBoxColor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae69fcaf11981b068bcdc8963639c7317</Anchor>
    <Abstract>Sets the color that wireframes will be drawn in when created using the shouldDrawWireframeBox propert...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wireframeBoxColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a95bebe8af43ea7f80e5a6d8c1a333c09</Anchor>
    <Abstract>Returns the color that wireframe bounding boxes will be drawn in when created using the shouldDrawWir...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activeCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a6c93e6c1c60cf0757df9bd33cdc09fbb</Anchor>
    <Abstract>If this node has been added to the 3D world, either directly, or as part of a node assembly...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ambientColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a87fc1dcd7533a6d9f29564116ab7d3fe</Anchor>
    <Abstract>The ambient color of the materials of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a1bf395d66179ab8f968d642dd4998eef</Anchor>
    <Abstract>The animation content of this node, which manages animating the node under the direction of a CC3Anim...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blendFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>af98fb62a333ea1cc0fdbe4d401c0e2aa</Anchor>
    <Abstract>Implementation of the CCBlendProtocol blendFunc property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a1aa866559f901e646c7cb1798e1113ec</Anchor>
    <Abstract>Returns the smallest axis-aligned bounding box that surrounds any local content of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>afc68b65e37320813d43dba734ec8e381</Anchor>
    <Abstract>The bounding volume of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingVolumePadding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a7733dc8471757b6109d86e7fb688cbf7</Anchor>
    <Abstract>Padding that is added to all edges of the bounding volume, when the bounding volume is automatically ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a9f8e8744313f6ffa67116db7f92fda9a</Anchor>
    <Abstract>The child nodes of this node, in a node structural hierarchy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a03aece3103f5751908dfda571a5a4145</Anchor>
    <Abstract>Implementation of the CCRGBAProtocol color property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>containsAnimation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ad5fcdcec31ea7f5020dbfc322a547a0d</Anchor>
    <Abstract>Indicates whether this node, or any of its descendants, contains an instance of an animation...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depthFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a8b5a7a014ef8c5297a0d2a5a74442316</Anchor>
    <Abstract>The depth function used by the GL engine when comparing the Z-distance of this node against previousl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>descriptorNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae7dedd671475792c90a14ba94f867d6d</Anchor>
    <Abstract>If the shouldDrawDescriptor is set to YES, returns the child node that draws the descriptor text on t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diffuseColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a0bb07b8079bf75af208434b5360cc58b</Anchor>
    <Abstract>The diffuse color of the materials of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>directionMarkers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a619d2afdf429d6cf4fba13008d7d6372</Anchor>
    <Abstract>Returns an array of all the direction marker child nodes that were previously added using the addDire...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dirtiestAncestor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a3aed7fbdc1d3807d2da7d46ec3aee096</Anchor>
    <Abstract>Returns the heighest node in my ancestor hierarchy, including myself, that is dirty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emissionColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a821370544c7d36e7cbb742988b936102</Anchor>
    <Abstract>The emission color of the materials of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>af0ba63c550ccefcced28e809239f86c3</Anchor>
    <Abstract>Returns the smallest axis-aligned bounding box that surrounds any local content of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalLightLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a2fdfd0ca5824487179b86d45b868c78b</Anchor>
    <Abstract>When a mesh node is textured with a DOT3 bump-map (normal map), this property indicates the location...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ad0ca6732d1834fb1ad348a190f810121</Anchor>
    <Abstract>The location of the node in 3D space, relative to the global origin.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a4b3a431575f6e933f31ba2a8d9fa54e0</Anchor>
    <Abstract>Returns the overall rotation of the node in 3D space, relative to the global X, Y &amp;amp; Z axes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a14e0823f5a3988cbd52c2bc566a5f492</Anchor>
    <Abstract>The scale of the node in 3D space, relative to the global coordinate system, and accumulating the sca...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasLocalContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae984cc3ad8b86f4a031fa569d7745161</Anchor>
    <Abstract>Indicates whether this node has local content that will be drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSoftBodyContent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ab7dc69f8df858e108e70fc9f6258a347</Anchor>
    <Abstract>Returns whether this structural node contains any descendant nodes that are used for soft-body vertex...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnimationEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>af22c9f1b5440020b97fb89f8e9a2c508</Anchor>
    <Abstract>Indicates whether animation is enabled for this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBasePODNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a58a798d71f952da9502d312719c88f3f</Anchor>
    <Abstract>Indicates whether this POD is a base node, meaning that it has no parent.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isMeshNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a7e22bcc4bf0a37cd4a702db373663503</Anchor>
    <Abstract>Indicates whether this node has 3D mesh data to be drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOpaque</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ac178e6f33f03b599753ac1692bcf3dce</Anchor>
    <Abstract>Indicates whether the content of this node and its descendants is opaque.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isRunning</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a239f148f08d434791a2cb52420c20698</Anchor>
    <Abstract>Indicates whether the dynamic behaviour of this node is enabled.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isSkeletonRigid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a33c2efcf095df0b3bf42cddc0a758663</Anchor>
    <Abstract>Returns whether the bones in this skeleton, at and above this bone, are rigid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTouchable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a82daff61037ecddfdb9591119ba0fbc9</Anchor>
    <Abstract>Indicates whether this node will respond to UI touch events.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTouchEnabled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a9e76cd512d10b989d7f01095a81f47c1</Anchor>
    <Abstract>Indicates if this node, or any of its descendants, will respond to UI touch events.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransformDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ac2ed8acc0f14fb7a9abf24d706873b83</Anchor>
    <Abstract>Indicates whether any of the transform properties, location, rotation, or scale have been changed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransformRigid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a277e1309c2aa9c2c4dc313497c1ce7e2</Anchor>
    <Abstract>Returns whether the current transform applied to this node is rigid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUniformlyScaledGlobally</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>afd9e3b759aaa56641df88a70e1ec07dc</Anchor>
    <Abstract>Indicates whether current global scaling (via the globalScale property) is uniform along all axes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUniformlyScaledLocally</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a212fe1cdd0af61fb5fbbe74be761d876</Anchor>
    <Abstract>Indicates whether current local scaling (via the scale property) is uniform along all axes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>location</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a4fd02187b1ee7884b9d0d8a19e413ae9</Anchor>
    <Abstract>The location of the node in 3D space, relative to the parent of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalScalingMethod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a49f80cf856a152e5c5a9f08efe15b0b1</Anchor>
    <Abstract>Specifies the method to be used to scale vertex normals after they have been transformed during verte...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>opacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a7c97161a1d0bd50fb265bd390fab9247</Anchor>
    <Abstract>Implementation of the CCRGBAProtocol opacity property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a63b5b31888815554d7949288fb5d73e3</Anchor>
    <Abstract>The parent node of this node, in a node structural hierarchy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parentTransformMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>afe17f2234ab3bfdf9c2b70ae5510c0a8</Anchor>
    <Abstract>Returns the transform matrix of the parent node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performanceStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a968396edac85926dcd809809220f0489</Anchor>
    <Abstract>Some node types (notably CC3World) collect runtime performance statistics using an instance of CC3Per...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>podContentIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a6c1fd95973bf8c59172b834e622d072c</Anchor>
    <Abstract>The index of the POD data that forms the type-specific content of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>podParentIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a28cdeee0efde2485eb0af957901831e5</Anchor>
    <Abstract>The index of the parent node of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectedLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a9b45149a327a4c6968b4ddf6c3a569b8</Anchor>
    <Abstract>The current location of this node, as projected onto the 2D viewport coordinate space.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectedPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a8d2860d65aa974fe26a45d9d2d6cb286</Anchor>
    <Abstract>The current position of this node, as projected onto the 2D viewport coordinate space, returned as a 2D point.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quaternion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ad7ece51255c6b553667de83a46fc2107</Anchor>
    <Abstract>The rotation of the node in 3D space, relative to the parent of this node, expressed as a quaternion...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rootAncestor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a78c1dc69cd157d76184a077803d57df9</Anchor>
    <Abstract>Returns the root ancestor of this node, in the node structural hierarchy, or returns this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a40bf4400c59a1c7dbe3040e32de5c2c5</Anchor>
    <Abstract>The rotational orientation of the node in 3D space, relative to the parent of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a7df49fd1ba5f759e58cf941e6f6c5192</Anchor>
    <Abstract>The angular rotation around the axis specified in the rotationAxis property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotationAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>abe5011c1eb664c356e4a3a37f04d36b3</Anchor>
    <Abstract>The axis of rotation of the node in 3D space, relative to the parent of this node, expressed as a directional vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a68c7cf1e11c447397006bdb8adbec4aa</Anchor>
    <Abstract>Returns the rotator that manages the local rotation of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a3046c4ba3c92d526869f704243db5207</Anchor>
    <Abstract>The scale of the node in each dimension, relative to the parent of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleTolerance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>abc2307e74e42c5c2d872e4c91b07bced</Anchor>
    <Abstract>Indicates a tolerance value that is used when testing scale component values, including testing wheth...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAllowTouchableWhenInvisible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aa09d8bfdfd1a67eb94f108a984197dd8</Anchor>
    <Abstract>Indicates whether this node should be touchable even when invisible.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAutoremoveWhenEmpty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a452f578797e63d9a8fabd8e3fdb7d772</Anchor>
    <Abstract>Indicates whether this instance should automatically remove itself from its parent once its last chil...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCleanupWhenRemoved</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a3a212b8b1aaa572d0901b29f554d6712</Anchor>
    <Abstract>Indicates whether all the CCActions currently running on this node and all descendants should be stop...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCullBackFaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a0a02ef76817887e925c9dc04c0e9826e</Anchor>
    <Abstract>Indicates whether the back faces should be culled on the meshes contained in descendants of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldCullFrontFaces</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a890865bb4d5cf77011e4e3de7f3d1e17</Anchor>
    <Abstract>Indicates whether the front faces should be culled on the meshes contained in descendants of this nod...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDisableDepthMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a26a30412b0a1de08a1baae7db25d0790</Anchor>
    <Abstract>Indicates whether this instance will disable the GL depth mask while drawing the content of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDisableDepthTest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae14b782b005ee61d7c12a66669100a1d</Anchor>
    <Abstract>Indicates whether this instance will disable the GL depth test while drawing the content of this node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawAllDescriptors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ae4262f42e7d2a599cf5cdf2d7a2edb6c</Anchor>
    <Abstract>Indicates the state of the shouldDrawDescriptor property of this node and all descendant nodes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawAllLocalContentWireframeBoxes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a5fcb4583de836b376bd11880c67d7598</Anchor>
    <Abstract>Indicates the state of the shouldDrawLocalContentWireframeBox property of this node, if it has local content, and all descendant nodes that have local content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawAllWireframeBoxes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a791e5a2fb4e409d23125af2e9fc3b9a0</Anchor>
    <Abstract>Indicates the state of the shouldDrawWireframeBox property of this node and all descendant nodes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawDescriptor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a98878a97ed2aeaa6cd809cd9596e91b4</Anchor>
    <Abstract>Indicates whether this node should display a descriptive label on this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDrawWireframeBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a6296e007b77e700dc737c733454dfa16</Anchor>
    <Abstract>Indicates whether the node should display a wireframe bounding box around this node and all its desce...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldInheritTouchability</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a6833d96291530bec5cdcdc62fc7dad43</Anchor>
    <Abstract>Indicates whether this node should automatically be considered touchable if this node&amp;#39;s parent is tou...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseClockwiseFrontFaceWinding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a899c01b0e0a806669d7827112a275ddc</Anchor>
    <Abstract>Indicates whether the edge-widing algorithm used by the GL engine to determine which face of a triang...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseFixedBoundingVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ab17442122bf69cf1f949c241cb229fe3</Anchor>
    <Abstract>Indicates whether the bounding volume of this node should be considered fixed, even if the mesh verti...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseLighting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a3cbea6e6582b701b52b7a64d37ce6aa6</Anchor>
    <Abstract>If this value is set to YES, current lighting conditions will be taken into consideration when drawin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseSmoothShading</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>adcf527d032102ac1750699662c0c753d</Anchor>
    <Abstract>Indicates whether the shading of the faces of the mesh of this node should be smoothly shaded...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specularColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a12ec9c3ae66471ffdc3eec5612cf4b4e</Anchor>
    <Abstract>The specular color of the materials of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>structureDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>af4f64f9bff8e82bd227b87368bdd6ae5</Anchor>
    <Abstract>Returns a description of the structure of this node and its descendants, by recursing through this no...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchableNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>aa18700eb982dbcff8acbf70ce0f97b6c</Anchor>
    <Abstract>Indicates the node that is of interest if this node is selected by a touch event.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a5a4a4b22e76c0461c5bd3d5a25241660</Anchor>
    <Abstract>The transformation matrix derived from the location, rotation and scale transform properties of this ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformMatrixInverted</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>abfe250c04fe124bb7939f2f35171186f</Anchor>
    <Abstract>Returns the matrix inversion of the transformMatrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uniformScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a112d11012a4d25e53e1cf431ea5c8469</Anchor>
    <Abstract>The scale of the node, uniform in each dimension, relative to the parent of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visible</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>ab8d92d79ffd98917bdcce43917eb87d5</Anchor>
    <Abstract>Controls whether this node shoud be displayed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wireframeBoxNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a9ad12e8a7b4202e8cd152c64a31b70aa</Anchor>
    <Abstract>If the shouldDrawWireframeBox is set to YES, returns the child node that draws the wireframe box arou...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>world</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>a43cfe3d4e71b1eaf276a54d6a65de15e</Anchor>
    <Abstract>If this node has been added to the 3D world, either directly, or as part of a node assembly...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zOrder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Node</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node.html</Path>
    <Anchor>acbb29f8d02c53f72f48d45c673d33ce4</Anchor>
    <Abstract>Indicates the order in which this node should be drawn when compared to other nodes, when drawing order should be determined by distance from the camera (Z-order).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeAcceptor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeAcceptor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_acceptor.html</Path>
    <Abstract>A type of CC3NodeEvaluator that accepts all nodes by always returning YES from the evaluate: method...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeAnimation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Abstract>An instance of a subclass of CC3NodeAnimation manages the animation of nodes.</Abstract>
    <DeclaredIn>CC3NodeAnimation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>establishFrameAt:forNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>afcd64771354713b30132a4899034ded3</Anchor>
    <Abstract>Updates the location, rotation, quaternion, and scale of the specified node based on the animation fr...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithFrameCount:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>a0eeb0b659c4156ff77adb42337e5abed</Anchor>
    <Abstract>Initializes this instance to animate with the specified number of animation frames.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animationWithFrameCount:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>ad1ebe86caf0c19dcab95bc85f4d5fad8</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to animate with the specified number of animation ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>a53fb3a0cf6932e288c6d28541c9e62d3</Anchor>
    <Abstract>Returns the current frame.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>a9ae103e929634b4b81f93bfe84233130</Anchor>
    <Abstract>The number of frames of animation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnimatingLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>a4b9950483a1d0438129d609ac6b85fd6</Anchor>
    <Abstract>Indicates whether location data is available for animation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnimatingQuaternion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>a572eec2bb8b716bd1aaaa2332d94ea5c</Anchor>
    <Abstract>Indicates whether rotation quaternion data is available for animation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnimatingRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>a959e556928aee372c91e95233902bd46</Anchor>
    <Abstract>Indicates whether rotation data is available for animation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAnimatingScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>a9b397c94e012f4bf1c71057c4dfbd756</Anchor>
    <Abstract>Indicates whether scale data is available for animation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldInterpolate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_animation.html</Path>
    <Anchor>a461401b47f676ee8824682f54784699c</Anchor>
    <Abstract>Indicates whether this animation should interpolate between frames, for accuracy.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeArraySequencer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeArraySequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_array_sequencer.html</Path>
    <Abstract>An CC3NodeArraySequencer is a type of CC3NodeSequencer that arranges nodes into an array...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldInsertNode:between:and:withVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeArraySequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_array_sequencer.html</Path>
    <Anchor>abc65901f9eed1ee341ddcd42c2d7d20a</Anchor>
    <Abstract>Attempts to insert the specified node between two specified nodes that already exist in the array...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3NodeArraySequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_array_sequencer.html</Path>
    <Anchor>a884b245242b9e187caac311fd82c5a2a</Anchor>
    <Abstract>Returns an array of the nodes that have been added to this sequencer, ordered as this sequencer defin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeArrayZOrderSequencer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeArrayZOrderSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_array_z_order_sequencer.html</Path>
    <Abstract>An CC3NodeArrayZOrderSequencer is a type of CC3NodeArraySequencer that sorts the contained nodes by t...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseOnlyForwardDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3NodeArrayZOrderSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_array_z_order_sequencer.html</Path>
    <Anchor>a2d7d9b56e8529d252bab435953594dc1</Anchor>
    <Abstract>For sequencers that order nodes based on distance to the camera, indicates whether, when comparing distances from the nodes to the camera, only the distance component that is parallel to the camera&amp;#39;s forwardDirection should be considered.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeBoundingArea</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeBoundingArea</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_area.html</Path>
    <Abstract>A bounding volume that defines a 2D bounding area for a node, and checks that bounding area against a...</Abstract>
    <DeclaredIn>CC3BoundingVolumes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesIntersectBounds:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeBoundingArea</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_area.html</Path>
    <Anchor>a50d9e1ba5642ffe8ecd4883602716ed5</Anchor>
    <Abstract>Returns whether this bounding volume intersects the specfied bounding rectangle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeBoundingBoxVisitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeBoundingBoxVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_box_visitor.html</Path>
    <Abstract>Specialized transforming visitor that measures the bounding box of a node and all its descendants...</Abstract>
    <DeclaredIn>CC3NodeVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeBoundingBoxVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_box_visitor.html</Path>
    <Anchor>ac649ebdda9e736d8d5a3816fcc42380c</Anchor>
    <Abstract>Returns the bounding box accumulated during the visitation run.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeBoundingBoxVolume</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeBoundingBoxVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_box_volume.html</Path>
    <Abstract>A bounding volume that forms an axially aligned bounding box (AABB) around the node, in the node&amp;#39;s local coordinate system.</Abstract>
    <DeclaredIn>CC3BoundingVolumes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeBoundingBoxVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_box_volume.html</Path>
    <Anchor>a56b40a869bd1fdca22e2addd8aef08db</Anchor>
    <Abstract>The axially-aligned-bounding-box (AABB) in the node&amp;#39;s local coordinate system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBoundingBoxVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeBoundingBoxVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_box_volume.html</Path>
    <Anchor>a21f512fa22ab518dc9d0e0fc68529653</Anchor>
    <Abstract>An array of the eight vertices of the bounding box in the global coordinate system, after the bounding box has been transformed (translated, rotated and scaled) to match the transformation of the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeBoundingVolume</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Abstract>Bounding volumes are used by CC3Nodes to determine whether a node interset the camera&amp;#39;s frustum...</Abstract>
    <DeclaredIn>CC3BoundingVolumes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesIntersectFrustum:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>aeca2f5ae1c91e8b1dd05acc747858a4b</Anchor>
    <Abstract>Returns whether this bounding volume intersects the specfied frustum.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>a5710a6a9809553f1d95531d04cf36390</Anchor>
    <Abstract>Marks the volume as dirty and in need of rebuilding from the associated mesh vertices the next time t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markDirtyAndUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>a063dd6523dafd0ca833245b866f5d073</Anchor>
    <Abstract>Marks the volume as dirty and in need of rebuilding from the associated mesh vertices, and forces an update and transform of the bounding volume.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>a2c7b750d7dc1f471793e4b57031fca6f</Anchor>
    <Abstract>Transforms this bounding volume to match the transformation of the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingVolume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>abc2c3a70f2dbb01d2f9ef6f0ae852595</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cameraDistanceProduct</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>ae3cb474eab21eac99d0c45893ab35b7a</Anchor>
    <Abstract>A measure of the distance from the camera to the centre of geometry of the node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerOfGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>a5bbcb3529c12af13595bf7471ca4b12e</Anchor>
    <Abstract>The center of geometry for the node in the node&amp;#39;s local coordinate system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalCenterOfGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>a839bc17acce0d6b3ad6d50e4ea223464</Anchor>
    <Abstract>The center of geometry for the node in the global coordinate system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>ad27dd06be2edb517e19437891744cbea</Anchor>
    <Abstract>The node whose boundary this instance is keeping track of.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldMaximize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_bounding_volume.html</Path>
    <Anchor>a214039e06d20ee65432f0c6bd92089eb</Anchor>
    <Abstract>If the value of this property is set to YES, the boundary of this volume will only ever expand when t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeDescriptor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeDescriptor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_descriptor.html</Path>
    <Abstract>CC3NodeDescriptor is a type of CC3Billboard specialized for attaching a descriptive text label to ano...</Abstract>
    <DeclaredIn>CC3Billboard.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeDrawingVisitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeDrawingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_drawing_visitor.html</Path>
    <Abstract>CC3NodeDrawingVisitor is a CC3NodeVisitor that is passed to a node when it is visited during drawing ...</Abstract>
    <DeclaredIn>CC3NodeVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeDrawingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_drawing_visitor.html</Path>
    <Anchor>a55012ddb70af9da29663d8e604e392fa</Anchor>
    <Abstract>Draws the specified node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeDrawingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_drawing_visitor.html</Path>
    <Anchor>a49f966372c7d2ed17961b87c236ac00a</Anchor>
    <Abstract>The camera that is viewing the 3D scene that is being drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawingSequencer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeDrawingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_drawing_visitor.html</Path>
    <Anchor>af802dd190bc5cdd681fa2ab579f33e57</Anchor>
    <Abstract>The node sequencer that contains the drawable nodes, in the sequence in which they will be drawn...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldClearDepthBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeDrawingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_drawing_visitor.html</Path>
    <Anchor>ac4b604960f553b6ca9a9ee43ab5fb27e</Anchor>
    <Abstract>Indicates whether the OpenGL depth buffer should be cleared before drawing the 3D world...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldDecorateNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeDrawingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_drawing_visitor.html</Path>
    <Anchor>a59f8a2d9a8fbc17fc8dfb86279d38e3b</Anchor>
    <Abstract>Indicates whether nodes should decorate themselves with their configured material, textures, or color arrays.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeDrawingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_drawing_visitor.html</Path>
    <Anchor>a4abae8b1dcf9a256b285182f4b68eb95</Anchor>
    <Abstract>The current texture unit being drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUnitCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeDrawingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_drawing_visitor.html</Path>
    <Anchor>a49f4642ecff9d833b93155305014f02a</Anchor>
    <Abstract>The number of texture units being drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeEvaluator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeEvaluator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_evaluator.html</Path>
    <Abstract>A CC3NodeEvaluator performs some type of accept/reject evaluation on a CC3Node instance.</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeEvaluator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_evaluator.html</Path>
    <Anchor>a76af6a1d249cec7f150a286b90cfba5f</Anchor>
    <Abstract>Performs the evaluation defined by this class on the specified node and returns YES if the node is ac...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3NodeEvaluator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_evaluator.html</Path>
    <Anchor>a5b47758a4634a25a45c6fdb342b846f9</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodePickingVisitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodePickingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_picking_visitor.html</Path>
    <Abstract>CC3NodePickingVisitor is a CC3NodeDrawingVisitor that is passed to a node when it is visited during n...</Abstract>
    <DeclaredIn>CC3NodeVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pickedNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodePickingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_picking_visitor.html</Path>
    <Anchor>ae0dc087a15a61724fef9816d9e1c05d6</Anchor>
    <Abstract>The node that was most recently picked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeRejector</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeRejector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_rejector.html</Path>
    <Abstract>A type of CC3NodeEvaluator that rejects all nodes by always returning NO from the evaluate: method...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeSequencer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Abstract>A CC3NodeSequencer instance organizes nodes that are added to it.</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add:withVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a772ea9c0a0645b3d0c025ecf674a447d</Anchor>
    <Abstract>Adds the specified node to this sequencer if the node is accepted by the contained evaluator...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a28825d3f27bbbfad37712e59073b928f</Anchor>
    <Abstract>Returns a string containing a more complete description of this object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identifyMisplacedNodesWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a4b3001154b6d8bc7ee64cdf05ee273c9</Anchor>
    <Abstract>If the allowSequenceUpdates is set to YES, looks for nodes that are misplaced in this sequencer...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithEvaluator:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>abc9a47b1f834d517cd84f3d6345933c2</Anchor>
    <Abstract>Initializes this instance with the specified evaluator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove:withVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>ab3795733e25fc4e1e7c199cd8d89655d</Anchor>
    <Abstract>Removes the specified node, if it exists within this sequencer, and returns whether it was removed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateSequenceWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>aa8ad49a7a2291efa7b23666df77d8338</Anchor>
    <Abstract>Invokes the identifyMisplacedNodesWithVisitor: method on this sequencer to look for nodes that are &amp;quot;m...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitNodesWithNodeVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a6a13f3478e6c198964eb37b361d42018</Anchor>
    <Abstract>Visits the nodes contained in this node sequencer with the specified node visitor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sequencer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a4e09268e7cf64b564aa8dcec64969758</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with no evaluator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sequencerWithEvaluator:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a799a33c298729b130794aa790430c412</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified evaluator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allowSequenceUpdates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a1253396ff7d21f5e24ab3149882bf7e9</Anchor>
    <Abstract>Indicates that the sequencer will run the algorithm to relocate misplaced nodes when the updateSequen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a23a3fab5a4f8f6486d18615f88c298ef</Anchor>
    <Abstract>The evaluator that determines whether a node should be added to this sequencer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a850cc4133a71a7414637fb36a3aabc88</Anchor>
    <Abstract>Returns an array of the nodes that have been added to this sequencer, ordered as this sequencer defin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldUseOnlyForwardDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSequencer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer.html</Path>
    <Anchor>a3a67db0515ee49c1b257bd4fd19e28bf</Anchor>
    <Abstract>For sequencers that order nodes based on distance to the camera, indicates whether, when comparing distances from the nodes to the camera, only the distance component that is parallel to the camera&amp;#39;s forwardDirection should be considered.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeSequencerVisitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeSequencerVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer_visitor.html</Path>
    <Abstract>This visitor is used to visit CC3NodeSequencers to perform operations on nodes within the sequencers...</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMisplacedNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencerVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer_visitor.html</Path>
    <Anchor>a093235a05e96340ad0fab340cf424bab</Anchor>
    <Abstract>Adds the specified node to the array of nodes held in the misplacedNodes property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearMisplacedNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencerVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer_visitor.html</Path>
    <Anchor>a5a97cff41486290b68b514a054dbc036</Anchor>
    <Abstract>Clears the misplacedNodes array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithWorld:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeSequencerVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer_visitor.html</Path>
    <Anchor>a4779502b7054b1a00e91c5c456bea177</Anchor>
    <Abstract>Initializes this instance with the specified CC3World.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitorWithWorld:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3NodeSequencerVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer_visitor.html</Path>
    <Anchor>aa40eb5d11ae006aaf8ef4c3ddaf8b2ee</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified CC3World.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasMisplacedNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSequencerVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer_visitor.html</Path>
    <Anchor>ade1147e3b5d92256d11fbd75696a2e59</Anchor>
    <Abstract>Indicates whether the misplacedNodes property contains nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>misplacedNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSequencerVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer_visitor.html</Path>
    <Anchor>ad5199fa88dd6e1ea5083dd1f05d36dad</Anchor>
    <Abstract>Returns an array of nodes that the sequencer deems to be misplaced after being visited by this visito...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>world</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSequencerVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_sequencer_visitor.html</Path>
    <Anchor>aef5346211e86b83cf0383130463fffdc</Anchor>
    <Abstract>The CC3World instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeSphericalBoundingVolume</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeSphericalBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_spherical_bounding_volume.html</Path>
    <Abstract>A bounding volume that forms a sphere around a single point.</Abstract>
    <DeclaredIn>CC3BoundingVolumes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSphericalBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_spherical_bounding_volume.html</Path>
    <Anchor>a1f3172ab110e84b94ac2cb1eb070adc0</Anchor>
    <Abstract>The radius that encompasses the extent of the node in the global coordinate system, as measured from the global center of geometry of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeSphericalBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_spherical_bounding_volume.html</Path>
    <Anchor>a3dab2f9bcba1779d23a285a05d0ba9ff</Anchor>
    <Abstract>The radius that encompasses the extent of the node in the node&amp;#39;s local coordinate system...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeTighteningBoundingVolumeSequence</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeTighteningBoundingVolumeSequence</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_tightening_bounding_volume_sequence.html</Path>
    <Abstract>A composite bounding volume that contains other bounding volumes.</Abstract>
    <DeclaredIn>CC3BoundingVolumes.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBoundingVolume:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeTighteningBoundingVolumeSequence</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_tightening_bounding_volume_sequence.html</Path>
    <Anchor>afaa001ee8f4b9fa1c80d040f8ee530d7</Anchor>
    <Abstract>Adds the specified bounding volume to the end of the array of contained bounding volumes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingVolumes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeTighteningBoundingVolumeSequence</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_tightening_bounding_volume_sequence.html</Path>
    <Anchor>a58a83b08df8516b5a79464b4e9a4ecc5</Anchor>
    <Abstract>The array of contained bounding volumes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeTransformingVisitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeTransformingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_transforming_visitor.html</Path>
    <Abstract>CC3NodeTransformingVisitor is a CC3NodeVisitor that is passed to a node when it is visited during tra...</Abstract>
    <DeclaredIn>CC3NodeVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parentTansformMatrixFor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeTransformingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_transforming_visitor.html</Path>
    <Anchor>a560cb86579de242e889a1736ed85a1ce</Anchor>
    <Abstract>Returns the transform matrix to use as the parent matrix when transforming the specified node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isTransformDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeTransformingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_transforming_visitor.html</Path>
    <Anchor>a7e4510a59eaec2751bcfd7046a7dbf00</Anchor>
    <Abstract>Returns whether the transform matrix of the node currently being visited is dirty and needs to be rec...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldLocalizeToStartingNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeTransformingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_transforming_visitor.html</Path>
    <Anchor>a5ccde4d5a7b03945bbf1c4d8388bcde9</Anchor>
    <Abstract>Indicates whether all transforms should be localized to the local coordinate system of the startingNo...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldRestoreTransforms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeTransformingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_transforming_visitor.html</Path>
    <Anchor>a1d310b5449f4235d26818822ae8e9cf4</Anchor>
    <Abstract>This property only has effect when the shouldLocalizeToStartingNode property is set to YES...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeUpdatingVisitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeUpdatingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_updating_visitor.html</Path>
    <Abstract>CC3NodeUpdatingVisitor is a CC3NodeVisitor that is passed to a node when it is visited during updatin...</Abstract>
    <DeclaredIn>CC3NodeVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deltaTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeUpdatingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_updating_visitor.html</Path>
    <Anchor>a93ec3cc81bdc16b412825d5122ea5b71</Anchor>
    <Abstract>This property gives the interval, in seconds, since the previous update.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3NodeVisitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Abstract>A CC3NodeVisitor is a context object that is passed to a node when it is visited during a traversal o...</Abstract>
    <DeclaredIn>CC3NodeVisitor.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>a5f5f75164a6ea41a886a03597374f8a6</Anchor>
    <Abstract>Returns a more detailed description of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>requestRemovalOf:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>aa73cd8a1c410132a8328336eb27fb36f</Anchor>
    <Abstract>Requests the removal of the specfied node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>a266dd55e72e807ea21fcdc6d5bd6aaff</Anchor>
    <Abstract>Visits the specified node, then if the shouldVisitChildren property is set to YES, invokes this visit: method on each child node as well.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>visitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>a78e3132e1e3022ec88a5ba5b33635873</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>aea6394157b1d5839f67d775a471426dc</Anchor>
    <Abstract>The CC3Node that is currently being visited.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performanceStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>adf439b4cc88291313cee738292a98b3f</Anchor>
    <Abstract>The performanceStatistics being accumulated during the visitation runs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scratchMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>af3dfac4bedbbad506b7c44b86110c6b3</Anchor>
    <Abstract>Returns a CC3GLMatrix that can be used as a scratch pad for any matrix math that is required during d...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldVisitChildren</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>a2873b069d584f174ab86c204332eb42e</Anchor>
    <Abstract>Indicates whether this visitor should traverse the child nodes of any node it visits.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startingNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3NodeVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_node_visitor.html</Path>
    <Anchor>accdd11d3c876b82ac2840c2b7844e54c</Anchor>
    <Abstract>The CC3Node on which this visitation traversal was intitiated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpaqueNodeAcceptor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpaqueNodeAcceptor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_opaque_node_acceptor.html</Path>
    <Abstract>A type of CC3LocalContentNodeEvaluator that accepts only opaque nodes.</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11ClientCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11ClientCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_client_capabilities.html</Path>
    <Abstract>CC3OpenGLES11ClientCapabilities manages trackers that read and remember OpenGL ES 1...</Abstract>
    <DeclaredIn>CC3OpenGLES11Capabilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ClientCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_client_capabilities.html</Path>
    <Anchor>aabfa2710860e57912a74b844f988af3e</Anchor>
    <Abstract>Tracks the color array capability (GL capability name GL_COLOR_ARRAY).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixIndexArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ClientCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_client_capabilities.html</Path>
    <Anchor>a7fcdc1ab62bcabd37fa15a76b59b9154</Anchor>
    <Abstract>Tracks the matrix index array capability (GL capability name GL_MATRIX_INDEX_ARRAY_OES).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ClientCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_client_capabilities.html</Path>
    <Anchor>a515f77d2ac9489416bb2322648a6f21a</Anchor>
    <Abstract>Tracks the normal array capability (GL capability name GL_NORMAL_ARRAY).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSizeArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ClientCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_client_capabilities.html</Path>
    <Anchor>a5381c330d3177a988ab3a8009cf33b5f</Anchor>
    <Abstract>Tracks the point size array capability (GL capability name GL_POINT_SIZE_ARRAY_OES).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ClientCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_client_capabilities.html</Path>
    <Anchor>a2cbd5058228a9bbd4016900aa39cde51</Anchor>
    <Abstract>Tracks the vertex array capability (GL capability name GL_VERTEX_ARRAY).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weightArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ClientCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_client_capabilities.html</Path>
    <Anchor>ad93f2379fe787b162942c582cfa49f09</Anchor>
    <Abstract>Tracks the weight array capability (GL capability name GL_WEIGHT_ARRAY_OES).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Engine</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Abstract>CC3OpenGLES11Engine manages the state of the OpenGL ES 1.1.</Abstract>
    <DeclaredIn>CC3OpenGLES11Engine.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTrackerToClose:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a257acc6408a97aa44d446ccd89881708</Anchor>
    <Abstract>Adds the specified tracker to the collection of trackers that are to be closed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTrackerToOpen:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a9e99204dc26f3a6dc5334c82eef994b4</Anchor>
    <Abstract>Adds the specified tracker to the collection of trackers that are to be opened.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>af3a793f072587d81c216939c28f3f4d5</Anchor>
    <Abstract>Closes tracking of GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeTrackers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a6b0f8aaf7324bba40069221553c026f3</Anchor>
    <Abstract>Template method that initializes the tracker managers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a00743d64dfc235f96a634a97dbd8ec95</Anchor>
    <Abstract>Opens tracking of GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a2f6f731fe51d012a56f520f697d25bbd</Anchor>
    <Abstract>Returns the CC3OpenGLES11Engine engine singleton.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appExtensions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a8bf8b0b2a5f5c131fb52b93dc93c43c0</Anchor>
    <Abstract>Most, but not all GL functionality and state is managed by the trackers attached to this CC3OpenGLES1...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>af44a6eee69a102ebf2eba144668a6d4f</Anchor>
    <Abstract>The state tracking manager that tracks GL client capabilities state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a72abc6217e8671b36d4a93a6980f808d</Anchor>
    <Abstract>The state tracking manager that tracks GL fog state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a10f606e82c4047cfec2c17a2f92b7d9d</Anchor>
    <Abstract>The state tracking manager that tracks GL engine hints.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lighting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a911d1caa32a376bbd2b67f4b4a1e8f74</Anchor>
    <Abstract>The state tracking manager that tracks GL lighting state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>aef5a434a856ef40b3307c72d83458e61</Anchor>
    <Abstract>The state tracking manager that tracks GL materials state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>af46b5673f0daedcfee4a07d2ffff2c4d</Anchor>
    <Abstract>The state tracking manager that tracks GL matrix state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>platform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>ac403140bb5fe65a2ec2975e7eadb52f4</Anchor>
    <Abstract>The state tracking manager that tracks GL platform functionality state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>serverCapabilities</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>aad25816755f02d4685829ee0fa51194e</Anchor>
    <Abstract>The state tracking manager that tracks GL server capabilities state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>state</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>ab06952b71a6b516ebb1591a9f9a34c2b</Anchor>
    <Abstract>The state tracking manager that tracks general GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>abf2759d9faa1a0b6be2d0ed45f53efc7</Anchor>
    <Abstract>The state tracking manager that tracks GL textures state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackersToClose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>ac0293f3819c8e61357697d2f23edc602</Anchor>
    <Abstract>A collection of trackers that are to closed when this instance is closed at the end of each frame ren...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackersToOpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a31407950e1ca68d9c8f8712ef5a7b04f</Anchor>
    <Abstract>A collection of trackers that are to opened when this instance is opened at the start of each frame r...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Engine</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_engine.html</Path>
    <Anchor>a2347ce4a00926c888fbf8e825d86159e</Anchor>
    <Abstract>The state tracking manager that tracks GL vertex array state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Fog</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_fog.html</Path>
    <Abstract>CC3OpenGLES11Fog manages trackers for fog state.</Abstract>
    <DeclaredIn>CC3OpenGLES11Fog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_fog.html</Path>
    <Anchor>a4f6472e80bc4dd393daeac67f31b90e8</Anchor>
    <Abstract>Tracks fog color (GL name GL_FOG_COLOR).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>density</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_fog.html</Path>
    <Anchor>abcd7b43e0c68e5c213eb5d3f543d5767</Anchor>
    <Abstract>Tracks fog density used in the exponential functions (GL name GL_FOG_DENSITY).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_fog.html</Path>
    <Anchor>ad57214ac50bef11a0ef5ccc2d9a190fd</Anchor>
    <Abstract>Tracks fog end distance used in the linear function (GL name GL_FOG_END).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_fog.html</Path>
    <Anchor>a2e95694f21b173f7f7ce72b5a4f1c2dc</Anchor>
    <Abstract>Tracks fog mode (GL name GL_FOG_MODE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>start</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Fog</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_fog.html</Path>
    <Anchor>a0ed46f71bdcae06c26fd6e2803d47d7d</Anchor>
    <Abstract>Tracks fog start distance used in the linear function (GL name GL_FOG_START).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Hints</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Hints</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_hints.html</Path>
    <Abstract>CC3OpenGLES11Hints manages trackers for GL hints.</Abstract>
    <DeclaredIn>CC3OpenGLES11Hints.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Hints</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_hints.html</Path>
    <Anchor>a373f007b8cada8060a2d88b6c406f58f</Anchor>
    <Abstract>Tracks the fog hint (GL name GL_FOG_HINT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateMipMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Hints</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_hints.html</Path>
    <Anchor>ad6f18a547dd6280184cd070d985383f7</Anchor>
    <Abstract>Tracks the generate mipmap hint (GL name GL_GENERATE_MIPMAP_HINT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lineSmooth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Hints</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_hints.html</Path>
    <Anchor>ab34cf4808ec6719134baa271e1b7432f</Anchor>
    <Abstract>Tracks the line smoothing hint (GL name GL_LINE_SMOOTH_HINT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>perspectiveCorrection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Hints</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_hints.html</Path>
    <Anchor>aca81684324993790d7b8e7fe19d62db9</Anchor>
    <Abstract>Tracks the perspective correction hint (GL name GL_PERSPECTIVE_CORRECTION_HINT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSmooth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Hints</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_hints.html</Path>
    <Anchor>a3c463e6d3a0521a28d528e2facb31ebc</Anchor>
    <Abstract>Tracks the point smoothing hint (GL name GL_POINT_SMOOTH_HINT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Light</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Abstract>CC3OpenGLES11Light manages trackers for an individual light.</Abstract>
    <DeclaredIn>CC3OpenGLES11Lighting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:withLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>ad4c46931cd9f76cf45e795cbb9db6da0</Anchor>
    <Abstract>Initializes this instance to track GL state for the light with the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:withLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>aeebf1d920c8ad80e790be52cdad9b776</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to track GL state for the light with the specified...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ambientColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>a162ac2c7f1a88b88a37ab0672591750b</Anchor>
    <Abstract>Tracks ambient color (GL name GL_AMBIENT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constantAttenuation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>ae36a2870294e3308ad3eb8e0b40e693a</Anchor>
    <Abstract>Tracks spot cutoff angle (GL name GL_CONSTANT_ATTENUATION).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diffuseColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>ac5c900eec764b765e1e79a2610ef77d5</Anchor>
    <Abstract>Tracks diffuse color (GL name GL_DIFFUSE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>light</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>ad767e83fadb3e703b934451c905a5466</Anchor>
    <Abstract>Tracks the light capability (GL capability name GL_LIGHTi).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linearAttenuation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>aef8125841354b862fbe7e45718b82861</Anchor>
    <Abstract>Tracks spot cutoff angle (GL name GL_LINEAR_ATTENUATION).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>a34904af706eac4f2c4fe7b6be770e780</Anchor>
    <Abstract>Tracks position (GL name GL_POSITION).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quadraticAttenuation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>a0398909b81f444b2c425e541effba088</Anchor>
    <Abstract>Tracks spot cutoff angle (GL name GL_QUADRATIC_ATTENUATION).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specularColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>a22bea22f7ff996477238d8adf60989e4</Anchor>
    <Abstract>Tracks specular color (GL name GL_SPECULAR).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spotCutoffAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>a2dd78845430d50491575de40220fabeb</Anchor>
    <Abstract>Tracks spot cutoff angle (GL name GL_SPOT_CUTOFF).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spotDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>a29092ba5eceb096bd749d2c74134bebb</Anchor>
    <Abstract>Tracks spot direction (GL name GL_SPOT_DIRECTION).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>spotExponent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Light</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_light.html</Path>
    <Anchor>a57f3d2e31118c7e4cbbd43d6dae77de8</Anchor>
    <Abstract>Tracks spot cutoff angle (GL name GL_SPOT_EXPONENT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Lighting</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Lighting</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_lighting.html</Path>
    <Abstract>CC3OpenGLES11Lighting manages trackers for lighting state.</Abstract>
    <DeclaredIn>CC3OpenGLES11Lighting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Lighting</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_lighting.html</Path>
    <Anchor>a3cc521993ea82f033cd438967ac4dcf6</Anchor>
    <Abstract>Returns the tracker for the light with the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Lighting</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_lighting.html</Path>
    <Anchor>a37559deb66444d68f09c98172be40399</Anchor>
    <Abstract>Returns the number of active lights.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Lighting</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_lighting.html</Path>
    <Anchor>a146bfda2c6732129e12a0c63026bbc7e</Anchor>
    <Abstract>Tracks lighting state for each light (GL capability name GL_LIGHTi).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>worldAmbientLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Lighting</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_lighting.html</Path>
    <Anchor>a6108480ec7be3bd1c72fd3a08bd7b47a</Anchor>
    <Abstract>Tracks world ambient light color (GL name GL_LIGHT_MODEL_AMBIENT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Materials</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Materials</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_materials.html</Path>
    <Abstract>CC3OpenGLES11Materials manages trackers for materials state.</Abstract>
    <DeclaredIn>CC3OpenGLES11Materials.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Materials</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_materials.html</Path>
    <Anchor>a135c09a3034cf107c0113e88cd529ba8</Anchor>
    <Abstract>Tracks alpha test function and reference value together.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ambientColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Materials</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_materials.html</Path>
    <Anchor>a924585e5a15dcbda592ee911a0accffb</Anchor>
    <Abstract>Tracks ambient color (GL name GL_AMBIENT).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blendFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Materials</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_materials.html</Path>
    <Anchor>a21f226689a38b560451e29ab92b68da2</Anchor>
    <Abstract>Tracks both the source and destination blend functions together.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diffuseColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Materials</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_materials.html</Path>
    <Anchor>a6c727bcfe5da9a7d742aa1f89351a0c5</Anchor>
    <Abstract>Tracks diffuse color (GL name GL_DIFFUSE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emissionColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Materials</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_materials.html</Path>
    <Anchor>af36e6b09e3f0662dd5c5c41c06cebac4</Anchor>
    <Abstract>Tracks emission color (GL name GL_EMISSION).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shininess</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Materials</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_materials.html</Path>
    <Anchor>aeddf19db2329371e99f857786bdd558e</Anchor>
    <Abstract>Tracks shininess (GL name GL_SHININESS).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>specularColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Materials</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_materials.html</Path>
    <Anchor>ac7645c4b6290ea3154e7f4616ab407b9</Anchor>
    <Abstract>Tracks specular color (GL name GL_SPECULAR).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Matrices</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Matrices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrices.html</Path>
    <Abstract>CC3OpenGLES11Matrices manages trackers for matrix state.</Abstract>
    <DeclaredIn>CC3OpenGLES11Matrices.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paletteAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Matrices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrices.html</Path>
    <Anchor>ac320b0c801660ac9d1c6fe4006b8280c</Anchor>
    <Abstract>Returns the tracker for the palette matrix with the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Matrices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrices.html</Path>
    <Anchor>ae5c9e2094e38450bb2e7960e19fbe0ce</Anchor>
    <Abstract>Tracks matrix mode (GL get name GL_MATRIX_MODE and set function glMatrixMode).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modelview</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Matrices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrices.html</Path>
    <Anchor>af684d3dc1f3a8a531c79edf3a601b149</Anchor>
    <Abstract>Manages the modelview matrix stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paletteMatrices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Matrices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrices.html</Path>
    <Anchor>af6b27d0aa265c9665cc5cd7eb3c526d1</Anchor>
    <Abstract>Manages the palette of matrices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>paletteMatrixCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Matrices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrices.html</Path>
    <Anchor>a706040e2318b9311f25d563d317627bb</Anchor>
    <Abstract>Returns the number of active palette matrices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Matrices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrices.html</Path>
    <Anchor>ab06e6d94c6b896b2c3f06637d4b4025b</Anchor>
    <Abstract>Manages the projection matrix stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11MatrixPalette</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11MatrixPalette</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_palette.html</Path>
    <Abstract>CC3OpenGLES11MatrixPalette provides access to several commands that operate on one matrix the matrix ...</Abstract>
    <DeclaredIn>CC3OpenGLES11Matrices.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forPalette:andModeTracker:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixPalette</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_palette.html</Path>
    <Anchor>aa95c2c0775b39e123c06ff3038dea4b8</Anchor>
    <Abstract>Initializes this instance for the GL_MATRIX_PALETTE_OES matrix mode and specified palette index...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromModelView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixPalette</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_palette.html</Path>
    <Anchor>a3fb64c281ba1be546288b095b652ea11</Anchor>
    <Abstract>Loads this matrix palette from the current modelview matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forPalette:andModeTracker:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11MatrixPalette</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_palette.html</Path>
    <Anchor>ab3d4878cca54d323a31bbfcadab479ca</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance for the GL_MATRIX_PALETTE_OES matrix mode and spec...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11MatrixStack</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Abstract>CC3OpenGLES11MatrixStack provides access to several commands that operate on one of the matrix stacks...</Abstract>
    <DeclaredIn>CC3OpenGLES11Matrices.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>aed88a940e564538264ee03d5ebf6ab00</Anchor>
    <Abstract>Activates the matrix mode for this matrix in GL, by setting the value of the matrix mode tracker to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDepth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>a7af615b60675e24325688e9bfc42219d</Anchor>
    <Abstract>Returns the depth this matrix stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTop:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>ad5eb52dbd279f38bd0bd885d7d87f7bb</Anchor>
    <Abstract>Retrieves the matrix at the top of this matrix stack, and populates the specified matrix with its con...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>a28cad3074cf8e398f05ec578b16b3e91</Anchor>
    <Abstract>Loads the identity matrix onto the top of this matrix stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:withMode:andTopName:andDepthName:andModeTracker:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>afcbdf8b6e9924a47151947d95db664d9</Anchor>
    <Abstract>Initializes this instance for the specified matrix mode.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>a3483ce7b81f301106a71789061b8269d</Anchor>
    <Abstract>Loads the specified matrix onto the top of this matrix stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multiply:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>ac3c99c67ab655b0d76e3cc2b3c961323</Anchor>
    <Abstract>Multiplies the matrix at top of this matrix stack with the specified matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>ac4ab658f49e841fa5d8e6c00805e4f7f</Anchor>
    <Abstract>Activates this matrix mode, then pops this matrix stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>push</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>aaa8c9f31eac27f4144f2232c5c646217</Anchor>
    <Abstract>Activates this matrix mode, then pushes this matrix stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:withMode:andTopName:andDepthName:andModeTracker:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11MatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_matrix_stack.html</Path>
    <Anchor>a9c7f54d819de6abeefd0b5f9a4df733d</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance for the specified matrix mode.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Platform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Platform</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_platform.html</Path>
    <Abstract>CC3OpenGLES11Platform manages trackers that read and remember platform characteristics, capabilities and limits.</Abstract>
    <DeclaredIn>CC3OpenGLES11Platform.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxClipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Platform</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_platform.html</Path>
    <Anchor>a4ed73a9cfd095088d985f0d386574f9c</Anchor>
    <Abstract>Reads the number of clip planes available, through GL parameter GL_MAX_CLIP_PLANES.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxLights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Platform</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_platform.html</Path>
    <Anchor>ae6e475ab4e13fead68a23b6892292305</Anchor>
    <Abstract>Reads the number of lights available, through GL parameter GL_MAX_LIGHTS.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxPaletteMatrices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Platform</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_platform.html</Path>
    <Anchor>a24367d6a1559e28529240ee184db3517</Anchor>
    <Abstract>Reads the number of palette matrices available, through GL parameter GL_MAX_PALETTE_MATRICES_OES.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxTextureUnits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Platform</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_platform.html</Path>
    <Anchor>a0e88367e89f0a7a6d24f8cb20a1d84e5</Anchor>
    <Abstract>Reads the number of texture units available, through GL parameter GL_MAX_TEXTURE_UNITS.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxVertexUnits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Platform</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_platform.html</Path>
    <Anchor>a73bed6b4bdc8bf4de32bd5b97e54fec6</Anchor>
    <Abstract>Reads the number of vertex units available, through GL parameter GL_MAX_VERTEX_UNITS_OES.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11ServerCapabilities</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Abstract>CC3OpenGLES11ServerCapabilities manages trackers that read and remember OpenGL ES 1...</Abstract>
    <DeclaredIn>CC3OpenGLES11Capabilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipPlaneAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>afcf907cbfbac485f5f532d473b31aa2e</Anchor>
    <Abstract>Returns the tracker for the clip plane with the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaTest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>ad0d3e4f3cf2de39f0d95b5b2c7f5b285</Anchor>
    <Abstract>Tracks the alpha testing capability (GL capability name GL_ALPHA_TEST).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>blend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a67d78f754b5605eea56d698094f32d51</Anchor>
    <Abstract>Tracks the blending capability (GL capability name GL_BLEND).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clipPlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>ab8ec04e2129c541e448239fdec02bde0</Anchor>
    <Abstract>Tracks the capability for each clip plane (GL capability name GL_CLIP_PLANEi).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorLogicOp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a8b7a08cf7b075a09bced27d92f025a4e</Anchor>
    <Abstract>Tracks the color logic operation capability (GL capability name GL_COLOR_LOGIC_OP).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorMaterial</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a053054bcdf9b57d17cbfdd8ac2dd3cfb</Anchor>
    <Abstract>Tracks the color material capability (GL capability name GL_COLOR_MATERIAL).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cullFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>afaea13302e36585f0fa640d64ffe5f70</Anchor>
    <Abstract>Tracks the face culling capability (GL capability name GL_CULL_FACE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depthTest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a7d94297a87868b39ecd1b2c81a238289</Anchor>
    <Abstract>Tracks the depth testing capability (GL capability name GL_DEPTH_TEST).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dither</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>af2733c80adc91c63cde137b03bb69a26</Anchor>
    <Abstract>Tracks the dithering capability (GL capability name GL_DITHER).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>aafc079418af55fc32428d3dc6b9ba0d3</Anchor>
    <Abstract>Tracks the fog capability (GL capability name GL_FOG).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lighting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a981b1b1305d1a79dc711440ec0713006</Anchor>
    <Abstract>Tracks the lighting capability (GL capability name GL_LIGHTING).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lineSmooth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>ae58d8797ce39d08732d9373369d82c46</Anchor>
    <Abstract>Tracks the line smoothing capability (GL capability name GL_LINE_SMOOTH).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixPalette</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a33587f3a5147d758d700ce302a38fd75</Anchor>
    <Abstract>Tracks the matrix palette capability (GL capability name GL_MATRIX_PALETTE_OES).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>multisample</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a69375511592ac664df93930a70137fe7</Anchor>
    <Abstract>Tracks the multi-sampling capability (GL capability name GL_MULTISAMPLE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>ac5fe36deea1293add61d74f437901aa2</Anchor>
    <Abstract>Tracks the normalizing capability (GL capability name GL_NORMALIZE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSmooth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a08390d8f529bfab08259dd284f992e7e</Anchor>
    <Abstract>Tracks the point smoothing capability (GL capability name GL_POINT_SMOOTH).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSprites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a35adfe095a1f78ddbcb192e4bd1a7549</Anchor>
    <Abstract>Tracks the point sprite capability (GL capability name GL_POINT_SPRITE_OES).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>polygonOffsetFill</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a8f43469ae35f1af67d69c397c1b0029e</Anchor>
    <Abstract>Tracks the polygon offset fill capability (GL capability name GL_POLYGON_OFFSET_FILL).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rescaleNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a1541b505d9d71b0d992bd908127ff93b</Anchor>
    <Abstract>Tracks the rescale normals capability (GL capability name GL_RESCALE_NORMAL).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampleAlphaToCoverage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a2be04951218c3e0e9167182a386bfa3d</Anchor>
    <Abstract>Tracks the sampling alpha coverage capability (GL capability name GL_SAMPLE_ALPHA_TO_COVERAGE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampleAlphaToOne</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a570c82befa89311fdb0aa2071448e2a3</Anchor>
    <Abstract>Tracks the sampling alpha to one capability (GL capability name GL_SAMPLE_ALPHA_TO_ONE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sampleCoverage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a29aa42b99e5dddc5de405eecfebbc70d</Anchor>
    <Abstract>Tracks the sampling coverage capability (GL capability name GL_SAMPLE_COVERAGE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scissorTest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a44ddc17aae94c2f4dc579589819f0c0e</Anchor>
    <Abstract>Tracks the scissor testing capability (GL capability name GL_SCISSOR_TEST).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stencilTest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11ServerCapabilities</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_server_capabilities.html</Path>
    <Anchor>a485a3f9e85c486da6aa53f23f9b0405b</Anchor>
    <Abstract>Tracks the stencil testing capability (GL capability name GL_STENCIL_TEST).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11State</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Abstract>CC3OpenGLES11State manages trackers that read and remember OpenGL ES 1.1 state and restore that state...</Abstract>
    <DeclaredIn>CC3OpenGLES11State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearBuffers:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a2fd3e147ada460004b70f787d34aa6d1</Anchor>
    <Abstract>Clears the buffers identified by the specified bitmask, which is a bitwise OR combination of one or m...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearColorBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>adaf1970615ad2590534ca9684280f799</Anchor>
    <Abstract>Clears the color buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearDepthBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a55bab36440fb25d2d76553920d95aecf</Anchor>
    <Abstract>Clears the depth buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearStencilBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>af1d3b34b05fb6f29f4e4a67d1893d84f</Anchor>
    <Abstract>Clears the stencil buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readPixelAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>aa7149f2addf353059da3021092d81826</Anchor>
    <Abstract>Returns the color value of the pixel at the specified position in the GL color buffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a5c63a8dce1acdc21f8daa10593976423</Anchor>
    <Abstract>Tracks clear buffer color (GL get name GL_COLOR_CLEAR_VALUE and set function glClearColor).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearDepth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a083ce945f4a3f7650723c602ea38cb42</Anchor>
    <Abstract>Tracks clear buffer color (GL get name GL_DEPTH_CLEAR_VALUE and set function glClearDepthf).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearStencil</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>ae23e36fd33aea3fd94b6290fb3477d10</Anchor>
    <Abstract>Tracks clear buffer color (GL get name GL_STENCIL_CLEAR_VALUE and set function glClearStencil).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>aa0340e8da39bd9532c45a648e8113154</Anchor>
    <Abstract>Tracks drawing color (GL get name GL_CURRENT_COLOR and set function glColor4f and set fixed function ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cullFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a8c9c7193d776b05b4f05f47d468db493</Anchor>
    <Abstract>Tracks face culling (GL get name GL_CULL_FACE_MODE and set function glCullFace).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depthFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>af47fe399be831ddc26cf53d91324e68e</Anchor>
    <Abstract>Tracks depth function (GL get name GL_DEPTH_FUNC and set function glDepthFunc).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>depthMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>ae0c5abdb2bd9c48d12f6a2dc9d2fb55a</Anchor>
    <Abstract>Tracks depth mask (GL get name GL_DEPTH_WRITEMASK and set function glDepthMask).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frontFace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>ad37e0bbae65284c8e717062a9b4a8ceb</Anchor>
    <Abstract>Tracks front face (GL get name GL_FRONT_FACE and set function glFrontFace).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lineWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a7fe5a246da988fd4aa4cb26c8c0f4ef0</Anchor>
    <Abstract>Tracks line width (GL get name GL_LINE_WIDTH and set function glLineWidth).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a30d910ba743e377cd805f1836e9b17e2</Anchor>
    <Abstract>Tracks point size (GL get name GL_POINT_SIZE and set function glPointSize).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSizeAttenuation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a4187c2e5308f9120eb0b2ea7c300201f</Anchor>
    <Abstract>Tracks point distance attenuation (GL get name GL_POINT_DISTANCE_ATTENUATION and set function glPoint...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSizeFadeThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a47fca03def7397c55d3732e6cfde086b</Anchor>
    <Abstract>Tracks point fading threshold (GL get name GL_POINT_FADE_THRESHOLD_SIZE and set function glPointParam...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSizeMaximum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a3485190d1fe5b6964c9730296897093d</Anchor>
    <Abstract>Tracks maximum points size (GL get name GL_POINT_SIZE_MAX and set function glPointParameterf).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSizeMinimum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a3758e1fc7889c7911e6407297db69092</Anchor>
    <Abstract>Tracks minimum points size (GL get name GL_POINT_SIZE_MIN and set function glPointParameterf).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scissor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>ae0c558a4e1dbe0feefd167af11987649</Anchor>
    <Abstract>Tracks viewport (GL get name GL_SCISSOR_BOX and set function glScissor).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shadeModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a9cb157984d2e4c6c84cde1fe8c7cf5b3</Anchor>
    <Abstract>Tracks shade model (GL get name GL_SHADE_MODEL and set function glShadeModel).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11State</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state.html</Path>
    <Anchor>a4047cb6feea72a6155286740aa422517</Anchor>
    <Abstract>Tracks viewport (GL get name GL_VIEWPORT and set function glViewport).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTracker</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Abstract>This is the base class of all OpenGL ES 1.1 state trackers.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Anchor>a814137ad8462cf5af45a28c2e6eea012</Anchor>
    <Abstract>Closes this tracker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Anchor>a96e920cb517d680f2bb0928447048801</Anchor>
    <Abstract>Initializes this instance, attached to the specified parent tracker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyGLChanged</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Anchor>aa4e465032c405544624451887682f465</Anchor>
    <Abstract>Invoked automatically when the value of the specified tracker was set in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>notifyTrackerAdded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Anchor>a98a43bc3c6c8f1c1ac3de780e8653526</Anchor>
    <Abstract>Invoked automatically when a tracker is added to its parent.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Anchor>a93288638c8b8efc38af9976a58277c3e</Anchor>
    <Abstract>Opens this tracker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Anchor>a12055f7b9d8079631d0c7247b24cad4f</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance, attached to the specified parent tracker...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>engine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Anchor>a66b1eccc687d66dc36e1fdbae037d561</Anchor>
    <Abstract>The CC3OpenGLES11Engine at the root of the tracker assembly.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTracker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker.html</Path>
    <Anchor>a0c3a8b5742b669d72ae38eaabdab6c07</Anchor>
    <Abstract>The parent of this tracker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerActiveTexture</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerActiveTexture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_active_texture.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerActiveTexture tracks an enumerated GL state value for identifying the active...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glEnumValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerActiveTexture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_active_texture.html</Path>
    <Anchor>a230cfa463fbacf4c8d3419b32db1cba0</Anchor>
    <Abstract>The GL enumeration value GL_TEXTUREi, where i is determined by the value property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerAlphaFunction</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerAlphaFunction</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_alpha_function.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerAlphaFunction is a type of CC3OpenGLES11StateTrackerComposite that tracks th...</Abstract>
    <DeclaredIn>CC3OpenGLES11Materials.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyFunction:andReference:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerAlphaFunction</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_alpha_function.html</Path>
    <Anchor>af9a8f43b9e6426428656530416903fcc</Anchor>
    <Abstract>Sets the alpha test function and reference values together.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>function</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerAlphaFunction</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_alpha_function.html</Path>
    <Anchor>a7881edb1f9252d100a0e4e1a65d9bba7</Anchor>
    <Abstract>Tracks the alpha test function (GL get name GL_ALPHA_TEST_FUNC)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerAlphaFunction</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_alpha_function.html</Path>
    <Anchor>aabcfc002b6d0f656b44de97159b561ef</Anchor>
    <Abstract>Tracks the alpha test reference value (GL get name GL_ALPHA_TEST_REF)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerArrayBufferBinding</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerArrayBufferBinding</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_array_buffer_binding.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerArrayBufferBinding tracks binding and filling a vertex array.</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadBufferData:ofLength:forUse:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerArrayBufferBinding</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_array_buffer_binding.html</Path>
    <Anchor>a384b36d08be3119a80ea4fefb9aae64d</Anchor>
    <Abstract>Loads data into the currently bound GL buffer, starting at the specified buffer pointer, and extending for the specified length.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerArrayBufferBinding</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_array_buffer_binding.html</Path>
    <Anchor>a3423701009cbf01a143f58d3c79e26d5</Anchor>
    <Abstract>Unbinds all vertex arrays by setting the value property to zero.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateBufferData:startingAt:forLength:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerArrayBufferBinding</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_array_buffer_binding.html</Path>
    <Anchor>a7e3a388d541a806db75816f19567526b</Anchor>
    <Abstract>Updates data in the GL buffer, from data starting at the specified offset in the specified buffer poi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>queryName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerArrayBufferBinding</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_array_buffer_binding.html</Path>
    <Anchor>a516450c0f962a9b9796f6818aa4935a2</Anchor>
    <Abstract>The enumerated name under which the GL engine reads this state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerBoolean</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerBoolean</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_boolean.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks a boolean GL state value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerBoolean</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_boolean.html</Path>
    <Anchor>a6ab6657711f172ed1c71df75ae522b9d</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, and to use the specified gl* functio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerBoolean</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_boolean.html</Path>
    <Anchor>a9b779d476241b46b0ba28f9e1c09d2de</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, to use the specified gl* function to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerBoolean</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_boolean.html</Path>
    <Anchor>a7bf9349ccaf92ab2bc9c9ffe0a1f4c66</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerBoolean</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_boolean.html</Path>
    <Anchor>ad9ed9627825145608c1d2f91eba2a8ba</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerBoolean</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_boolean.html</Path>
    <Anchor>aad970a31e72927543c492851b1cf1f41</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerBoolean</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_boolean.html</Path>
    <Anchor>a16fbc4d03dd2152d0bc1896053319515</Anchor>
    <Abstract>A pointer to the GL function (gl*) used to set this value in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerBoolean</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_boolean.html</Path>
    <Anchor>a6a6b423529addd4d107e2d3145cc0453</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerCapability</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerCapability</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_capability.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerCapability tracks a boolean GL capability, indicating whether the capability...</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerCapability</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_capability.html</Path>
    <Anchor>a7223eef2ccf15fbfd6ffc06909cc3bf0</Anchor>
    <Abstract>Disables the capability.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerCapability</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_capability.html</Path>
    <Anchor>ad2dcf201c424d857e5a10b2c9d855d41</Anchor>
    <Abstract>Enables the capability.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerClientCapability</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerClientCapability</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_client_capability.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerClientCapability is a type of CC3OpenGLES11StateTrackerCapability that track...</Abstract>
    <DeclaredIn>CC3OpenGLES11Capabilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerColor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks a color GL state value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color.html</Path>
    <Anchor>a1135c6282da7c9bfa1065f3c82c5eefb</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, and to use the specified gl* functio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color.html</Path>
    <Anchor>a626bb4ba009e8adc06bfeeec147073f4</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, to use the specified gl* function to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color.html</Path>
    <Anchor>a3d15b23aaf85eb79786133324cb8bb47</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color.html</Path>
    <Anchor>a6a21cc547f3e69bc58dee0e4ab417024</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color.html</Path>
    <Anchor>a57f02d59ddf1c0bbd3db4d531aaa6d53</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color.html</Path>
    <Anchor>a18e1c26b963778e145ba4b2bef3dcc7e</Anchor>
    <Abstract>A pointer to the GL function (gl*) used to set this value in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color.html</Path>
    <Anchor>af6c0038443af37e0491453acf6552e1e</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerColorFixedAndFloat</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerColorFixedAndFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color_fixed_and_float.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks a color GL state value, as either a float or fixed v...</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:andGLSetFunctionFixed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerColorFixedAndFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color_fixed_and_float.html</Path>
    <Anchor>a2c5f5cc29b0dbe3c56686b38ccbfbd07</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, and to use the specified gl* functio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:andGLSetFunctionFixed:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerColorFixedAndFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color_fixed_and_float.html</Path>
    <Anchor>a9e866ae1cb81f0493d323e0597bc69a3</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, to use the specified gl* functions t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLFixedValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerColorFixedAndFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color_fixed_and_float.html</Path>
    <Anchor>a265a006ade0836764c636ac085545bfa</Anchor>
    <Abstract>Template method to set the fixedValue into the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:andGLSetFunctionFixed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerColorFixedAndFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color_fixed_and_float.html</Path>
    <Anchor>a9bf25e31890f6c0fbd9c4811ca849895</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:andGLSetFunctionFixed:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerColorFixedAndFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color_fixed_and_float.html</Path>
    <Anchor>a5d7c2a2e178225ada616cdaec859e9fb</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fixedValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerColorFixedAndFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color_fixed_and_float.html</Path>
    <Anchor>a94c1b879fccd196317fff686cbc6c977</Anchor>
    <Abstract>The current value of the GL state, in fixed bits.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLFunctionFixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerColorFixedAndFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_color_fixed_and_float.html</Path>
    <Anchor>a73780f4755b5931a976c6ef02a547dde</Anchor>
    <Abstract>A pointer to the GL function (gl*) used to set this value in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerComposite</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Abstract>A CC3OpenGLES11StateTracker that tracks a composite value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeTrackers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Anchor>a208d616934e5f5dcbc99dc37b33a4df2</Anchor>
    <Abstract>Initializes the component primitive trackers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultOriginalValueHandling</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Anchor>a7822f2deb7467593d89aa70ac0e04164</Anchor>
    <Abstract>The default technique for handling the GL state value as it was before tracking is opened...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultShouldAlwaysSetGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Anchor>a50779bd6e6ac3420f4f6cdedb5e631db</Anchor>
    <Abstract>Default initial value for the shouldAlwaysSetGL property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValueHandling</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Anchor>a6b6df3dd7f9d64d2fcfabc022ec99c35</Anchor>
    <Abstract>The type of handling to apply to the value of the GL state at the time the open and close method are ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAlwaysSetGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Anchor>a82e6b35fee91d976deec899b775537c0</Anchor>
    <Abstract>Indicates whether the tracker should always call the GL function to set the GL values, even if none of the component values have changed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldRestoreOriginalOnClose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Anchor>abd522643a5e72478313625d21a6c3548</Anchor>
    <Abstract>Returns whether the tracker should restore the original value back to the GL engine when this tracker...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>valueIsKnown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Anchor>a019151fcfb0ae0282905fbbc702ac638</Anchor>
    <Abstract>Indicates whether the current state in the GL engine is known.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>valueIsKnownOnClose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerComposite</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_composite.html</Path>
    <Anchor>af5ee68c2a209bea589a82d00f2b0401b</Anchor>
    <Abstract>Returns the value to set the valueIsKnown property to when closing this tracker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerElementArrayBufferBinding</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerElementArrayBufferBinding</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_element_array_buffer_binding.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerElementArrayBufferBinding tracks binding and filling a vertex element (index...</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerEnumeration</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_enumeration.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks an enumerated GL state value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_enumeration.html</Path>
    <Anchor>a3663fc14accfb1519b93d9e67b5ec821</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, and to use the specified gl* functio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_enumeration.html</Path>
    <Anchor>a6d1ca2175db081ac05731356cbff0a2c</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, to use the specified gl* function to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_enumeration.html</Path>
    <Anchor>a4e415883a9b7cf083ea15d683bc38d7d</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_enumeration.html</Path>
    <Anchor>a501feedb3c235712cb3cdfb48e7b843f</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_enumeration.html</Path>
    <Anchor>a326c75f1c8812a697e29d2c62ba15d41</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_enumeration.html</Path>
    <Anchor>a4a494f5b47e027b6a429acdc560106e9</Anchor>
    <Abstract>A pointer to the GL function (gl*) used to set this value in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_enumeration.html</Path>
    <Anchor>aa8e00a6f58e96e81e589b51581881714</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerFloat</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_float.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks a float GL state value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_float.html</Path>
    <Anchor>ae98dbc83d7bafe7e6a399ab4032334fc</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, and to use the specified gl* functio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_float.html</Path>
    <Anchor>aef0e4b36ae979f6f89dce03de412fd9d</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, to use the specified gl* function to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_float.html</Path>
    <Anchor>afff08156a575a6c4a4543cad0d79184d</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_float.html</Path>
    <Anchor>abab3da5de3b0c61ab83884f63a6d3682</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_float.html</Path>
    <Anchor>a41f0f72d8a0a8c2cc6635ce03d24963d</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_float.html</Path>
    <Anchor>ab8852915bfbb9b629dee6d4e222c7356</Anchor>
    <Abstract>A pointer to the GL function (gl*) used to set this value in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_float.html</Path>
    <Anchor>add4c2d89d319a5c8a45ea54d97a37be8</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerFogColor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerFogColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_fog_color.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerFogColor tracks a color GL state value for fog.</Abstract>
    <DeclaredIn>CC3OpenGLES11Fog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerFogEnumeration</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerFogEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_fog_enumeration.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerFogEnumeration tracks an enumeration GL state value for fog.</Abstract>
    <DeclaredIn>CC3OpenGLES11Fog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerFogFloat</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerFogFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_fog_float.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerFogFloat tracks a float GL state value for fog.</Abstract>
    <DeclaredIn>CC3OpenGLES11Fog.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerHintEnumeration</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerHintEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_hint_enumeration.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerHintEnumeration tracks an enumeration GL state value for a hint...</Abstract>
    <DeclaredIn>CC3OpenGLES11Hints.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useDontCare</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerHintEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_hint_enumeration.html</Path>
    <Anchor>a65581ec53dd0d6cfc06fb7bcc3474045</Anchor>
    <Abstract>Sets the value of the hint to GL_DONT_CARE.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useFastest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerHintEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_hint_enumeration.html</Path>
    <Anchor>ab239df11bbe05bf5c87d2e560bb7dc6f</Anchor>
    <Abstract>Sets the value of the hint to GL_FASTEST.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useNicest</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerHintEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_hint_enumeration.html</Path>
    <Anchor>a14eaed8dd24e0635900583a20abc222e</Anchor>
    <Abstract>Sets the value of the hint to GL_NICEST.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerInteger</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_integer.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks an integer GL state value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_integer.html</Path>
    <Anchor>a85b202fdb5f97aac28da2cd18b75c4db</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, and to use the specified gl* functio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_integer.html</Path>
    <Anchor>a7c48a739b0e253a571a8fca7950ed2cb</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, to use the specified gl* function to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_integer.html</Path>
    <Anchor>a4115cc5ae2cbd0a1e9a2f6518fe26f6f</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_integer.html</Path>
    <Anchor>a5b3e9b9b57827e732f7fd7c8e6e32e3c</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_integer.html</Path>
    <Anchor>a0901b1ae10edc064b8f07ccf84f62d03</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_integer.html</Path>
    <Anchor>aeef978ef62a56b710a8a94a9a2e1ac8f</Anchor>
    <Abstract>A pointer to the GL function (gl*) used to set this value in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_integer.html</Path>
    <Anchor>a5bd329ea8d5b231c5136d063854ee9af</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerLightColor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerLightColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_color.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerLightColor tracks a color GL state value for an individual light...</Abstract>
    <DeclaredIn>CC3OpenGLES11Lighting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerLightColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_color.html</Path>
    <Anchor>adeb4baf9494ebfdaca213917e927f6a8</Anchor>
    <Abstract>Initialize this instance to track the GL state with the specified name for the light with the specifi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerLightColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_color.html</Path>
    <Anchor>ad0c471e443fc5492a37fd07fdcf4ecc9</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to track the GL state with the specified name for ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glLightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerLightColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_color.html</Path>
    <Anchor>a0c526cab67d4ccfc397405f2a0271573</Anchor>
    <Abstract>The GL enumeration value GL_LIGHTi, where i is determined by the value property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerLightColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_color.html</Path>
    <Anchor>a51028fa84a10532d7ac460c7474b27f8</Anchor>
    <Abstract>The index of the light being tracked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerLightFloat</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerLightFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_float.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerLightFloat tracks a float GL state value for an individual light...</Abstract>
    <DeclaredIn>CC3OpenGLES11Lighting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerLightFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_float.html</Path>
    <Anchor>a825ae199d8dd573471b2f63c73ad660f</Anchor>
    <Abstract>Initialize this instance to track the GL state with the specified name for the light with the specifi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerLightFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_float.html</Path>
    <Anchor>ad72eef9c68182de168667a02ea1b8078</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to track the GL state with the specified name for ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glLightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerLightFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_float.html</Path>
    <Anchor>a85dfa1c112f6bb2f0c3287ac270e2c2d</Anchor>
    <Abstract>The GL enumeration value GL_LIGHTi, where i is determined by the value property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerLightFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_float.html</Path>
    <Anchor>a702c79bb2c8d845efcf62923aaf00cf2</Anchor>
    <Abstract>The index of the light being tracked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerLightVector</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerLightVector tracks a 3D vector GL state value for an individual light...</Abstract>
    <DeclaredIn>CC3OpenGLES11Lighting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector.html</Path>
    <Anchor>a7e43be55dde6748d3f82d2bbf8953a0e</Anchor>
    <Abstract>Initialize this instance to track the GL state with the specified name for the light with the specifi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector.html</Path>
    <Anchor>abd626b650bf09568683fa5ac382a849c</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to track the GL state with the specified name for ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glLightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector.html</Path>
    <Anchor>a07035dc939a274d9f3a9b64975201651</Anchor>
    <Abstract>The GL enumeration value GL_LIGHTi, where i is determined by the value property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector.html</Path>
    <Anchor>a935f6cc8d7222b52e81eace180e3d11e</Anchor>
    <Abstract>The index of the light being tracked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerLightVector4</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector4</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector4.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerLightVector4 tracks a 4D vector GL state value for an individual light...</Abstract>
    <DeclaredIn>CC3OpenGLES11Lighting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector4</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector4.html</Path>
    <Anchor>aeb07370dffca910eb57898b5da09ee5e</Anchor>
    <Abstract>Initialize this instance to track the GL state with the specified name for the light with the specifi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andLightIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector4</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector4.html</Path>
    <Anchor>a55e5be0dd669c816807aba8b44f70ef5</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to track the GL state with the specified name for ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glLightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector4</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector4.html</Path>
    <Anchor>ac529d369cba0bc1a642744497a3e3622</Anchor>
    <Abstract>The GL enumeration value GL_LIGHTi, where i is determined by the value property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerLightVector4</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_light_vector4.html</Path>
    <Anchor>a6eaadbb6bc695682c308b7b146398bec</Anchor>
    <Abstract>The index of the light being tracked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerManager</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_manager.html</Path>
    <Abstract>An CC3OpenGLES11StateTracker that manages a number of other trackers.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeTrackers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_manager.html</Path>
    <Anchor>a28f23626db9b51ebddde8b76c8791c08</Anchor>
    <Abstract>Initializes the managed trackers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initMinimalWithParent:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_manager.html</Path>
    <Anchor>a6921f79436d7446156f1d74ab53c776c</Anchor>
    <Abstract>Initializes the instance without invoking the initializeTrackers method.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerMaterialBlend</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerMaterialBlend</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_material_blend.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerMaterialBlend is a type of CC3OpenGLES11StateTrackerComposite that tracks th...</Abstract>
    <DeclaredIn>CC3OpenGLES11Materials.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applySource:andDestination:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerMaterialBlend</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_material_blend.html</Path>
    <Anchor>ad26bbb647677ccb3d4b2061d0421a142</Anchor>
    <Abstract>Sets the source and destination blend values together.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>destinationBlend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerMaterialBlend</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_material_blend.html</Path>
    <Anchor>a88f29dec0e0d45ef0826cfb9681b62dc</Anchor>
    <Abstract>Tracks destination blend (GL get name GL_BLEND_DST)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sourceBlend</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerMaterialBlend</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_material_blend.html</Path>
    <Anchor>a6315877b78228501d950467ae4cea088</Anchor>
    <Abstract>Tracks source blend (GL get name GL_BLEND_SRC)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerMaterialColor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerMaterialColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_material_color.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerMaterialColor tracks a color GL state value for materials.</Abstract>
    <DeclaredIn>CC3OpenGLES11Materials.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerMaterialFloat</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerMaterialFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_material_float.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerMaterialFloat tracks a float GL state value for materials.</Abstract>
    <DeclaredIn>CC3OpenGLES11Materials.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerPlatformInteger</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerPlatformInteger</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_platform_integer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerMaterialFloat tracks a float GL state value for platform limits...</Abstract>
    <DeclaredIn>CC3OpenGLES11Platform.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_pointer.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks a pointer GL state value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_pointer.html</Path>
    <Anchor>a20ea306da501f024cdb8abd32f17be74</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_pointer.html</Path>
    <Anchor>ac9f9c9e78d136393b8225a470b3b0519</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerPointParameterFloat</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerPointParameterFloat</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_point_parameter_float.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerPointParameterFloat tracks a float GL point parameter state value...</Abstract>
    <DeclaredIn>CC3OpenGLES11State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerPointParameterVector</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerPointParameterVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_point_parameter_vector.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerPointParameterVector tracks a 3D vector GL point parameter state value...</Abstract>
    <DeclaredIn>CC3OpenGLES11State.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerPrimitive</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Abstract>A type of CC3OpenGLES11StateTracker that tracks the state of a single primitive GL state value...</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a1f778b7d3989b578ef605d4c89fc5476</Anchor>
    <Abstract>Depending on the value of the originalValueHandling property, this implementation may attempt to rest...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGLValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a4e0c66293428e09b78bdb481336df390</Anchor>
    <Abstract>Template method to get the value from the GL engine and store it as the original value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a47bb3f5ff96ba7e692f7bd509793fbfd</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>ac96627a5890880569a88ddf6f2be4b94</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, and to handle original values as spe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>open</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>ad31431046e669681c268176dd2db1912</Anchor>
    <Abstract>Depending on the value of the originalValueHandling property, this implementation may call the OpenGL...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restoreOriginalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a9349b8e6764339ab661cbc18b6b8d4fe</Anchor>
    <Abstract>Template method that sets the current value of the GL state back to the original value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>ac1ff5317931cef505090903d1a55d231</Anchor>
    <Abstract>Template method to set the value into the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLValueAndNotify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a7dbda0916ff0545567930012c87711d0</Anchor>
    <Abstract>Set the GL value, notify the CC3OpenGLES11Engine, mark the value as known, and log the activity...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultOriginalValueHandling</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a818cbc5bc0f7480ecc9949a1e7897490</Anchor>
    <Abstract>The default technique for handling the GL state value as it was before tracking is opened...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a35f02485b7e26360c8a0252176427158</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a0a475df1783a79c4fbaf0aa6ae0fa8f8</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a96a5e915aadaa41ea4020e4481682935</Anchor>
    <Abstract>The enumerated name under which the GL engine identifies this state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValueHandling</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a455a0b6f21f612430504b2a564d6ea4f</Anchor>
    <Abstract>The type of handling to apply to the value of the GL state at the time the open and close method are ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAlwaysReadOriginal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a305d61d004d97f73f402adf351201e5e</Anchor>
    <Abstract>Returns whether the tracker should read the original value from the GL engine on every frame...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldRestoreOriginalOnClose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a31d9b89ec5fba6c647c229c914eb7b56</Anchor>
    <Abstract>Returns whether the tracker should restore the original value back to the GL engine when this tracker...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>valueIsKnown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a017c6c9e663c857ff30864e55a22466d</Anchor>
    <Abstract>Indicates whether the current state in the GL engine is known.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>valueIsKnownOnClose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerPrimitive</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_primitive.html</Path>
    <Anchor>a1f5c16e942908f03df8e76317c0043ea</Anchor>
    <Abstract>Returns the value to set the valueIsKnown property to when closing this tracker.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerServerCapability</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerServerCapability</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_server_capability.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerServerCapability is a type of CC3OpenGLES11StateTrackerCapability that track...</Abstract>
    <DeclaredIn>CC3OpenGLES11Capabilities.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerTexEnvColor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerTexEnvColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_tex_env_color.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerTexEnvColor tracks a color GL state value for the texture environment...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerTexEnvEnumeration</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerTexEnvEnumeration</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_tex_env_enumeration.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerTexEnvEnumeration tracks an enumerated GL state value for the texture enviro...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerTexEnvPointSpriteCapability</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerTexEnvPointSpriteCapability</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_tex_env_point_sprite_capability.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerTexEnvPointSpriteCapability tracks a boolean GL capability for the point spr...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerTextureBinding</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerTextureBinding</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_texture_binding.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerTextureBinding tracks an integer GL state value for texture binding...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerTextureBinding</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_texture_binding.html</Path>
    <Anchor>aa5d2c87f9c60a253fd81bebb89b419bc</Anchor>
    <Abstract>Unbinds all textures by setting the value property to zero.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerTextureClientCapability</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerTextureClientCapability</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_texture_client_capability.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerTextureClientCapability tracks a boolean GL capability for the point sprite ...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerTextureServerCapability</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerTextureServerCapability</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_texture_server_capability.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerTextureServerCapability tracks a boolean GL capability for the point sprite ...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVector</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vector.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks a 3D vector GL state value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vector.html</Path>
    <Anchor>aaee4626af1a9c1e9712c8875c5ac4fe0</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerVector</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vector.html</Path>
    <Anchor>a2c6d0209425cc771446399c3ec136757</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVector4</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVector4</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vector4.html</Path>
    <Abstract>A CC3OpenGLES11StateTrackerPrimitive that tracks a 4D vector GL state value.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerVector4</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vector4.html</Path>
    <Anchor>a70d6a110f45d4734b3fd5dbad30d430a</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerVector4</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vector4.html</Path>
    <Anchor>a6b416ab6c6488800b28f23cc7d4f73c3</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVertexColorsPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexColorsPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_colors_pointer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerVertexColorsPointer tracks the parameters of the vertex colors pointer...</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVertexLocationsPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexLocationsPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_locations_pointer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerVertexLocationsPointer tracks the parameters of the vertex locations pointer...</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVertexMatrixIndicesPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexMatrixIndicesPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_matrix_indices_pointer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerVertexLocationsPointer tracks the parameters of the vertex matrix indices po...</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVertexNormalsPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexNormalsPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_normals_pointer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerVertexNormalsPointer tracks the parameters of the vertex normals pointer...</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVertexPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerVertexPointer is a type of CC3OpenGLES11StateTrackerComposite that tracks th...</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logSetGLValues:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Anchor>a296d5f5b4cd981ad6650ee957ee4185e</Anchor>
    <Abstract>Template method to log the values set in the GL engine by the setGLValues method.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLValues</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Anchor>a913550c653b696a5069bed465edb4e7a</Anchor>
    <Abstract>Template method that sets the values in the GL engine, using one of the gl*Pointer GL functions...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useElementsAt:withSize:withType:withStride:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Anchor>a58e15a2fbda8a3e6026a3b9e51a5d544</Anchor>
    <Abstract>Sets element pointer, element size, element type and element stride value together.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>useElementsAt:withType:withStride:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Anchor>a73f968b58f362b31aecbe51b01bc2b98</Anchor>
    <Abstract>For vertex pointers that do not use element size, sets element pointer, element type and element stri...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementPointer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Anchor>af23af035c60396ee26067e68dffd98a6</Anchor>
    <Abstract>Tracks the pointer to the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Anchor>a9e9183333a242dbe5fbdc66ab6f03b0c</Anchor>
    <Abstract>Tracks vertex element size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementStride</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Anchor>a629a9a29ff3679e8cccd88ec9aa5ef08</Anchor>
    <Abstract>Tracks vertex element stride.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_pointer.html</Path>
    <Anchor>a727aeabb8c139132759d79bf212d0fa1</Anchor>
    <Abstract>Tracks vertex element type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVertexPointSizesPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexPointSizesPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_point_sizes_pointer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerVertexPointSizesPointer tracks the parameters of the vertex point sizes poin...</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVertexTexCoordsPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexTexCoordsPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_tex_coords_pointer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerVertexTexCoordsPointer tracks the parameters of the vertex texture coordinat...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerVertexWeightsPointer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerVertexWeightsPointer</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_vertex_weights_pointer.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerVertexLocationsPointer tracks the parameters of the vertex weights pointer...</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerViewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerViewport</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_viewport.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerViewport tracks the viewport GL state.</Abstract>
    <DeclaredIn>CC3OpenGLES11StateTracker.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerViewport</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_viewport.html</Path>
    <Anchor>aca7ed87c05abd13620d0a6221486d89e</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, and to use the specified gl* functio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11StateTrackerViewport</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_viewport.html</Path>
    <Anchor>a76ce8f37ca1bf6ec87590ca4eded216a</Anchor>
    <Abstract>Initializes this instance with the specified enumerated GL name, to use the specified gl* function to...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerViewport</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_viewport.html</Path>
    <Anchor>a61e55739280378f6ace830379a594393</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:forState:andGLSetFunction:andOriginalValueHandling:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11StateTrackerViewport</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_viewport.html</Path>
    <Anchor>a74e4ba5fa94df7eb1f64d5e7026b8181</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified enumerated GL name...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>originalValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerViewport</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_viewport.html</Path>
    <Anchor>a8ebeefa3d6b5bbeecd1c2180e6f5d7cb</Anchor>
    <Abstract>The value of the GL state when the open method was invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGLFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerViewport</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_viewport.html</Path>
    <Anchor>ad200db8de62e82b6d6988b656c185214</Anchor>
    <Abstract>A pointer to the GL function (gl*) used to set this value in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>value</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11StateTrackerViewport</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_viewport.html</Path>
    <Anchor>abdd96bd22fc6b0dd854209a478fd0f8b</Anchor>
    <Abstract>The current value of the GL state.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11StateTrackerWorldLightColor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11StateTrackerWorldLightColor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_state_tracker_world_light_color.html</Path>
    <Abstract>CC3OpenGLES11StateTrackerWorldLightColor tracks the color GL state value for the ambient world light...</Abstract>
    <DeclaredIn>CC3OpenGLES11Lighting.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11TextureMatrixStack</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11TextureMatrixStack</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_matrix_stack.html</Path>
    <Abstract>CC3OpenGLES11MatrixStack provides access to several commands that operate on the texture matrix stack...</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11Textures</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11Textures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_textures.html</Path>
    <Abstract>CC3OpenGLES11Textures manages trackers for texture and texture environment state.</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUnitAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11Textures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_textures.html</Path>
    <Anchor>a063373315ca59b80d47dcf868a58efd7</Anchor>
    <Abstract>Returns the tracker for the texture unit with the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minimumTextureUnits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11Textures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_textures.html</Path>
    <Anchor>a28deef7f3b446918e81b1f3a660f9f53</Anchor>
    <Abstract>The minimum number of GL texture unit trackers to create initially.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMinimumTextureUnits:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11Textures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_textures.html</Path>
    <Anchor>a366bc2e23437298ef2bfec3130d6feff</Anchor>
    <Abstract>The minimum number of GL texture unit trackers to create initially.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activeTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Textures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_textures.html</Path>
    <Anchor>a851ebb5081f0cffe431dde52e0a2d493</Anchor>
    <Abstract>Tracks active texture (GL get name GL_ACTIVE_TEXTURE and set function glActiveTexture).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientActiveTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Textures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_textures.html</Path>
    <Anchor>a83c9a5527194c90cb21868d80a821987</Anchor>
    <Abstract>Tracks active client texture (GL get name GL_CLIENT_ACTIVE_TEXTURE and set function glClientActiveTex...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUnitCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Textures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_textures.html</Path>
    <Anchor>a0bd874f76a2525c43f9545a2fc02898f</Anchor>
    <Abstract>Returns the number of active texture units.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUnits</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11Textures</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_textures.html</Path>
    <Anchor>a03a3a32458d4059e3a354f52a7095f13</Anchor>
    <Abstract>Tracks state for each texture unit (GL name GL_TEXTUREi).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11TextureUnit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Abstract>CC3OpenGLES11Textures manages trackers for texture and texture environment state.</Abstract>
    <DeclaredIn>CC3OpenGLES11Textures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a59479b7bba27485ba34cc928a8cce2f3</Anchor>
    <Abstract>Make this texture unit the active texture unit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clientActivate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a6877d8c1334a05731e6d54c6c79b01e9</Anchor>
    <Abstract>Make this texture unit the active client texture unit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithParent:withTextureUnitIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>af2890ef3473775676f083ae7683ec83c</Anchor>
    <Abstract>Initialize this instance to track GL state for the specified texture unit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackerWithParent:withTextureUnitIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a780ac6646de4d7d10ec0223a7d7df842</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to track GL state for the specified texture unit...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaOperand0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a1c67de4621fed72a1d9cd0eaf1e26185</Anchor>
    <Abstract>Tracks alpha operand 0 (GL name GL_OPERAND0_ALPHA).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaOperand1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>afdf10e967469d69304ae2f3290bf155e</Anchor>
    <Abstract>Tracks alpha operand 1 (GL name GL_OPERAND1_ALPHA).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaOperand2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a230bc593037cd6dabe664fc120099e30</Anchor>
    <Abstract>Tracks alpha operand 2 (GL name GL_OPERAND2_ALPHA).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaSource0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a03a001302a9979c61d52b21a9bcc64ad</Anchor>
    <Abstract>Tracks alpha source 0 (GL name GL_SRC0_ALPHA).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaSource1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>ac965a859084c0e8062999399e2b4e456</Anchor>
    <Abstract>Tracks alpha source 1 (GL name GL_SRC1_ALPHA).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alphaSource2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a7cf56be06b8796933a5f0382499105a7</Anchor>
    <Abstract>Tracks alpha source 2 (GL name GL_SRC2_ALPHA).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a4a4bb615bae8b07cdfdceef74130bee1</Anchor>
    <Abstract>Tracks the texture unit color constant (GL name GL_TEXTURE_ENV_COLOR).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combineAlphaFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>ab3336613a41cf82fd636921b32eef4d5</Anchor>
    <Abstract>Tracks texture combine alpha function (GL name GL_COMBINE_ALPHA).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>combineRGBFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>abed6d94474e92cfc7cba1dca268b2751</Anchor>
    <Abstract>Tracks texture combine RGB function (GL name GL_COMBINE_RGB).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glEnumValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a7d6f520e2b2fae152763a6953efec952</Anchor>
    <Abstract>The GL enumeration value for this texture unit in the form GL_TEXTUREi.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixStack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a6d6a4f2dcfca7122b282125ab2611480</Anchor>
    <Abstract>Manages the texture matrix stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSpriteCoordReplace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a7d05a9b0989944c4219496d28dc4ff3f</Anchor>
    <Abstract>Tracks whether point sprite texture environment variable GL_COORD_REPLACE_OES is set on or off...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbOperand0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a5bca87b005e7d51cb8e34160eff6f940</Anchor>
    <Abstract>Tracks RGB operand 0 (GL name GL_OPERAND0_RGB).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbOperand1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a71faef68047785d99113cb1c3ceb913f</Anchor>
    <Abstract>Tracks RGB operand 1 (GL name GL_OPERAND1_RGB).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbOperand2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a01c60525a589d50e82be3f2696d6b75d</Anchor>
    <Abstract>Tracks RGB operand 2 (GL name GL_OPERAND2_RGB).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbSource0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a897f44062410c5ccfe490d0af57b6d34</Anchor>
    <Abstract>Tracks RGB source 0 (GL name GL_SRC0_RGB).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbSource1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a2e6e90152696f9076081ab02b7e125f1</Anchor>
    <Abstract>Tracks RGB source 1 (GL name GL_SRC1_RGB).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbSource2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a5419ac9575d2fda2d0df078a43128d4a</Anchor>
    <Abstract>Tracks RGB source 2 (GL name GL_SRC2_RGB).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texture2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a128cba58323ef92a502ee7266b1108f3</Anchor>
    <Abstract>Tracks the texturing capability (GL capability name GL_TEXTURE_2D).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureBinding</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>a1794abc164fec6531196d841ec296937</Anchor>
    <Abstract>Tracks texture binding (GL get name GL_TEXTURE_BINDING_2D and set function glBindTexture).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureCoordArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>abe5bff1a9d44fa4fca9285bbbbe3ca32</Anchor>
    <Abstract>Tracks the texture coordinate array capability (GL capability name GL_TEXTURE_COORD_ARRAY).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>ad4d4d3670a761384ed0ee4db8a9eecb6</Anchor>
    <Abstract>Tracks the vertex texture coordinates pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureEnvironmentMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_texture_unit.html</Path>
    <Anchor>adb1e82dee0a1b7326b398237f6648bac</Anchor>
    <Abstract>Tracks texture environment mode (GL name GL_TEXTURE_ENV_MODE).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3OpenGLES11VertexArrays</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Abstract>CC3OpenGLES11VertexArrays manages trackers for vertex arrays.</Abstract>
    <DeclaredIn>CC3OpenGLES11VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferBinding:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a18ccd10462e5f8e92991435256e918a2</Anchor>
    <Abstract>Returns the array or index buffer binding tracker, as determined by the specified bufferTarget value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteBuffer:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>acade74c0aa2084cd2d49b1e52ef41c1b</Anchor>
    <Abstract>Deletes the GL buffer with the specifid buffer ID.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawIndicies:ofLength:andType:as:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a2e885a160cf21f4f76ec4da60bf83230</Anchor>
    <Abstract>Draws the vertices indexed by the specified indices, to the specified number of indices, each of the specified GL type, and using the specified draw mode.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawVerticiesAs:startingAt:withLength:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a02d39e11b8e96e7834981bb8308ec286</Anchor>
    <Abstract>Draws vertices bound by the vertex pointers using the specified draw mode, starting at the specified ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>aa57392f9e86950b4401102cdc201d2a6</Anchor>
    <Abstract>Generates and returns a GL buffer ID.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arrayBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a1c1466765a07c54e69aa9403407d2de4</Anchor>
    <Abstract>Tracks vertex array buffer binding.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a40aac328c902a007de8252c46ad33b70</Anchor>
    <Abstract>Tracks the vertex colors pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>aeb667a00619de6f77e85cc97b9c46d6c</Anchor>
    <Abstract>Tracks vertex element array buffer binding.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>locations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a7eb7719658223b7bf3230ee667ef0c9b</Anchor>
    <Abstract>Tracks the vertex locations pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a672c75fd67e9b3c6642ac8b5f1aab950</Anchor>
    <Abstract>Tracks the vertex matrix indices pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a3e53cc338e7b797920a31d5227d73ccf</Anchor>
    <Abstract>Tracks the vertex normals pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSizes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>af9299c1da59f59401966525ccdc03aa8</Anchor>
    <Abstract>Tracks the vertex point sizes pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3OpenGLES11VertexArrays</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_open_g_l_e_s11_vertex_arrays.html</Path>
    <Anchor>a8bb0f73d23e7009a72e8ef3084e13558</Anchor>
    <Abstract>Tracks the vertex weights pointer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ParticleSystemBillboard</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ParticleSystemBillboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_particle_system_billboard.html</Path>
    <Abstract>A CC3Billboard node customized to display and manage a cocos2d 2D CCParticleSystem.</Abstract>
    <DeclaredIn>CC3Billboard.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleSizeAttenuationCoefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ParticleSystemBillboard</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_particle_system_billboard.html</Path>
    <Anchor>a8d784151b9a31aa1dd03012c4ff887bd</Anchor>
    <Abstract>The coefficients of the attenuation function that affects the size of a particle based on its distanc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PerformanceStatistics</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Abstract>Collects statistics about the updating and drawing performance of the 3D world.</Abstract>
    <DeclaredIn>CC3PerformanceStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addDrawingCallsMade:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a8745352d8605ed654d080f2ca34efe33</Anchor>
    <Abstract>Adds the specified number of drawing calls to the drawingCallsMade property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFacesPresented:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ac654d962283d34a71d077eed0ec47562</Anchor>
    <Abstract>Adds the specified number of faces to the facesPresented property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addFrameTime:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ad00aacb41412dbfd086ad4a97c11d964</Anchor>
    <Abstract>Adds the specified single-frame delta-time to the accumulated frame time, and increments the count of...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNodesDrawn:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>aca56ead564989e7607cd7e52fcda4141</Anchor>
    <Abstract>Adds the specified number of nodes to the nodesDrawn property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNodesTransformed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ac46a1f730b4f8cbcc3b1fced3ef259c4</Anchor>
    <Abstract>Adds the specified number of nodes to the nodesTransformed property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNodesUpdated:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ac21890bbafccf89be145c1c10e31b402</Anchor>
    <Abstract>Adds the specified number of nodes to the nodesUpdated property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNodesVisitedForDrawing:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a36478e8480a56b0298dfc690e8b3f471</Anchor>
    <Abstract>Adds the specified number of nodes to the nodesVisitedForDrawing property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSingleCallFacesPresented:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a637a29d8802b994602d9f4db6b947428</Anchor>
    <Abstract>Canvenience method that adds the specified number of faces to the facesPresented property, and increments by one the number of drawing calls made.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addUpdateTime:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a99c60b8762f94c1a3e58d2f63937b80f</Anchor>
    <Abstract>Adds the specified single-update delta-time to the accumulated update time, and increments the count ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a8fa6419dd3b35c11f2226504ec3f2e86</Anchor>
    <Abstract>Returns a detailed descripton of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrementNodesDrawn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>abce7acbaacb189bcad54a758b1498d8d</Anchor>
    <Abstract>Increments the nodesDrawn property by one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrementNodesTransformed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ae4b12367e2b5236b6bd0a0528650e320</Anchor>
    <Abstract>Increments the nodesTransformed property by one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrementNodesUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ad5a99c6aef53441e28009d1cbe2cb9f8</Anchor>
    <Abstract>Increments the nodesUpdated property by one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>incrementNodesVisitedForDrawing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a06c87f3b9d741374d15ebfc9887cd180</Anchor>
    <Abstract>Increments the nodesVisitedForDrawing property by one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a6b23d9ef86d0b4d3b50251bfbbd6e2e1</Anchor>
    <Abstract>Resets all the performance statistics back to zero.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>statistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>aea3765ebb729bd793086387033612336</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accumulatedFrameTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a08bcf4b12cb3b6bf0d81ef628e5f809b</Anchor>
    <Abstract>The total time accumulated for frames since the reset method was last invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>accumulatedUpdateTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a064d0e9da7073b6a64abea60fdde7f39</Anchor>
    <Abstract>The total time accumulated for updates since the reset method was last invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>averageDrawingCallsMadePerFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a51fd44bb672febc4aec083e5dc2ef948</Anchor>
    <Abstract>The average GL drawing calls made per drawing frame, calculated by dividing the drawingCallsMade prop...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>averageFacesPresentedPerFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a49bd903dce68e17828e0ff1df0a81610</Anchor>
    <Abstract>The average number of triangle faces presented to the GL engine per drawing frame, calculated by dividing the facesPresented property by the framesHandled property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>averageNodesDrawnPerFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a3e16a7222630907d36fe5a005420b1ef</Anchor>
    <Abstract>The average nodes drawn per drawing frame, calculated by dividing the nodesDrawn property by the fram...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>averageNodesTransformedPerUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a274066cc77cb9fe7ae1f7858a2e0d626</Anchor>
    <Abstract>The average nodes whose transformMatrix was recalculated per update, calculated by dividing the nodes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>averageNodesUpdatedPerUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a08dba9433fdbdf24b42719125e2b0271</Anchor>
    <Abstract>The average nodes updated per update, calculated by dividing the nodesUpdated property by the updates...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>averageNodesVisitedForDrawingPerFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>aa4c71f63e2e8c3be782afffab3bea3ca</Anchor>
    <Abstract>The average nodes visited per drawing frame, calculated by dividing the nodesVisitedForDrawing proper...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawingCallsMade</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ace86ae405cf6d6c59b44a543451e4047</Anchor>
    <Abstract>The total number of drawing calls that were made to the GL engine (glDrawArrays &amp;amp; glDrawElements) sin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>facesPresented</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a56f2d8518c33a99302faf23cd50396b1</Anchor>
    <Abstract>The total number of triangle faces presented to the GL engine since the reset method was last invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a8c11cb734b1308e918b6018a52431d3c</Anchor>
    <Abstract>The average drawing frame rate, calculated by dividing the framesHandled property by the accumulatedF...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>framesHandled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ae7cee92f313bae5e47b2b14035ef65c3</Anchor>
    <Abstract>The number of frames that have been processed since the reset method was last invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodesDrawn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a2ca6ae5fceceae96840080052e7582e5</Anchor>
    <Abstract>The total number of nodes drawn by the GL engine since the reset method was last invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodesTransformed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a4d7a78b2c68cd0939adffd2eff661cc1</Anchor>
    <Abstract>The total number of nodes whose transformMatrix was recalculated since the reset method was last invo...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodesUpdated</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ab3a8c1523c6193ad30145c30f847be61</Anchor>
    <Abstract>The total number of nodes updated since the reset method was last invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodesVisitedForDrawing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>af889f5270acd4213fbcec9889f21ad00</Anchor>
    <Abstract>The total number of nodes visited for drawing since the reset method was last invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>a6101316f1c4791adc6eb8b8e59055f98</Anchor>
    <Abstract>The average update rate, calculated by dividing the updatesHandled property by the accumulatedUpdateT...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updatesHandled</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatistics</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics.html</Path>
    <Anchor>ac92329536a8abdc87ff9a4d76f12cb19</Anchor>
    <Abstract>The number of updates that have been processed since the reset method was last invoked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PerformanceStatisticsHistogram</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PerformanceStatisticsHistogram</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics_histogram.html</Path>
    <Abstract>Collects statistics about the updating and drawing performance of the 3D world, including a histogram...</Abstract>
    <DeclaredIn>CC3PerformanceStatistics.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRateHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatisticsHistogram</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics_histogram.html</Path>
    <Anchor>a5528b2fc97a9e2bc4be3138ad8afabc6</Anchor>
    <Abstract>Returns a histogram of the value of the frame rate, as calculated on each frame drawing pass...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateRateHistogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PerformanceStatisticsHistogram</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_performance_statistics_histogram.html</Path>
    <Anchor>a516632e0e3b8ca1f6ca845861db836b4</Anchor>
    <Abstract>Returns a histogram of the value of the update rate, as calculated on each update pass...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Plane</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Plane</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_plane.html</Path>
    <Abstract>The coefficients of the equation for a plane in 3D space (ax + by + cz + d = 0).</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Plane</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_plane.html</Path>
    <Anchor>a711b271a534b211cd76e73f3c94c9ba8</Anchor>
    <Abstract>The a coefficient in the planar equation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Plane</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_plane.html</Path>
    <Anchor>ad51811476323b7b592ea98f9a9e8b58c</Anchor>
    <Abstract>The b coefficient in the planar equation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>c</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Plane</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_plane.html</Path>
    <Anchor>a9100e28ae66f3d188fd553fb065d44d0</Anchor>
    <Abstract>The c coefficient in the planar equation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Plane</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_plane.html</Path>
    <Anchor>aca4839c206988bb8cdc57ee55ed07679</Anchor>
    <Abstract>The d coefficient in the planar equation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PlaneNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PlaneNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_plane_node.html</Path>
    <Abstract>CC3PlaneNode is a type of CC3MeshNode that is specialized to display planes and simple rectanglular m...</Abstract>
    <DeclaredIn>CC3MeshNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>plane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PlaneNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_plane_node.html</Path>
    <Anchor>a00f199f5bac06a1a7224c7f5b2984b68</Anchor>
    <Abstract>Returns a CC3Plane structure corresponding to this plane.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODBone</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODBone</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_bone.html</Path>
    <Abstract>A CC3Bone extracted from a POD file.</Abstract>
    <DeclaredIn>CC3PODVertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODCamera</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODCamera</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_camera.html</Path>
    <Abstract>A CC3Camera whose content originates from POD resource data.</Abstract>
    <DeclaredIn>CC3PODCamera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODLight</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODLight</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_light.html</Path>
    <Abstract>A CC3Light whose content originates from POD resource data.</Abstract>
    <DeclaredIn>CC3PODLight.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODMaterial</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODMaterial</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_material.html</Path>
    <Abstract>A CC3Material whose content originates from POD resource data.</Abstract>
    <DeclaredIn>CC3PODMaterial.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materialAtIndex:fromPODResource:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3PODMaterial</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_material.html</Path>
    <Anchor>a55f27020d1f62940b39e036562092b1a</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance from the data of this type at the specified index ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShininessExpansionFactor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3PODMaterial</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_material.html</Path>
    <Anchor>a6f015cd342a95d631938fbc0c07eaad4</Anchor>
    <Abstract>The shininess of a material as specified in a POD file has a very different scale than the shininess ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shininessExpansionFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3PODMaterial</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_material.html</Path>
    <Anchor>a9ac5a3e8b7a1bed27b8a43970d6d03c7</Anchor>
    <Abstract>The shininess of a material as specified in a POD file has a very different scale than the shininess ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_mesh.html</Path>
    <Abstract>A CC3VertexArrayMesh whose content originates from POD resource data.</Abstract>
    <DeclaredIn>CC3PODMesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODMeshNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_mesh_node.html</Path>
    <Abstract>A CC3MeshNode whose content originates from POD resource data.</Abstract>
    <DeclaredIn>CC3PODMeshNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_node.html</Path>
    <Abstract>A CC3Node extracted from a POD file.</Abstract>
    <DeclaredIn>CC3PODNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODNodeAnimation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_node_animation.html</Path>
    <Abstract>POD files can contain information to animate the nodes.</Abstract>
    <DeclaredIn>CC3NodePODExtensions.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromSPODNode:withFrameCount:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_node_animation.html</Path>
    <Anchor>a5061674957ca6706460962780cf5801c</Anchor>
    <Abstract>Initializes this instance to animate nodes using animation data found in the specified SPODNode struc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animationFromSPODNode:withFrameCount:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3PODNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_node_animation.html</Path>
    <Anchor>a8acbd96e6c3c240c594937fe47861285</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to animate nodes using animation data found in the...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sPODNodeDoesContainAnimation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3PODNodeAnimation</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_node_animation.html</Path>
    <Anchor>a60b29e4bd350d7f8ba5367af40421667</Anchor>
    <Abstract>Returns whether the specified SPODNode structure contains animation data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODResource</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Abstract>CC3PODResource is a CC3Resource that wraps a PVR POD data structure loaded from a file...</Abstract>
    <DeclaredIn>CC3PODResource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>build</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a6594d71c3256e9d8556a4bd2eb494c35</Anchor>
    <Abstract>Template method that extracts and builds all components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildCameraAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ace8d30352a052f30ae2fe28f37f811e5</Anchor>
    <Abstract>Builds the cameraIndex&amp;#39;th camera node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildLightAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>aba18c1601b69a945c01dbed81cf295c6</Anchor>
    <Abstract>Builds the lightIndex&amp;#39;th light node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMaterialAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a6f48d14d07d9b3b06d0ea6cffc704c1c</Anchor>
    <Abstract>Builds the materialIndex&amp;#39;th material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMaterials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a9ab705faa4120e8f7992a0445e23d4dd</Anchor>
    <Abstract>Template method that extracts and builds the materials from the underlying data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMeshAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>abb840888888cdb8595383a13e7e03a42</Anchor>
    <Abstract>Builds the meshIndex&amp;#39;th mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMeshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a0154d38f21498209bbcdf1fa81f8e6db</Anchor>
    <Abstract>Template method that extracts and builds the meshes from the underlying data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMeshNodeAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a1c36d31c8598ae525ea97ebead4df8f0</Anchor>
    <Abstract>Builds the meshIndex&amp;#39;th mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildNodeAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a0b298ca5b8afde6c74bb862c879b9e39</Anchor>
    <Abstract>Builds the node at the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a92a34ec902a60bcaaf2e1cb32ddee039</Anchor>
    <Abstract>Template method that extracts and builds the nodes from the underlying data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildSoftBodyNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a2ffd3d0df3309582076f00d015500ca8</Anchor>
    <Abstract>If this resource contains soft-body components such as skinned meshes, the corresponding skinned mesh...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildStructuralNodeAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>afec5fcdf99d0d0f37fc0101ef4d9bd55</Anchor>
    <Abstract>Builds the structural node at the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTextureAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>af0e0e59da7f0e809673c04118e91bb52</Anchor>
    <Abstract>Builds the textureIndex&amp;#39;th texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTextures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a0a2dc0b61268c0054ce4a5d3c1e2df70</Anchor>
    <Abstract>Template method that extracts and builds the textures from the underlying data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cameraAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>aacfaa4718097adb4af925f590030221b</Anchor>
    <Abstract>Returns the cameraIndex&amp;#39;th camera node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cameraNodePODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a3e5d392551891cdaebee2c179bcad82d</Anchor>
    <Abstract>Returns the SPODNode structure of the cameraIndex&amp;#39;th light node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cameraPODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ae8e9dff97c6e8866206501c821035f7e</Anchor>
    <Abstract>Returns cameraIndex&amp;#39;th SPODCamera structure from the data structures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBoneNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ad342271b24298308736781738fb21271</Anchor>
    <Abstract>Returns whether the specified node index represents a bone node that is part of a skeleton node assem...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isNodeIndex:ancestorOfNodeIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a9f440b605f20c1ca3aad2ebb98e09b3a</Anchor>
    <Abstract>Returns whether the specified node index is an ancestor of the specified child node index...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>afb58ce459834baeb7ff0e25fccb8a8b2</Anchor>
    <Abstract>Returns the lightIndex&amp;#39;th light node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightNodePODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a12af6ec16996c83e2b814921be36856f</Anchor>
    <Abstract>Returns the SPODNode structure of the lightIndex&amp;#39;th light node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightPODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a997cb75a3c6a5234717aab70073b7b0c</Anchor>
    <Abstract>Returns lightIndex&amp;#39;th SPODLight structure from the data structures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materialAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a262bedf888c657bc50acb2ac114f9c5e</Anchor>
    <Abstract>Returns the materialIndex&amp;#39;th material.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materialNamed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a25b02fbefa756a136e718f4933933c5f</Anchor>
    <Abstract>Returns the material with the specified name from the materials array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materialPODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a409c8b7ddebd8c470852453a72457ff7</Anchor>
    <Abstract>Returns materialIndex&amp;#39;th SPODMaterial structure from the data structures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ab368dec201839f18ba37242fbf7f586c</Anchor>
    <Abstract>Returns the meshIndex&amp;#39;th mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshModelAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a6041812074441cb4f6467a7eacfe81a4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshNodeAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a3a1e43fb66f670a60e1aeca9e0312b6c</Anchor>
    <Abstract>Returns the meshIndex&amp;#39;th mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshNodePODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a5b0290188da94b1f8071425cb5084207</Anchor>
    <Abstract>Returns the SPODNode structure of the meshIndex&amp;#39;th mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshPODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a9ef1070490a5761d1e35450d567a5818</Anchor>
    <Abstract>Returns meshIndex&amp;#39;th SPODMesh structure from the data structures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ad9ef313dc23b6a9c96282391226c78c4</Anchor>
    <Abstract>Returns the node at the specified index in the allNodes array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeNamed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a4de44b65b7353ccc36151a7e7723464d</Anchor>
    <Abstract>Returns the node with the specified name from the allNodes array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodePODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>aff20795f92ed877374ac216ccccffad1</Anchor>
    <Abstract>Returns the underlying SPODNode data structure from the POD file, for the SPODNode at the specified i...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ad79d94c28e357abee54ff44956d0320d</Anchor>
    <Abstract>Returns the textureIndex&amp;#39;th texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texturePODStructAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a545781973fd6274adfd32939fef98eb4</Anchor>
    <Abstract>Returns textureIndex&amp;#39;th SPODTexture structure from the data structures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ab161fe400b0c4d6e9d3e3236fb1b20e9</Anchor>
    <Abstract>A collection of all of the nodes extracted from the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ambientLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>abee38c81784b18059254d8c0e80288c9</Anchor>
    <Abstract>The global ambient light of the scene in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animationFrameCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>abe5ce4f01d90afc0fe7886d94676126b</Anchor>
    <Abstract>The number of frames of animation in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backgroundColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ade20faaa33ed066d0122002240d580b9</Anchor>
    <Abstract>The background color of the scene in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cameraCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ae91a506579544e333de41604cde4b500</Anchor>
    <Abstract>The total number of cameras in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a9bba8995e0939fe68898f90bd418041d</Anchor>
    <Abstract>The total number of lights in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materialCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a27293f9b1af472eb0071ff73968c7619</Anchor>
    <Abstract>The number of materials in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>materials</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a4428b2350f011c0e944a7f172369a6a2</Anchor>
    <Abstract>A collection of the CC3Materials extracted from the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ace078bba4aa920e4cb2bca2077430154</Anchor>
    <Abstract>The total number of meshes in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ad226322d741fe73bd0eb72d335835bd1</Anchor>
    <Abstract>A collection of the CC3Meshs extracted from the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshNodeCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ac0e14b44a3268ae4d84b22f663d94702</Anchor>
    <Abstract>The total number of mesh nodes in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a9ba7fe9d0d01ba83bb5f90fe114d11cb</Anchor>
    <Abstract>The total number of nodes in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pvrtModel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>a2547abb1aa69c36a1982aa47c9d12d34</Anchor>
    <Abstract>The underlying C++ CPVRTModelPOD class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>abc4a655d319e065ec29cdbd8bf93e195</Anchor>
    <Abstract>The number of different textures in the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>af9576a121ee86b826f068b0317356f5b</Anchor>
    <Abstract>An set of texture parameters used to optimize the display of textures in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textures</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODResource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource.html</Path>
    <Anchor>ae12e68d30b4f8dc2c720d8c784cab2be</Anchor>
    <Abstract>A collection of the CC3Textures extracted from the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODResourceNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_resource_node.html</Path>
    <Abstract>A CC3ResourceNode that that wraps a CC3PODResource PVR POD resource.</Abstract>
    <DeclaredIn>CC3PODResourceNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODSkinMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODSkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_skin_mesh.html</Path>
    <Abstract>A CC3SkinMesh extracted from a POD file.</Abstract>
    <DeclaredIn>CC3PODVertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODSkinMeshNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODSkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_skin_mesh_node.html</Path>
    <Abstract>A CC3SkinMeshNode extracted from a POD file.</Abstract>
    <DeclaredIn>CC3PODVertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PODSkinSection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PODSkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_skin_section.html</Path>
    <Abstract>A CC3SkinSection extracted from a POD file.</Abstract>
    <DeclaredIn>CC3PODVertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initAtIndex:fromSPODMesh:forNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODSkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_skin_section.html</Path>
    <Anchor>ab499803899e9462f4d095d930fbc1da4</Anchor>
    <Abstract>Initializes an instance from the specified POD SPODMesh structure, and that will be used by the speci...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linkToPODNodes:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PODSkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_skin_section.html</Path>
    <Anchor>af58a2159e9e954c1552a042d316fea25</Anchor>
    <Abstract>Create links to the nodes in the specified array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boneBatchAtIndex:fromSPODMesh:forNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3PODSkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_skin_section.html</Path>
    <Anchor>aab112610ddc67af6129412b49da82ca4</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance from the specified POD SPODMesh structure...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boneCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODSkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_skin_section.html</Path>
    <Anchor>af7a122cc0dfa0464f38459d58723ec35</Anchor>
    <Abstract>Indicates the number of bone indices contained in the boneNodeIndices property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boneNodeIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PODSkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_p_o_d_skin_section.html</Path>
    <Anchor>a1a21e0366223949217c7651a2c2d8957</Anchor>
    <Abstract>An array of indices to bone nodes extracted from the POD file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PointParticle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Abstract>CC3PointParticle is an abstract class that represents a single particle emitted by a CC3PointParticle...</Abstract>
    <DeclaredIn>CC3PointParticles.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>aa02fd14152b0ceb64b42eeead9f63b86</Anchor>
    <Abstract>Returns a string containing a more complete description of this particle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromEmitter:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a13afdfd71c2c46e520a4953b21752d9c</Anchor>
    <Abstract>Initializes this instance for the specified emitter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeParticle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a356a7229c36dea7af2aa755c64d5dfc2</Anchor>
    <Abstract>This template callback method is invoked automatically when this particle is emitted.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a4a81caf83f33eae9b6a99c238a684b67</Anchor>
    <Abstract>This template callback method is invoked automatically whenever the emitter is updated during a sched...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleFromEmitter:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>ac5cbff3381587068e4173fa2a17a77eb</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance for the specified emitter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color4B</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a63cae8263e4df41b653dc647b44fc540</Anchor>
    <Abstract>If this particle has individual color content, (which can be checked with the hasColor property)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color4F</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>ab9e6419028003f623c55c97c2f0a1f06</Anchor>
    <Abstract>If this particle has individual color content, (which can be checked with the hasColor property)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a4137c1253b633cab376b38f56f268406</Anchor>
    <Abstract>The emitter that emitted this particle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a2fa78fcdb277c48608f7941bb18631f6</Anchor>
    <Abstract>Indicates whether this particle has individual color content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>ac903e624819789e89ae40d5f06bcf514</Anchor>
    <Abstract>Indicates whether this particle has vertex normal content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>ad8b3061fdea0be4d6b64570d29c82b44</Anchor>
    <Abstract>Indicates whether this particle has individual size content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a0194ffc03a26f589cb587cb8e611454d</Anchor>
    <Abstract>The index of this particle within the collection of particles managed by the emitter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAlive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a35087f8093d682c1d06ae1f5be82628d</Anchor>
    <Abstract>Indicates whether this particle is alive or not.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>location</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a3990eb4ba8baab24d1b2ca1248eb1637</Anchor>
    <Abstract>The location of this particle in the local coordinate system of the emitter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a9ccdd8501e63dc74a67b0452eb0061cb</Anchor>
    <Abstract>If this particle has vertex normal content, (which can be checked with the hasNormal property)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>size</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle.html</Path>
    <Anchor>a5846d4fa614ad640cdce999ecba7169d</Anchor>
    <Abstract>If this particle has individual size content, (which can be checked with the hasSize property)...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PointParticleEmitter</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Abstract>A CC3MeshNode that emits 3D point particles.</Abstract>
    <DeclaredIn>CC3PointParticles.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexPointSizes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a42ea51c0f10e51a29b23c2f9b999024a</Anchor>
    <Abstract>Convenience method to cause the vertex point size data to be skipped when createGLBuffers is invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emitParticle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>ada104fa3d021a89d7abffcf39ba4707b</Anchor>
    <Abstract>Emits a particle, using the newParticle method, and initializes it.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeParticle:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a338de77ea16cad1b4f4ad7367633c5ce</Anchor>
    <Abstract>Template method that initializes the particle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>ada3f720d1f73957d898d9fb552ab91ea</Anchor>
    <Abstract>Returns the class of particle that is usable by this emitter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleSizeAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a7042bd13a99e4306764dfc61846bb67a</Anchor>
    <Abstract>Returns the particle size element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pause</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a5a88c02ffb182711e0b646c9d16c0050</Anchor>
    <Abstract>Ceases the emission of particles by setting the isEmitting property to NO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>afbe06be477058888df012897ff373bd8</Anchor>
    <Abstract>Begins, or resumes, the emission of particles by setting the isEmitting property to YES...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateForMaxParticles:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a250d4778f0dd70d0406b57e7898c0d00</Anchor>
    <Abstract>Prepares this emitter to manage the specified maximum number of simultaneous particles, each to be instantiated from the class returned by the particleClass method, and containing only the mandatory particle location drawable content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateForMaxParticles:containing:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>ad64029271feb5ef5d8f35ad6a0006462</Anchor>
    <Abstract>Prepares this emitter to manage the specified maximum number of simultaneous particles, each to be instantiated from the class returned by the particleClass method, and containing the specified drawable content in each particle, in addition to the mandatory particle location content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateForMaxParticles:ofType:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a3eac24110f8c1869ae18e7932245250d</Anchor>
    <Abstract>Prepares this emitter to manage the specified maximum number of simultaneous particles, each to be instantiated from the specified class, and containing only the mandatory particle location drawable content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateForMaxParticles:ofType:containing:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a23364537ecdad0a7f55b14bf463fe766</Anchor>
    <Abstract>Prepares this emitter to manage the specified maximum number of simultaneous particles, each to be instantiated from the specified class, and containing the specified drawable content in each particle, in addition to the mandatory particle location content.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexPointSizes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>abb9ec8bbdc7a40985565bb1dadb201a7</Anchor>
    <Abstract>Convenience method to cause the vertex point size data to be retained in application memory when rele...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParticleSize:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>aa37fe8fe898c05d8cf44223a685cb381</Anchor>
    <Abstract>Sets the particle size element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a9712038dfe3527cb2d8e3e57ba16a20b</Anchor>
    <Abstract>Ceases the emission of particles by setting the isEmitting property to NO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateParticleSizesGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a4fb6508b314eb48e88529a09d7b53365</Anchor>
    <Abstract>Updates the GL engine buffer with the particle size data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elapsedTime</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a137a3310525a56a8971c2981e21799a6</Anchor>
    <Abstract>For emitters with a finite emissionDuration, indicates the length of time that this emitter has been ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emissionDuration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a054cbdfa4eb587be1f371ce8ba0f0a1b</Anchor>
    <Abstract>Indicates the length of time that the emitter will emit particles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emissionInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>aec8e1fdb0981cc21e0dcaef41130eb03</Anchor>
    <Abstract>The interval between each emission of a particle, expressed in seconds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>emissionRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a9a59b4f66d70ebd3657d3e62848d4cb7</Anchor>
    <Abstract>The rate that particles will be emitted, expressed in particles per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isActive</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>afaddd85c3dab13597d045b2b4017990a</Anchor>
    <Abstract>Indicates whether this emitter is active.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isEmitting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>acbb46f18f0c2788b20bda2f715109ada</Anchor>
    <Abstract>Indicates whether the emitter is currently emitting particles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFinished</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a51622d5e4eec07a42304f6a1870ea610</Anchor>
    <Abstract>Indicates whether particle emission has ceased and all particles have lived out their lives...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFull</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>aed759b0b275d8e6f247d6f152e928e61</Anchor>
    <Abstract>Returns whether the maximum number of particles has been reached.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxParticles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a78bdd37ec092adf16d828c3797b263ad</Anchor>
    <Abstract>The maximum number of particles that will be alive at any one time in the particle system managed by ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a85816caf390b37751deaf059e7454a5c</Anchor>
    <Abstract>The customized subclass of CC3PointParticle used to instantiate new particles that are emitted by thi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleContentTypes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a81ab56ee34c5382736b379e51064a479</Anchor>
    <Abstract>The map of additional types of vertex content, in addtion to the mandatory vertex location content...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a4680550a122959c165b0f14063cd1a0b</Anchor>
    <Abstract>The number of particles that are currently alive and being displayed by this emitter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>ae41d7261e24a8dc4e262ca20ba23a540</Anchor>
    <Abstract>The CC3Mesh used by this node, cast as a CC3PointParticleMesh, for convenience in accessing the addit...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a2cf9e00aa8d026851fa2db663f5862bc</Anchor>
    <Abstract>The array of particles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a0abab9370c3aeae50b71574f816d2b44</Anchor>
    <Abstract>If the kCC3PointParticleContentSize component was not specified in the populateForMaxParticles:...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleSizeAttenuationCoefficients</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a59498a12883ea05195a688a36aad1a97</Anchor>
    <Abstract>The coefficients of the attenuation function that affects the size of a particle based on its distanc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleSizeMaximum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a09be9c460f38d64f8013d3bafff56a3c</Anchor>
    <Abstract>The maxiumum size for point particles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleSizeMinimum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a5801f18cdfb1517d4c514623ab8b9346</Anchor>
    <Abstract>The miniumum size for point particles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldNormalizeParticleSizesToDevice</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>af7c664a560b2791ade34a44fe26f41ee</Anchor>
    <Abstract>Indicates whether the particle sizes should be adjusted so that particles appear to be a consistent s...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldRemoveOnFinish</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a50c6cbfc9e94295bf7bff6db629b229b</Anchor>
    <Abstract>Indicates that this emitter should automatically be removed from its parent, and from the 3D world wh...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldSmoothPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>a0d53b25af3632108f7f5f8b98b96977b</Anchor>
    <Abstract>Indicates whether points should be smoothed (antialiased).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unityScaleDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_emitter.html</Path>
    <Anchor>ae3a1a4eb49f322aeb2bd7f16ee1f1de0</Anchor>
    <Abstract>The distance from the camera, in 3D space, at which the particle will be displayed at unity scale (it...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PointParticleHoseEmitter</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_hose_emitter.html</Path>
    <Abstract>CC3PointParticleHoseEmitter emits CC3UniformMotionParticle particles in a stream, as if from the nozz...</Abstract>
    <DeclaredIn>CC3PointParticleSamples.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispersionAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_hose_emitter.html</Path>
    <Anchor>aa7768c0216bf478e78523a4381ef7bee</Anchor>
    <Abstract>Indicates the angle of dispersion of the spray from the nozzle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxParticleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_hose_emitter.html</Path>
    <Anchor>a05fdaca31f27b66bfe0c85cb0f11611c</Anchor>
    <Abstract>Indicates the upper bound of the range from which the speed of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minParticleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_hose_emitter.html</Path>
    <Anchor>ae99e171da4e5d90178b4f69f821126d1</Anchor>
    <Abstract>Indicates the lower bound of the range from which the speed of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nozzle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_hose_emitter.html</Path>
    <Anchor>a694363233186445fdc2e6153e220daed</Anchor>
    <Abstract>The nozzle of the emitter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nozzleMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_hose_emitter.html</Path>
    <Anchor>aa08f8c83efd069d3ca36019448abc450</Anchor>
    <Abstract>The matrix used to transform the initial location and velocity (combining direction and speed) of eac...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldPrecalculateNozzleTangents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_hose_emitter.html</Path>
    <Anchor>af290d50ddd803969e70f992cf8d1c2a4</Anchor>
    <Abstract>Indicates whether the emitter should precalculate tangent values for the dispersion angles...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3PointParticleMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Abstract>A mesh whose vertices are used to display point particles.</Abstract>
    <DeclaredIn>CC3PointParticles.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexPointSizes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>a2c0764777f1ddbc4b2a097c31a317403</Anchor>
    <Abstract>Convenience method to cause the vertex point size data to be skipped when createGLBuffers is invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleSizeAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>a9c5bc0e5b8f3ff9e65ff88f5ec1f082f</Anchor>
    <Abstract>Returns the particle size element at the specified index from the vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>populateForMaxParticles:containing:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>ae9cdc0ffe84ca28424b0318e8dc42442</Anchor>
    <Abstract>Configures this instance to manage the specified maximum number of simultaneous particles.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexPointSizes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>a274e1e077869a051e373dfb14c8b5bde</Anchor>
    <Abstract>Convenience method to cause the vertex point size data to be retained in application memory when rele...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParticleSize:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>a07395f78a3c56242e0004dda9d24d863</Anchor>
    <Abstract>Sets the particle size element at the specified index in the vertex data to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateParticleSizesGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>a1fc620f8e02ce76ad2afbebdcdf80a47</Anchor>
    <Abstract>Updates the GL engine buffer with the particle size data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPointSizes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>a559b05342045c9b3ffa7daad5e4d4c0b</Anchor>
    <Abstract>Indicates whether this mesh contains data for vertex point sizes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>particleCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>a5f62a8424bfb08974ac75fc36f66208c</Anchor>
    <Abstract>Indicates the number of particles that are alive and being displayed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexPointSizes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3PointParticleMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_point_particle_mesh.html</Path>
    <Anchor>aa5feb4877588d092fbb5ddc69b7b08d1</Anchor>
    <Abstract>The vertex array instance managing a particle size datum for each particle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Ray</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Ray</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_ray.html</Path>
    <Abstract>Defines a ray or line in 3D space, by specifying a starting location and direction.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>direction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Ray</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_ray.html</Path>
    <Anchor>aa348d8257db1c508528276efba57ccea</Anchor>
    <Abstract>The direction in which the ray points.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Ray</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_ray.html</Path>
    <Anchor>a867a724bdf0dc415270b3d544a28586f</Anchor>
    <Abstract>The location where the ray starts.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Resource</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Abstract>CC3Resource is a wrapper class around a resource structure loaded from a data file containing 3D reso...</Abstract>
    <DeclaredIn>CC3Resource.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>ad4cec906461d5cdc6a44dc84ff7d4874</Anchor>
    <Abstract>Initializes this instance and populates the internal data structures from the file at the specified p...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>a5d9261b0b3350a34773f5cefb54e6ca9</Anchor>
    <Abstract>Initializes this instance and populates the internal data structures from the file at the specified r...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>ad95d1d8bda0767096b67209976c8a68c</Anchor>
    <Abstract>This template method is the primary method for loading this resource.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>a527ab2b0c55208b1a1a8a8f9b94cbc8b</Anchor>
    <Abstract>Populates the internal data structures from the file at the specified resource path, extracts the nodes from the data, and returns whether the loading was successful.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>a7f2921ee35a81ee22992dfb0598d26c2</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance, without loading a file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resourceFromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>aa5038095dfa004a6eb9fcfe5ed9ee1dd</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance, and populates the internal data structures from t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resourceFromResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>ab275838ae1eafe4ce38748122b9ae03a</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance, populates the internal data structures from the f...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>directory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>a50146079bc6b00f92529c38be40aa3f9</Anchor>
    <Abstract>The directory where additional resources (typically textures) can be found.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>a9c2afe24672767f01990416759e5c24f</Anchor>
    <Abstract>A collection of the root nodes of the node assembly extracted from the file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>wasLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Resource</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource.html</Path>
    <Anchor>ad83cf7c9585b1a6244291cb384d77acc</Anchor>
    <Abstract>Indicates whether the resource has been successfully loaded.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ResourceNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Abstract>A CC3ResourceNode is a CC3Node that that wraps an instance of a subclass of CC3Resource in the resour...</Abstract>
    <DeclaredIn>CC3ResourceNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>a141fc56df462e00669b5a31c5d892011</Anchor>
    <Abstract>Initializes this instance, loads the file at the specified path, which must be an absolute path...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>aa4a208b53c5dffb91a6ed91d9e5cc314</Anchor>
    <Abstract>Initializes this instance, loads the file at the specified resource path into an instance of the subc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithName:fromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>a3b4de5c7e4171c2ecf1539383abbd924</Anchor>
    <Abstract>Initializes this instance, loads the file at the specified path, which must be an absolute path...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithName:fromResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>a109275508387ea67114059f838ad58cf</Anchor>
    <Abstract>Initializes this instance, loads the file at the specified resource path into an instance of the subc...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>aa34ea9dbad39961b736174a4c9e161e4</Anchor>
    <Abstract>Loads the file at the specified path, which must be an absolute path, into an instance of the subclas...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>a34cae2af276c63d3f7728fee22f05f59</Anchor>
    <Abstract>Loads the file at the specified resource path into an instance of the subclass of CC3Resource specifi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resourceClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>a6eb5507f9c18ff727678b5fc9637a34a</Anchor>
    <Abstract>Returns the class of the CC3Resource instance used to load 3D data files.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeFromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>acd2be67370262d53ff78ad3613eaeac9</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance, loads the file at the specified path...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeFromResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>a776ff66194155c110c06673caaa1bde5</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance, loads the file at the specified resource path int...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithName:fromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>a6f6d42335c3916fb989158b0686cd0b9</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance, loads the file at the specified path...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeWithName:fromResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>a7fa68327bdb841323c7a10d9172af0b6</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance, loads the file at the specified resource path int...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ResourceNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_resource_node.html</Path>
    <Anchor>ab78532390d95972ab5647e990ebdc122</Anchor>
    <Abstract>The underlying CC3Resource instance containing the 3D nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RotateBy</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3RotateBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_by.html</Path>
    <Abstract>CC3RotateBy is a CCActionInterval that rotates a target CC3Node by a specific rotation amount...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:rotateBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3RotateBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_by.html</Path>
    <Anchor>a9f97617c909a38b8447340d8d5390545</Anchor>
    <Abstract>Initializes this instance to rotate the target node by the specified rotation amount, within the specified time duration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:rotateBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3RotateBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_by.html</Path>
    <Anchor>a10d2b0f3081cab3e43b6f2d892d42952</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to rotate the target node by the specified rotatio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RotateByAngle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3RotateByAngle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_by_angle.html</Path>
    <Abstract>CC3RotateByAngle is a CCActionInterval that rotates a target CC3Node by a specific amount...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:rotateByAngle:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3RotateByAngle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_by_angle.html</Path>
    <Anchor>ab580deebf7dffbf716d3472ea715f79a</Anchor>
    <Abstract>Initializes this instance to rotate the target node by the specified angle, within the specified time...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:rotateByAngle:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3RotateByAngle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_by_angle.html</Path>
    <Anchor>aff9719e1c890de3b0e6f62d8f96a477b</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to rotate the target node by the specified angle...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RotateTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3RotateTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to.html</Path>
    <Abstract>CC3RotateTo is a CCActionInterval that rotates a target CC3Node to a specific orientation.</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:rotateTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3RotateTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to.html</Path>
    <Anchor>aebae9188aea59b07e17ecc0d3fd5dd94</Anchor>
    <Abstract>Initializes this instance to move the target node to the specified rotation, within the specified tim...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:rotateTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3RotateTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to.html</Path>
    <Anchor>ae3bfb985b75c60f4a8ac3a53fb7f2aa4</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to rotate the target node to the specified rotatio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RotateToAngle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3RotateToAngle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_angle.html</Path>
    <Abstract>CC3RotateToAngle is a CCActionInterval that rotates a target CC3Node to a specific rotationAngle...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:rotateToAngle:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3RotateToAngle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_angle.html</Path>
    <Anchor>a4b3f2f67da59b58cc3abf72dbe420b84</Anchor>
    <Abstract>Initializes this instance to move the target node to the specified rotation angle, within the specified time duration.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:rotateToAngle:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3RotateToAngle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_angle.html</Path>
    <Anchor>a3f0600d61247b829df4ecbc03dfec62e</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to rotate the target node to the specified rotatio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RotateToLookAt</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3RotateToLookAt</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_look_at.html</Path>
    <Abstract>CC3RotateToLookAt is a CCActionInterval that rotates a target CC3Node to look at a specific location...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:targetLocation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3RotateToLookAt</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_look_at.html</Path>
    <Anchor>ad8c1bd113e1ad315543c4dbee8d4aefc</Anchor>
    <Abstract>Initializes this instance to rotate the target node to look at the specified location.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:targetLocation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3RotateToLookAt</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_look_at.html</Path>
    <Anchor>ab981374f6362a3a3a504be45fc7c3575</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to rotate the target node to look at the specified...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3RotateToLookTowards</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3RotateToLookTowards</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_look_towards.html</Path>
    <Abstract>CC3RotateToLookTowards is a CCActionInterval that rotates a target CC3Node to look towards a specific...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:forwardDirection:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3RotateToLookTowards</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_look_towards.html</Path>
    <Anchor>a05c78af74618880e6be3897958ee248f</Anchor>
    <Abstract>Initializes this instance to rotate the target node to look towards the specified dirction...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:forwardDirection:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3RotateToLookTowards</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotate_to_look_towards.html</Path>
    <Anchor>a1ed0994097227f2f843896d6466be8a7</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to rotate the target node to look towards the spec...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Rotator</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Abstract>CC3otator encapsulates the various mechanisms of rotating a node, and converts between them...</Abstract>
    <DeclaredIn>CC3Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyRotationTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a73ecfa06fae120d85ab6b4f26197b875</Anchor>
    <Abstract>Applies the rotationMatrix to the specified transform matrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a3e615fa4081009bb3c353777ca3c09f4</Anchor>
    <Abstract>Initializes this instance with an identity rotationMatrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initOnRotationMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a8b22a260d2a292212403210ba0c1c014</Anchor>
    <Abstract>Initializes this instance to use the specified matrix as the rotationMatrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a5281ec733920cec4f92045cb5f0bebb0</Anchor>
    <Abstract>Rotates this rotator from its current state by the specified Euler angles in degrees.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateByAngle:aroundAxis:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a27135749d6e67acd3ad21bfe8507ac94</Anchor>
    <Abstract>Rotates this rotator from its current state by rotating around the specified axis by the specified an...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateByQuaternion:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>ae85c0470233f81cc075324d9ea292235</Anchor>
    <Abstract>Rotates this rotator from its current state by the specified quaternion.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>aef01066b851871a9d2a54bbaf7efdd67</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with an identity rotationMatrix.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotatorOnRotationMatrix:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a06ed52fed2979b71221ac0044fec53a3</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to use the specified matrix as the rotationMatrix...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quaternion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a59ee75fefeef37c38cd56307794350c5</Anchor>
    <Abstract>The rotation of the node in 3D space, relative to the parent of this node, expressed as a quaternion...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a05453e1e8466e2e6885cc7f46a892639</Anchor>
    <Abstract>The rotational orientation of the node in 3D space, relative to the parent of the node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotationAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a41d60abb148323e8a56998561ee576b7</Anchor>
    <Abstract>The angular rotation around the axis specified in the rotationAxis property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotationAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>afacfef1ba8fea05c02d6fb59fa64f437</Anchor>
    <Abstract>The axis of rotation of the node in 3D space, relative to the parent of this node, expressed as a directional vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotationMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Rotator</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_rotator.html</Path>
    <Anchor>a45cfe3740ce774b0968e457054be0cd5</Anchor>
    <Abstract>The rotation matrix derived from the rotation or quaternion properties.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ScaleBy</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ScaleBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_scale_by.html</Path>
    <Abstract>CC3ScaleBy is a CCActionInterval that scales a target CC3Node by a specific scale factor...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:scaleBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ScaleBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_scale_by.html</Path>
    <Anchor>afdc3b54f7c4f7fc77de90844d0aa28d6</Anchor>
    <Abstract>Initializes this instance to scale the target node by the specified scale factor, within the specifie...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:scaleBy:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ScaleBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_scale_by.html</Path>
    <Anchor>a3c91690d140432a703b72b961d008560</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to scale the target node by the specified scale fa...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ScaleTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ScaleTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_scale_to.html</Path>
    <Abstract>CC3ScaleTo is a CCActionInterval that scales a target CC3Node to a specific scale.</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:scaleTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ScaleTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_scale_to.html</Path>
    <Anchor>ad4c0fc41bc58d9929f61688d0e1834b7</Anchor>
    <Abstract>Initializes this instance to scale the target node to the specified scale, within the specified time ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:scaleTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ScaleTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_scale_to.html</Path>
    <Anchor>ad9b951ed32cb93e9761411169d4b1ebe</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to scale the target node to the specified scale...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3SkeletonRestPoseBindingVisitor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3SkeletonRestPoseBindingVisitor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skeleton_rest_pose_binding_visitor.html</Path>
    <Abstract>CC3SkeletonRestPoseBindingVisitor is a CC3NodeVisitor that is passed to an assembly of bone nodes (a ...</Abstract>
    <DeclaredIn>CC3VertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3SkinMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Abstract>CC3SkinMesh is a CC3VertexArrayMesh that, in addition to the familiar vertex data such as locations...</Abstract>
    <DeclaredIn>CC3VertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexMatrixIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a5b6215eadec766c9c8c9e829eb0edbda</Anchor>
    <Abstract>Convenience method to cause the vertex matrix index data to be skipped when createGLBuffers is invoke...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a199428a8cb09133138b062c06aead6b3</Anchor>
    <Abstract>Convenience method to cause the vertex weight data to be skipped when createGLBuffers is invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixIndexForVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a3fa11f36c01fda0d7b4389c888f23d50</Anchor>
    <Abstract>Returns the matrix index element, for the specified vertex unit, at the specified index in the underl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexMatrixIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a1dce59b06b43a11f91154ed3d1c8ed9c</Anchor>
    <Abstract>Convenience method to cause the vertex matrix index data to be retained in application memory when re...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a6e645102e33294257886bc96130b2864</Anchor>
    <Abstract>Convenience method to cause the vertex weight data to be retained in application memory when releaseR...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMatrixIndex:forVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a5be6219921bc6a42fa41243181f18cf6</Anchor>
    <Abstract>Sets the matrix index element, for the specified vertex unit, at the specified index in the underlyin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWeight:forVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a7bdc09515c0c7be9586fb6e5f4536e4f</Anchor>
    <Abstract>Sets the weight element, for the specified vertex unit, at the specified index in the underlying vert...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexMatrixIndicesGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a9a78c040a4ca2d425760d9246a04f398</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex weight data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexWeightsGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a926b759f75e79a62d6e61212c387e5bd</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex weight data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weightForVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>ae6e447b53e60e0af1ba65fafa35a6494</Anchor>
    <Abstract>Returns the weight element, for the specified vertex unit, at the specified index in the underlying v...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boneMatrixIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>a69b7b9b6d8aecc6730f3f98ec2c0462a</Anchor>
    <Abstract>The vertex array that manages the indices of the bones that influence each vertex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boneWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3SkinMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh.html</Path>
    <Anchor>ac9222c6e4340a7d73be290e695b866b6</Anchor>
    <Abstract>The vertex array that manages the weighting that each bone has in influencing each vertex...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3SkinMeshNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Abstract>CC3SkinMeshNode is a CC3MeshNode specialized to use vertex skinning to draw the contents of its mesh...</Abstract>
    <DeclaredIn>CC3VertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSkinSection:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>afad638ee988e556f7172628eecdb4d03</Anchor>
    <Abstract>Adds the specified skin section to the collection in the skinSections property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexMatrixIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>aa6be2c89323bdaa7070d6bd38f02aa70</Anchor>
    <Abstract>Convenience method to cause the vertex matrix index data to be skipped when createGLBuffers is invoke...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doNotBufferVertexWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>a5935f4ca25524592021954ce091b24df</Anchor>
    <Abstract>Convenience method to cause the vertex weight data to be skipped when createGLBuffers is invoked...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixIndexForVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>a445816be21d20bcaa40db71f8626e3f0</Anchor>
    <Abstract>Returns the matrix index element, for the specified vertex unit, at the specified index in the underl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexMatrixIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>adb3f6074ec74454e3f79f6f930928668</Anchor>
    <Abstract>Convenience method to cause the vertex matrix index data to be retained in application memory when re...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>retainVertexWeights</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>a8491d2f6898e6e76cbd7698716507059</Anchor>
    <Abstract>Convenience method to cause the vertex weight data to be retained in application memory when releaseR...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMatrixIndex:forVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>a7f6091ad46ac1c95db5125691f36f98b</Anchor>
    <Abstract>Sets the matrix index element, for the specified vertex unit, at the specified index in the underlyin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWeight:forVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>a84dead40bd60cd7e0661a680e78fe524</Anchor>
    <Abstract>Sets the weight element, for the specified vertex unit, at the specified index in the underlying vert...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexMatrixIndicesGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>a1b21f2d0a1b2cdfcbdf81cc7181938e3</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex weight data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVertexWeightsGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>acb1e241923e61f6ed31f02f7b0e8e5f7</Anchor>
    <Abstract>Updates the GL engine buffer with the vertex weight data in this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weightForVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>ae8ab750d6ebe3841d8c0c13b29aa6fc6</Anchor>
    <Abstract>Returns the weight element, for the specified vertex unit, at the specified index in the underlying v...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>restPoseTransformMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>a150697f3362b477479540ff7f5dbb9c0</Anchor>
    <Abstract>Returns the cached rest pose matrix, relative to the soft-body ancestor node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skinnedMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>af39301e4070e742286ce9ee3a7510941</Anchor>
    <Abstract>The CC3Mesh used by this node, cast as a CC3SkinMesh, for convenience in accessing the additional beh...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>skinSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3SkinMeshNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_mesh_node.html</Path>
    <Anchor>a48551876c6341dca5b6c3b05b08133e2</Anchor>
    <Abstract>The collection of CC3SkinSections that are managed by this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3SkinSection</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Abstract>A CC3SkinSection defines a section of the skin mesh, and contains a collection of bones from the skel...</Abstract>
    <DeclaredIn>CC3VertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBone:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>a8ae855aba601a53d71cf8afe83cebeea</Anchor>
    <Abstract>Adds the specified bone node to the collection of bones in the bones property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyForNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>ae0a611b052b907ff504eff00442a2219</Anchor>
    <Abstract>Returns a copy of this skin section, for use by the specified skin mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyForNode:withZone:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>a7a500a8f628fec9c627a672c7b160438</Anchor>
    <Abstract>Returns a copy of this skin section, for use by the specified skin mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawVerticesOfMesh:withVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>a4721de33c1fe494fdb727fa2ac71ac5d</Anchor>
    <Abstract>Draws the mesh vertices of this skin section.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>acc9d7e810a443ce71185fb41ec845652</Anchor>
    <Abstract>Returns a description of this skin section that includes a list of the bones.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initForNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>adc300baf4e640b0b0be83809adcccaf0</Anchor>
    <Abstract>Initializes an instance that will be used by the specified skin mesh node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reattachBonesFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>a7656665c4b49109fccabd61d7b0fa780</Anchor>
    <Abstract>Creating a copy of a skin section is typically done as part of creating a copy of a skin mesh node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boneBatchForNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>a04ee26e133776889f1173fe349f7c59d</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance that will be used by the specified skin mesh node...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bones</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>afe9ce0b947cde02e64be11c69850965b</Anchor>
    <Abstract>The collection of bones from the skeleton that influence the subset of mesh vertices that is managed ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>a4150afbd80ae90843cdae7db752ff9cf</Anchor>
    <Abstract>Indicates the number of vertices in this skin section.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexStart</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3SkinSection</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_skin_section.html</Path>
    <Anchor>a508c79f705732a445f55fa3bcacfd106</Anchor>
    <Abstract>An index that indicates which vertex in the mesh begins this skin section.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3SoftBodyNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3SoftBodyNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_soft_body_node.html</Path>
    <Abstract>CC3SoftBodyNode is the primary structural component for a soft-body object that uses vertex skinning ...</Abstract>
    <DeclaredIn>CC3VertexSkinning.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Sphere</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Sphere</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_sphere.html</Path>
    <Abstract>Defines a sphere.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Sphere</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_sphere.html</Path>
    <Anchor>acda89fcc125de399bc9e5845117b6045</Anchor>
    <Abstract>The center of the sphere.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Sphere</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_sphere.html</Path>
    <Anchor>a048918cd07335916ef536b3eba3aa24b</Anchor>
    <Abstract>The radius of the sphere.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TargettingNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Abstract>This is a node class representing a 3D model node that can be pointed in a particular direction...</Abstract>
    <DeclaredIn>CC3TargettingNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>trackTargetWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>a51bfa049b0f56fabf987b38a65572656</Anchor>
    <Abstract>If the shouldTrackTarget property is set to YES, orients this node to point towards its target...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>axisRestriction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>ac379b9faf81c168e51f21b55be417e96</Anchor>
    <Abstract>Indicates whether rotation should be restricted to a single axis when attempting to rotate the node t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>a01e0f4abde487916872b57cb1da77da9</Anchor>
    <Abstract>The direction in which this node is pointing, relative to the node&amp;#39;s coordinate system, which is relative to the parent&amp;#39;s rotation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalForwardDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>a26e86cbae69b61f5cad8bc2af0c63710</Anchor>
    <Abstract>The direction in which this node is pointing, relative to the global coordinate system.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalRightDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>a320dfd6216ee413ae503a5fe77602df7</Anchor>
    <Abstract>The direction that is considered to be &amp;quot;off to the right&amp;quot; for this node, relative to the global coord...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalUpDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>a213d691795cd4b8c3bb3ffbbb48182e9</Anchor>
    <Abstract>The direction that is considered to be &amp;#39;up&amp;#39; for this node, relative to the global coordinate system...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>podTargetIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>ad85d68b255f8bdc46663517c399db03d</Anchor>
    <Abstract>The index of the node that is the target of this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rightDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>a97d50ccc64707a216782e9c17aac7020</Anchor>
    <Abstract>The direction in the node&amp;#39;s coordinate system that would be considered to be &amp;quot;off to the right&amp;quot; rel...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAutotargetCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>a51d3850ade76da5d43e42277bf302074</Anchor>
    <Abstract>Indicates whether this instance should automatically find and track the camera as its target...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldTrackTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>ad8f0bee4662ae7904fb733614e642d35</Anchor>
    <Abstract>Indicates whether this instance should track the node set in the target property as the target and th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>aa6323afff47805b184184f6ddae280c3</Anchor>
    <Abstract>The target node at which this node is pointed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>targetLocation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>ae3f5300b99e1c9f08dd49e0b788597c7</Anchor>
    <Abstract>The global location towards which this node is facing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>a8c08786cc52f895409777afedf79affb</Anchor>
    <Abstract>The direction, in the node&amp;#39;s coordinate system, that is considered to be &amp;#39;up&amp;#39;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>worldUpDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TargettingNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_targetting_node.html</Path>
    <Anchor>af7020602a478d0cf2da4650c303b3ac3</Anchor>
    <Abstract>The direction, in the global coordinate system, that is considered to be &amp;#39;up&amp;#39;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Texture</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Abstract>Each instance of CC3Texture wraps a cocos2d CCTexture2D instance, and manages applying that texture t...</Abstract>
    <DeclaredIn>CC3Texture.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>afa0e62976158a7bdf7ac59f18ecaec44</Anchor>
    <Abstract>If the texture property is not nil, draws the texture to the GL engine as follows:</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a6144e1e3b45b966db45e531e00fe1756</Anchor>
    <Abstract>Initializes this unnamed instance with an automatically generated unique tag value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithName:fromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a6f910fe2434c0941d1300e3d570bda00</Anchor>
    <Abstract>Initializes this instance with the specified name and an automatically generated unique tag value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:fromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>ac75915b7c94a193a01875c8f296ce081</Anchor>
    <Abstract>Initializes this unnamed instance with the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTag:withName:fromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>aaa0b0ecfc2ff93298e80e5c62f8cc00b</Anchor>
    <Abstract>Initializes this instance with the specified tag and name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadTextureFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>aca8074168c2a0db16868b2d9f90b3a1a</Anchor>
    <Abstract>Loads the specified texture file into the texture property, and returns whether the loading was succe...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureFromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>ac1d0305073cfe2252ff1bc87d586fde5</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureWithName:fromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a31ffe0f27f129fb9062ea8de62175034</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified name and an automatically gener...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureWithTag:fromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a86979ff6a915ea7a47e10612f7047d4b</Anchor>
    <Abstract>Allocates and initializes an unnamed autoreleased instance with the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureWithTag:withName:fromFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>ac50c24c3787b85dc5c6877cd6a35ddde</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified tag and name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a2f4cec6e0972931fa2b1f79f57e06a24</Anchor>
    <Abstract>Disables all texture units in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a406fd28b91c5cece50dc3bea1207c020</Anchor>
    <Abstract>Disables the specified texture unit in the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbindRemainingFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a598ad1de8ed1492d9a126f42f4b5a7e7</Anchor>
    <Abstract>Disables all texture units between the specified texture unit index and the number of texture units t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPremultipliedAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a870db8fc7b80264d8590d03ef31ddf46</Anchor>
    <Abstract>Indicates whether the RGB components of each pixel of the encapsulated texture have had the correspon...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBumpMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>aac41569fd71be5bb9d9e903fff31ce3c</Anchor>
    <Abstract>Returns whether this texture contains a texture unit that is configured as a bump-map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>aed4337a3fc9fe7782251dab08bfef77b</Anchor>
    <Abstract>The direction, in local tangent coordinates, of the light source that is to interact with this textur...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mapSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a88e8a2ee09c69d4a3de48c4b07401895</Anchor>
    <Abstract>Returns the proportional size of the usable image in the contained CCTexture2D, relative to its physi...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>aca557524abf19e7e4e97e04a7e2d0f01</Anchor>
    <Abstract>The 2D texture being managed by this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureParameters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a59a6717af90d8af04e12126a1e20e147</Anchor>
    <Abstract>A set of texture parameters used to optimize the display of the contained texture in the GL engine...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3Texture</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture.html</Path>
    <Anchor>a479b02074e56f6f1576ecae871217baf</Anchor>
    <Abstract>The texture environment settings that are applied to the texture unit that draws this texture...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TexturedVertex</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TexturedVertex</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_textured_vertex.html</Path>
    <Abstract>Defines a simple vertex, containing location, normal, and texture coordinate data.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>location</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3TexturedVertex</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_textured_vertex.html</Path>
    <Anchor>a51f905ee5a2cd9b1131a773985a7f399</Anchor>
    <Abstract>The 3D location of the vertex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3TexturedVertex</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_textured_vertex.html</Path>
    <Anchor>ad5574f069db0231644a075a6f248313c</Anchor>
    <Abstract>The 3D normal at the vertex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3TexturedVertex</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_textured_vertex.html</Path>
    <Anchor>a914639868e0b648b6079cd97e18cdbd3</Anchor>
    <Abstract>The 2D coordinate of this vertex on the texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TextureUnit</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Abstract>CC3TextureUnit is used by CC3Texture to configure the GL texture unit to which the texture is being a...</Abstract>
    <DeclaredIn>CC3TextureUnit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindTo:withVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>a50ce3d83993563cb8f4f21f63b584771</Anchor>
    <Abstract>Template method that binds the configuration of this texture unit to the specified GL texture unit...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindDefaultTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>ab6fab75b22df25e8f3963f5de24ce23b</Anchor>
    <Abstract>Automatically invoked from CC3Texture when no texture unit configuration is provided in that texture...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureUnit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>aac1af206a124a912ebd4691f74dde06c</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>ab601fd66b18880dd761a98631a1ca575</Anchor>
    <Abstract>Implementation of the CCRGBAProtocol color property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>constantColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>ab7facf29b0c9e71ef2806419da2a5ea8</Anchor>
    <Abstract>The constant color of the texture unit.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isBumpMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>a379387a533ce78ce2851e3b08f544a78</Anchor>
    <Abstract>Returns whether this texture unit is configured as a bump-map.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lightDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>a4bb9e17a8bf07b9fafce1df5165eb81a</Anchor>
    <Abstract>The direction, in local tangent coordinates, of the light source that is to interact with subclasses ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>opacity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>af4d557e9146c48bf0bb8758b571d6830</Anchor>
    <Abstract>Implementation of the CCRGBAProtocol opacity property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rgbNormalMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TextureUnit</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_texture_unit.html</Path>
    <Anchor>abfeb0278661856f2903524b64e2a5c08</Anchor>
    <Abstract>When a subclass is configured as a bump-map, this property indicates how the XYZ coordinates of each ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TintAmbientTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TintAmbientTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_tint_ambient_to.html</Path>
    <Abstract>A concrete subclass of CC3TintTo that changes the ambient color of the target CC3Node.</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TintDiffuseTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TintDiffuseTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_tint_diffuse_to.html</Path>
    <Abstract>A concrete subclass of CC3TintTo that changes the diffuse color of the target CC3Node.</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TintEmissionTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TintEmissionTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_tint_emission_to.html</Path>
    <Abstract>A concrete subclass of CC3TintTo that changes the emission color of the target CC3Node.</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TintSpecularTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TintSpecularTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_tint_specular_to.html</Path>
    <Abstract>A concrete subclass of CC3TintTo that changes the specular color of the target CC3Node.</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TintTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TintTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_tint_to.html</Path>
    <Abstract>CC3TintTo is an abstract CCActionInterval whose subclasses changes one of the color properties of a t...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:colorTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TintTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_tint_to.html</Path>
    <Anchor>a58503d2cf646e10869c6f6c11f45fef5</Anchor>
    <Abstract>Initializes this instance to change a color property of the target node to the specified color...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:colorTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3TintTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_tint_to.html</Path>
    <Anchor>af86b132ce6e05ee890801c05e39be2e3</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to change a color property of the target node to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TouchedNodePicker</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TouchedNodePicker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_touched_node_picker.html</Path>
    <Abstract>A CC3TouchedNodePicker instance handles picking nodes from touch events in a CC3World.</Abstract>
    <DeclaredIn>CC3World.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dispatchPickedNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TouchedNodePicker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_touched_node_picker.html</Path>
    <Anchor>ab508673a7eb031f086af4eb48ddccb18</Anchor>
    <Abstract>Invoked by the CC3World during update operations, in the update loop that occurs occurs just after a ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initOnWorld:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TouchedNodePicker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_touched_node_picker.html</Path>
    <Anchor>a3a93a9df33a4d8c344758fc025d06da3</Anchor>
    <Abstract>Initializes this instance on the specified CC3World.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pickNodeFromTouchEvent:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TouchedNodePicker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_touched_node_picker.html</Path>
    <Anchor>a040b6ca1a3ae0d127fef26b6df361494</Anchor>
    <Abstract>Indicates that a node should be picked for the touch event of the specified type that occurred at the...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pickTouchedNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TouchedNodePicker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_touched_node_picker.html</Path>
    <Anchor>ade5bf0d7c783ffbc6467615ff5247960</Anchor>
    <Abstract>Invoked by the CC3World during drawing operations in the rendering frame that occurs just after a tou...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handlerOnWorld:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3TouchedNodePicker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_touched_node_picker.html</Path>
    <Anchor>afed04c29fefce5008a2ddb4978eb5abc</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance on the specified CC3World.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glTouchPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TouchedNodePicker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_touched_node_picker.html</Path>
    <Anchor>ac4af5ff92b7071d5518049625b49af97</Anchor>
    <Abstract>The most recent touch point in OpenGL ES coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pickVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3TouchedNodePicker</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_touched_node_picker.html</Path>
    <Anchor>a68b7bb7337a946dbb46921123390e412</Anchor>
    <Abstract>The visitor that is used to visit the nodes to draw them when picking a node from touch selection...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TransformBy</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TransformBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_transform_by.html</Path>
    <Abstract>CC3TransformBy is an abstract subclass of CCActionInterval that is the parent of subclasses that tran...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:differenceVector:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TransformBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_transform_by.html</Path>
    <Anchor>acc2bd58f43f77b94e340b406e8e2bcb9</Anchor>
    <Abstract>Initializes this instance to transform the target property of the node by the specified vector within...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:differenceVector:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3TransformBy</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_transform_by.html</Path>
    <Anchor>a20bf08d0e4c4e039c59c636a0beb031f</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to transform the target property of the node by th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TransformTo</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TransformTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_transform_to.html</Path>
    <Abstract>CC3TransformTo is an abstract subclass of CCActionInterval that is the parent of subclasses that tran...</Abstract>
    <DeclaredIn>CC3ActionInterval.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithDuration:endVector:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3TransformTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_transform_to.html</Path>
    <Anchor>a47fee5e15614c8b26b556bb72cbde42b</Anchor>
    <Abstract>Initializes this instance to transform the target property of the node to the specified vector...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWithDuration:endVector:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3TransformTo</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_transform_to.html</Path>
    <Anchor>a264d20bc7ebba25ba52f8a869f039bf3</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance to transform the target property of the node to th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3TranslucentNodeAcceptor</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3TranslucentNodeAcceptor</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_translucent_node_acceptor.html</Path>
    <Abstract>A type of CC3LocalContentNodeEvaluator that accepts only translucent nodes.</Abstract>
    <DeclaredIn>CC3NodeSequencer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3UniformEvolutionParticle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3UniformEvolutionParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_uniform_evolution_particle.html</Path>
    <Abstract>CC3UniformEvolutionParticle is a type of CC3MortalPointParticle that moves in a straight line in a si...</Abstract>
    <DeclaredIn>CC3PointParticles.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateLife:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3UniformEvolutionParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_uniform_evolution_particle.html</Path>
    <Anchor>a9f96a2420b140ec1441a5078903c639e</Anchor>
    <Abstract>Invoked automatically from the udpate: method, while the particle is alive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3UniformEvolutionParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_uniform_evolution_particle.html</Path>
    <Anchor>ac907ff189e689d2886031f1de908aac7</Anchor>
    <Abstract>Indicates the rate that this particle changes color.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeVelocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3UniformEvolutionParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_uniform_evolution_particle.html</Path>
    <Anchor>afc97fc325219cda3dcc5f83622aef66a</Anchor>
    <Abstract>Indicates the rate that this particle changes size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3UniformMotionParticle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3UniformMotionParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_uniform_motion_particle.html</Path>
    <Abstract>CC3UniformMotionParticle is a type of CC3MortalPointParticle that moves in a straight line in a singl...</Abstract>
    <DeclaredIn>CC3PointParticles.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateLife:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3UniformMotionParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_uniform_motion_particle.html</Path>
    <Anchor>ae409412c3353f41f84325ae2d977b9cb</Anchor>
    <Abstract>Invoked automatically from the udpate: method, while the particle is alive.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>velocity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3UniformMotionParticle</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_uniform_motion_particle.html</Path>
    <Anchor>ac5d238a85e35587fe8e064a915cf6bdb</Anchor>
    <Abstract>Indicates the velocity of this particle.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VariegatedPointParticleHoseEmitter</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Abstract>CC3VariegatedPointParticleHoseEmitter is a type of CC3PointParticleHoseEmitter whose particles can ha...</Abstract>
    <DeclaredIn>CC3PointParticleSamples.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxParticleEndingColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Anchor>a2654c93ef78f019b40281f2c63b62a5b</Anchor>
    <Abstract>Indicates the upper bound of the range from which the final color of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxParticleEndingSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Anchor>a257c405ba94bd6be08959f299f1c272d</Anchor>
    <Abstract>Indicates the upper bound of the range from which the final size of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxParticleStartingColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Anchor>ac2f87cca17647161af7afd99bce54883</Anchor>
    <Abstract>Indicates the upper bound of the range from which the initial color of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxParticleStartingSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Anchor>adec0db4393cae08a94e12aafa4db0bc8</Anchor>
    <Abstract>Indicates the upper bound of the range from which the initial size of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minParticleEndingColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Anchor>a2bc6629afcc182e78aa5cc0cf3901297</Anchor>
    <Abstract>Indicates the lower bound of the range from which the final color of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minParticleEndingSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Anchor>a8f98bc4f8d2d4732b584794c7b7dad7a</Anchor>
    <Abstract>Indicates the lower bound of the range from which the final size of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minParticleStartingColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Anchor>ac85bed8fb5049d11f2efefe5bf7a2801</Anchor>
    <Abstract>Indicates the lower bound of the range from which the initial color of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minParticleStartingSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VariegatedPointParticleHoseEmitter</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_variegated_point_particle_hose_emitter.html</Path>
    <Anchor>a868c2691c2c15e8fa3affc0d022e6b32</Anchor>
    <Abstract>Indicates the lower bound of the range from which the initial size of the particle will be chosen...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Vector</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector.html</Path>
    <Abstract>A vector in 3D space.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Vector</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector.html</Path>
    <Anchor>a3a6c4f394191aa538363072799720cb0</Anchor>
    <Abstract>The X-componenent of the vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Vector</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector.html</Path>
    <Anchor>a59f4abedfcd18b05395453a146d9ad2a</Anchor>
    <Abstract>The Y-componenent of the vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>z</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Vector</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector.html</Path>
    <Anchor>a2d53acee2cbd5fe18ad344aa70af6c0e</Anchor>
    <Abstract>The Z-componenent of the vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Vector4</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Vector4</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector4.html</Path>
    <Abstract>A homogeneous vector in 4D graphics matrix space.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>w</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Vector4</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector4.html</Path>
    <Anchor>a83d25740bb6506cbdd420461c96d9667</Anchor>
    <Abstract>The homogeneous ratio factor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Vector4</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector4.html</Path>
    <Anchor>a7944bbdb5a08e3c9aa8fe1f8ae288568</Anchor>
    <Abstract>The X-componenent of the vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Vector4</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector4.html</Path>
    <Anchor>a5a89f67ce0667a641d61cd0d22e4fb28</Anchor>
    <Abstract>The Y-componenent of the vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>z</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Vector4</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_vector4.html</Path>
    <Anchor>a16cf97214a3c71236b66e67f493b69a8</Anchor>
    <Abstract>The Z-componenent of the vector.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexArray</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Abstract>CC3VertexArray manages the data associated with an aspect of a vertex.</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addressOfElement:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>aa5d22d9b90fd2c0cbbcd5d3b3aefea34</Anchor>
    <Abstract>Returns a pointer to the element in the underlying data at the specified index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>allocateElements:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a58b0cf003164ca50b846e67a18dc3296</Anchor>
    <Abstract>Allocates underlying memory for the specified number of elements, taking into consideration the eleme...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindWithVisitor:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>abdc6f5cbdadeaafe9392c448b22d83d8</Anchor>
    <Abstract>Binds the GL engine to the underlying vertex data, if needed, in preparation for drawing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a2b837623f0311aa4ae96d237ba1621c7</Anchor>
    <Abstract>If the shouldAllowVertexBuffering property is set to YES, creates a vertex buffer object within the G...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deallocateElements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a6706497258798d6680f7a1c2b8a057f5</Anchor>
    <Abstract>Deallocates the underlying vertex data memory that was previously allocated with the allocateElements...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a9d37942763061edb9e840b2435cfa127</Anchor>
    <Abstract>Deletes the GL engine buffers created with createGLBuffer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromCPODData:fromSPODMesh:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a50d9bd2a907d45c55a63d407f9f162f7</Anchor>
    <Abstract>Initializes this instance from the specified CPODData structure and the specified SPODMesh structure...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromSPODMesh:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a49f0a98b8a59f9425c8507929dee01db</Anchor>
    <Abstract>Initializes this instance from the specified SPODMesh structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseRedundantData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a11b53c891d936d54f8f31ef612875c2f</Anchor>
    <Abstract>Once the elements data has been buffered into a GL vertex buffer object (VBO) within the GL engine...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a38655c1c1ba82e7c163fa9ecf9f38e37</Anchor>
    <Abstract>Unbinds the GL engine from the vertex aspect managed by this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateGLBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a523216f26f2445d7d77aa7dfb2743909</Anchor>
    <Abstract>Updates the GL engine buffer with all of the element data contained in this array.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateGLBufferStartingAt:forLength:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>ab57e37aba82b51dd52f216668f1295e0</Anchor>
    <Abstract>Updates the GL engine buffer with the element data contained in this array, starting at the vertex at...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arrayFromSPODMesh:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a5ae339f0616990464b473bcf96a02f62</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance from the specified SPODMesh structure.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetAllSwitching</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a5305c10231dafae45925549e93d867b2</Anchor>
    <Abstract>Resets the tracking of the vertex array switching functionality for all vertex array subclasses...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetSwitching</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a7882f1d19f09727193d8175b64020b9d</Anchor>
    <Abstract>Resets the tracking of the vertex array switching functionality.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a38655c1c1ba82e7c163fa9ecf9f38e37</Anchor>
    <Abstract>Unbinds the GL engine from the vertex aspect managed by this class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexArray</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>af2d91c9e3248eb0a35117dcb8fda01e5</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexArrayWithName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a0aa8b3c366b0778c5de69b3141869aa9</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified name and an automatically gener...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexArrayWithTag:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a9a8e76de5f48794068b4f4cfedc1d02c</Anchor>
    <Abstract>Allocates and initializes an unnamed autoreleased instance with the specified tag.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexArrayWithTag:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>ada8d3ddfc39938f055af9a259435da22</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance with the specified tag and name.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a5f149c521086bd292fb8e623986fa1f5</Anchor>
    <Abstract>If the underlying data has been loaded into a GL engine vertex buffer object, this property holds the...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferTarget</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a44bb7095577ea63c833c2394800f7c2c</Anchor>
    <Abstract>The GL engine buffer target.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bufferUsage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>aada83be4106cb3e5142660ce8fb9b659</Anchor>
    <Abstract>The GL engine buffer usage hint, used by the GL engine to arrange data for access when loading data i...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a9c116e53b61dceb5c2d780d57202afa9</Anchor>
    <Abstract>The number of elements in the underlying data referenced by the elements property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a74fbc055d207e6cbd4cc1b871d7c8682</Anchor>
    <Abstract>When using interleaved data, this property indicates the offset, within the data for a single vertex...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elements</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>aaf394185e2790d304424836ece9633a5</Anchor>
    <Abstract>A pointer to the underlying vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a2513170e3be6dcae78a8d3a0905683e1</Anchor>
    <Abstract>The number of components associated with each vertex in the underlying data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementStride</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>ae9c5e04a4edea7a4533290d18ef24b1e</Anchor>
    <Abstract>The number of bytes between consecutive vertices for the vertex aspect being managed by this instance...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>elementType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a0585afe3cd645ef4443bb296be440d4d</Anchor>
    <Abstract>The type of data associated with each component of a vertex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAllowVertexBuffering</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>ab1a2cb56553c8f4cff1557372174d57e</Anchor>
    <Abstract>Indicates whether this instance should allow the vertex data to be copied to a vertex buffer object w...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldReleaseRedundantData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArray</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array.html</Path>
    <Anchor>a7d1933cbeaf396a5aec9d51b87509ca0</Anchor>
    <Abstract>Indicates whether this instance should release the data held in the elments array when the releaseRed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexArrayMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Abstract>A CC3VertexArrayMesh is a mesh whose mesh data is kept in a set of CC3VertexArrays instances...</Abstract>
    <DeclaredIn>CC3VertexArrayMesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addTextureCoordinates:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>ad2b8f456f55624e1a2c14ba60c6ea9af</Anchor>
    <Abstract>This class supports multi-texturing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTextureCoordinatesNamed:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a88a5f6e2d0f42ea6ee79505482a18b87</Anchor>
    <Abstract>Returns the overlay texture coordinate array with the specified name, or nil if it cannot be found...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllTextureCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a5ef3d9a46650162c7494463998d37129</Anchor>
    <Abstract>Removes all texture coordinates arrays from the the vertexTextureCoordinates property and from the ov...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeTextureCoordinates:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a53f2113ed681c33484a666037c0902d2</Anchor>
    <Abstract>Removes the specified texture coordinate array from either the vertexTextureCoordinates property or f...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureCoordinates:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a44b67e7a83539c909a0e212c8071d140</Anchor>
    <Abstract>Sets the texture coordinates array that will be processed by the texture unit with the specified inde...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureCoordinatesForTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a9df0aa7356c19472d505b9660b4ea384</Anchor>
    <Abstract>Returns the texture coordinate array that will be processed by the texture unit with the specified in...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateGLBuffers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a7542f7221aebc68b5df8aeb7cbf8ec43</Anchor>
    <Abstract>Convenience method to update all data in the GL buffers for all vertex arrays used by this mesh...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateGLBuffersStartingAt:forLength:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a948807e75439c5c920e8283e39937849</Anchor>
    <Abstract>Convenience method to update GL buffers for all vertex arrays used by this mesh, starting at the vert...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meshAtIndex:fromPODResource:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a48bf57ec6d2c88b0aedde3b1ff27eee4</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance from the data of this type at the specified index ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interleaveVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a74e4a62889e3748d0473f7b9f6407759</Anchor>
    <Abstract>Indicates whether the vertex data is interleaved, or separated by aspect.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureCoordinatesArrayCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a9a6b81765e8beba89eb797c4ab8c6f83</Anchor>
    <Abstract>Returns the number of texture coordinate arrays used by this mesh, regardless of whether the texture ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexColors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a0b0d7861b0f0d47f1b1cfddc22c27159</Anchor>
    <Abstract>The vertex array instance managing the per-vertex color data for the vertices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a35c8ecc6694368750478f03574c02532</Anchor>
    <Abstract>The vertex array instance managing the index data for the vertices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexLocations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a5eaeda803c9d071dde27b5696b3ee9f6</Anchor>
    <Abstract>The vertex array instance managing the positional data for the vertices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a4ba958125f57030d819688d54195f033</Anchor>
    <Abstract>The vertex array instance managing the normal data for the vertices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertexTextureCoordinates</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexArrayMesh</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh.html</Path>
    <Anchor>a50a1071c829e3ca614af8173b0006f88</Anchor>
    <Abstract>The vertex array instance managing the texture mapping data for the vertices.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexArrayMeshModel</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexArrayMeshModel</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_array_mesh_model.html</Path>
    <Abstract>Deprecated CC3VertexArrayMeshModel renamed to CC3VertexArrayMesh.</Abstract>
    <DeclaredIn>CC3VertexArrayMesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexColors</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexColors</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_colors.html</Path>
    <Abstract>A CC3VertexArray that manages the per-vertex color aspect of an array of vertices.</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color4BAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexColors</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_colors.html</Path>
    <Anchor>a79eae79e4ec390f55d2975c51616dcd4</Anchor>
    <Abstract>Returns the color element at the specified index in the underlying vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color4FAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexColors</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_colors.html</Path>
    <Anchor>a104b054fa67288c6c0bdb0943c83d2ab</Anchor>
    <Abstract>Returns the color element at the specified index in the underlying vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor4B:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexColors</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_colors.html</Path>
    <Anchor>aaee49d034004e91d44b51feb44cd1c07</Anchor>
    <Abstract>Sets the color element at the specified index in the underlying vertex data to the specified color va...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor4F:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexColors</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_colors.html</Path>
    <Anchor>ae9d6bb07f5a70c70b12e704427e87865</Anchor>
    <Abstract>Sets the color element at the specified index in the underlying vertex data to the specified color va...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexIndices</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexIndices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_indices.html</Path>
    <Abstract>A CC3VertexArray that manages the drawing indices of an array of vertices.</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexIndices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_indices.html</Path>
    <Anchor>af784115e9ab29f828d70fbe2c150d47f</Anchor>
    <Abstract>Returns the index element at the specified index in the underlying vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIndex:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexIndices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_indices.html</Path>
    <Anchor>ac6a966b5236767ef20c0a74d89797e50</Anchor>
    <Abstract>Sets the index element at the specified index in the underlying vertex data, to the specified value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexLocations</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Abstract>A CC3VertexArray that manages the location aspect of an array of vertices.</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>locationAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>aad25baa73c2f5639811c6befe7e7eae7</Anchor>
    <Abstract>Returns the location element at the specified index in the underlying vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>markBoundaryDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>ab61a72b478b02b59e98835669fcef3fe</Anchor>
    <Abstract>Marks the boundary, including bounding box and radius, as dirty, and need of recalculation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>movePivotTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>ac22ab30fdb04e864c6edb328d2bd44ac</Anchor>
    <Abstract>Changes the mesh data so that the pivot point of the mesh will be at the specified location...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>movePivotToCenterOfGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>ac535fc8ae1a1095e6f2067ee59a04151</Anchor>
    <Abstract>Changes the mesh data so that the pivot point of the mesh will be at the center of geometry of the me...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLocation:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>a1d612f60811947cc2cac4abc602199b3</Anchor>
    <Abstract>Sets the location element at the specified index in the underlying vertex data to the specified locat...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>boundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>a4ca29ef295295af33c0060d0ca14afbc</Anchor>
    <Abstract>Returns the axially-aligned bounding box of this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>centerOfGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>a966d54a7035bccd945fa94c7104a1fb1</Anchor>
    <Abstract>Returns the center of geometry of this mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstElement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>a463de261c9c1e5d334c334646915b9c3</Anchor>
    <Abstract>An index reference to the first element that will be drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexLocations</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations.html</Path>
    <Anchor>afd6079ea5c64be736496caf90595d2d1</Anchor>
    <Abstract>Returns the radius of a spherical boundary, centered on the centerOfGeometry, that encompasses all th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexLocationsBoundingBoxVolume</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexLocationsBoundingBoxVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations_bounding_box_volume.html</Path>
    <Abstract>CC3VertexLocationsBoundingBoxVolume is a type of CC3NodeBoundingBoxVolume specialized for use with CC...</Abstract>
    <DeclaredIn>CC3VertexArrayMesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexLocationsBoundingVolume</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexLocationsBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations_bounding_volume.html</Path>
    <Abstract>CC3VertexLocationsBoundingVolume is a type of CC3NodeBoundingVolume specialized for use with CC3Verte...</Abstract>
    <DeclaredIn>CC3VertexArrayMesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexLocationsSphericalBoundingVolume</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexLocationsSphericalBoundingVolume</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_locations_spherical_bounding_volume.html</Path>
    <Abstract>CC3VertexLocationsSphericalBoundingVolume is a type of CC3NodeSphericalBoundingVolume specialized for...</Abstract>
    <DeclaredIn>CC3VertexArrayMesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexMatrixIndices</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexMatrixIndices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_matrix_indices.html</Path>
    <Abstract>A CC3VertexArray that manages a collection of indices used by each vertex to point to a collection of...</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>matrixIndexForVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexMatrixIndices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_matrix_indices.html</Path>
    <Anchor>a4087483d3d43cdbfe649ccc2cf8885c8</Anchor>
    <Abstract>Returns the matrix index element, for the specified vertex unit, at the specified index in the underl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMatrixIndex:forVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexMatrixIndices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_matrix_indices.html</Path>
    <Anchor>a2cf17330c0660420afe5a3f9ebcdcf38</Anchor>
    <Abstract>Sets the matrix index element, for the specified vertex unit, at the specified index in the underlyin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexNormals</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_normals.html</Path>
    <Abstract>A CC3VertexArray that manages the normal aspect of an array of vertices.</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexNormals</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_normals.html</Path>
    <Anchor>ae13abd74dc6f17f80875ddcfa0502649</Anchor>
    <Abstract>Returns the normal element at the specified index in the underlying vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNormal:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexNormals</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_normals.html</Path>
    <Anchor>aa1dd34bb6565141f23814c40f33aa7e8</Anchor>
    <Abstract>Sets the normal element at the specified index in the underlying vertex data to the specified normal ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexPointSizes</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexPointSizes</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_point_sizes.html</Path>
    <Abstract>A CC3VertexArray that manages the point sizes aspect of an array of point sprite vertices.</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointSizeAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexPointSizes</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_point_sizes.html</Path>
    <Anchor>ab8ab0a6b1730d4003dc55705f4d484fa</Anchor>
    <Abstract>Returns the point size element at the specified index in the underlying vertex data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPointSize:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexPointSizes</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_point_sizes.html</Path>
    <Anchor>a298b22e65ee6f5d4d34e4981f266fbee</Anchor>
    <Abstract>Sets the point size element at the specified index in the underlying vertex data, to the specified lo...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexRunLengthIndices</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexRunLengthIndices</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_run_length_indices.html</Path>
    <Abstract>An index array that manages the drawing indices of an array of vertices, treating the index array as ...</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexTextureCoordinates</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Abstract>A CC3VertexArray that manages the texture coordinates aspect of an array of vertices.</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignWithInvertedTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a947cbcb01ef478066923095b01a3a456</Anchor>
    <Abstract>Aligns the texture coordinate array with the specfied texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignWithInvertedTextureMapSize:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a895243188a483a008b79028aace96796</Anchor>
    <Abstract>Aligns the texture coordinate array with the specfied texture map size, which is typically extracted ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignWithTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a1cf2b6dc8464e1155fdeb09e39850dc9</Anchor>
    <Abstract>Aligns the texture coordinate array with the specfied texture.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignWithTextureMapSize:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a37b69d0873d75bb8dbd19989624b274e</Anchor>
    <Abstract>Aligns the texture coordinate array with the specfied texture map size, which is typically extracted ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flipHorizontally</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>ab94bc78081d04668bd0553ef5ee258ba</Anchor>
    <Abstract>Convenience method that flips the texture coordinate mapping horizontally.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>flipVertically</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a07bf2059096bc23e61c228812cc93eb8</Anchor>
    <Abstract>Convenience method that flips the texture coordinate mapping vertically.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromSPODMesh:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>ad959576ded617b58af241cd77ed95802</Anchor>
    <Abstract>Initializes this instance from the specified SPODMesh structure, using texture channel zero...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromSPODMesh:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>aaf57019e369bfe6be6a6cdef44d07d1e</Anchor>
    <Abstract>Initializes this instance from the specified SPODMesh structure, using the specified texture channel...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>repeatTexture:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a5fd8039760f5202478422daef34bf28e</Anchor>
    <Abstract>Configures the mesh so that a texture applied to this mesh will be repeated the specified number of t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTexCoord2F:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a18593fcfc367b6292ccb53c677de6d83</Anchor>
    <Abstract>Sets the texture coordinate element at the specified index in the underlying vertex data to the speci...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texCoord2FAt:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a072aded5c26d5982e0d60b48befd347b</Anchor>
    <Abstract>Returns the texture coordinate element at the specified index in the underlying vertex data...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>arrayFromSPODMesh:forTextureUnit:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>ad556387625d5656d2e399679f31e02d7</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance from the specified SPODMesh structure, using the specified texture channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a17e737a8e9fe0248301efc8e7625b64d</Anchor>
    <Abstract>Unbinds all texture arrays from all texture units in the GL engine by disabling texture array handlin...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a4191e85a32b5f4c1bb90569cc683a009</Anchor>
    <Abstract>Unbinds all texture arrays from the specified texture unit in the GL engine by disabling texture arra...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbindRemainingFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>a3bac0972862ada82f5943383b0212e68</Anchor>
    <Abstract>Unbinds all texture arrays from the all texture units at or above the specified texture unit...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3VertexTextureCoordinates</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_texture_coordinates.html</Path>
    <Anchor>afd4418542aef04fa327c0fb7031ea7a3</Anchor>
    <Abstract>Defines the rectangular area of the texture that should be mapped to the mesh.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3VertexWeights</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3VertexWeights</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_weights.html</Path>
    <Abstract>A CC3VertexArray that manages a collection of weights used by each vertex during vertex skinning...</Abstract>
    <DeclaredIn>CC3VertexArrays.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWeight:forVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexWeights</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_weights.html</Path>
    <Anchor>a6c25af35b12aa7b51e464aafd654ba13</Anchor>
    <Abstract>Sets the weight element, for the specified vertex unit, at the specified index in the underlying vert...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weightForVertexUnit:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3VertexWeights</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_vertex_weights.html</Path>
    <Anchor>a5b9d6706c3310cfc127917a58001410c</Anchor>
    <Abstract>Returns the weight element, for the specified vertex unit, at the specified index in the underlying v...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3Viewport</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3Viewport</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_viewport.html</Path>
    <Abstract>GL viewport data.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>h</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Viewport</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_viewport.html</Path>
    <Anchor>a67fb5995d8b7e2e6b2b9567d42a85dfe</Anchor>
    <Abstract>The height of the viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>w</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Viewport</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_viewport.html</Path>
    <Anchor>a51fe8abc8b28f083bbe2bb07474d4f36</Anchor>
    <Abstract>The width of the viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Viewport</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_viewport.html</Path>
    <Anchor>a31cae95c8efcd531ea74fa0d1fd28d51</Anchor>
    <Abstract>The X-position of the bottom-left corner of the viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>CC3Viewport</Scope>
    </TokenIdentifier>
    <Path>struct_c_c3_viewport.html</Path>
    <Anchor>a8eb17c240efaf0aac53854eea30a38cc</Anchor>
    <Abstract>The Y-position of the bottom-left corner of the viewport.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3ViewportManager</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Abstract>CC3ViewportManager manages the GL viewport and device orientation for the 3D world, including handling coordinate system rotation based on the device orientation, and conversion of locations and points between the 3D and 2D coordinate systems.</Abstract>
    <DeclaredIn>CC3World.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cc2PointFromGLPoint:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>a96052cb4366d0391a5e3ca6bef682acf</Anchor>
    <Abstract>Converts the specified point, which is in the coordinate system of the 3D GL environment, into the coordinate system used by the cocos2d layer, taking into consideration the size and position of the layer/viewport, and the orientation of the device.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closeViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>a6cd92fbfcbd7cbcbacb374bd478e42f2</Anchor>
    <Abstract>Template method that closes the viewport for 3D drawing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>glPointFromCC2Point:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>a91ed4f89296e661fd3d6ebaf8e14d056</Anchor>
    <Abstract>Converts the specified point, which is in the coordinate system of the cocos2d layer, into the coordinate system used by the 3D GL environment, taking into consideration the size and position of the layer/viewport, and the orientation of the device.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initOnWorld:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>aae638815bf2e9e2da8e3e7dd0a72cf12</Anchor>
    <Abstract>Initializes this instance on the specified CC3World.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>a8454679b82f2baa9eee7f02de42a2b48</Anchor>
    <Abstract>Template method that opens the viewport for 3D drawing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateBounds:withDeviceOrientation:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>a83eda4784abd88b5cf95311618a2ca67</Anchor>
    <Abstract>Using the specified view bounds and deviceOrientation, updates the GL viewport and the device rotatio...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewportManagerOnWorld:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>a270c51e5a258432155ec873b25c39176</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance on the specified CC3World.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deviceRotationMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>ab59202aee34199a92dbb965d8e5dbc6d</Anchor>
    <Abstract>A rotation matrix to hold the transform required to align with the current device orientation...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isFullScreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>a72b155b6d36bd2e684db0eef2edc6505</Anchor>
    <Abstract>Returns whether the viewport covers the full screen.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>layerBounds</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>aaa2643e0114623f651b0d40675547a9d</Anchor>
    <Abstract>The bounding box of the CC3Layer the world is drawing within.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>layerBoundsLocal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>ac6e7ad804e7df5c72c94a8ce7c9374a7</Anchor>
    <Abstract>The bounding box of the CC3Layer the world is drawing within, in coordinates local to the layer itsel...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3ViewportManager</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_viewport_manager.html</Path>
    <Anchor>a4b4b1e97a9124fb25b8b9416299381dc</Anchor>
    <Abstract>The viewport used by the 3D world.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3WireframeBoundingBoxNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3WireframeBoundingBoxNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_wireframe_bounding_box_node.html</Path>
    <Abstract>CC3WireframeBoundingBoxNode is a type of CC3LineNode specialized for drawing a wireframe bounding box...</Abstract>
    <DeclaredIn>CC3MeshNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldAlwaysMeasureParentBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3WireframeBoundingBoxNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_wireframe_bounding_box_node.html</Path>
    <Anchor>a8701db6d766f35000d3673a7613f31ad</Anchor>
    <Abstract>Indicates whether the dimensions of this node should automatically be remeasured on each update pass...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3WireframeLocalContentBoundingBoxNode</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3WireframeLocalContentBoundingBoxNode</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_wireframe_local_content_bounding_box_node.html</Path>
    <Abstract>CC3WireframeLocalContentBoundingBoxNode is a CC3WireframeBoundingBoxNode that further specializes in ...</Abstract>
    <DeclaredIn>CC3MeshNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CC3World</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Abstract>CC3World is a CC3Node that manages a 3D scene.</Abstract>
    <DeclaredIn>CC3World.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContentFromPODFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a85c477dea3dd3301c20a9a8baabb5ec9</Anchor>
    <Abstract>Instantiates an instance of CC3PODResourceNode, loads it from the POD file at the specified path...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContentFromPODFile:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>acba211f220ad44235806444ac288ee50</Anchor>
    <Abstract>Instantiates an instance of CC3PODResourceNode with the specified name, loads it from the POD file at...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContentFromPODResourceFile:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a8dcd154fd87663fb7c3ece8d7002ff45</Anchor>
    <Abstract>Instantiates an instance of CC3PODResourceNode, loads it from the POD file at the specified resource ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addContentFromPODResourceFile:withName:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a156d04fd2670ab10a21a4a92d933fdab</Anchor>
    <Abstract>Instantiates an instance of CC3PODResourceNode with the specified name, loads it from the POD file at...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawVisitorClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a39962d64ab703ef7c7cf77bf2ee09c1b</Anchor>
    <Abstract>Returns the class of visitor that will automatically be instantiated into the drawVisitor property...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawWorld</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a8257999067576dd3ef68110e544a03a6</Anchor>
    <Abstract>This method is invoked periodically when the objects in the CC3World are to be drawn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initializeWorld</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a80ab922e5f2bacbd4a004b47dc1c936b</Anchor>
    <Abstract>This template method is where a subclass should populate the 3D world models.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodeSelected:byTouchEvent:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a9ecead38d3efbc3d2789e3787c5d13d5</Anchor>
    <Abstract>This callback template method is invoked automatically from the touchedNodePicker when a node has bee...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pause</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a81a5584dc08435d3d776f05dff9ce4ce</Anchor>
    <Abstract>Pauses the dynamics of the 3D world model, including internal updates and CCActions, by setting the isRunning property to NO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pickVisitorClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a50d35f77d98326b52c69a49262e26c4d</Anchor>
    <Abstract>Returns the class of visitor that will be instantiated in the touchedNodePicker pickTouchedNode metho...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>play</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a4763d74580552d55e46ebdee3794c51f</Anchor>
    <Abstract>Starts the dynamics of the 3D world model, including internal updates and CCActions, by setting the isRunning property to YES.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchEvent:at:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>aaa9c646456d5b441fda5944fa74f1cd4</Anchor>
    <Abstract>This method is invoked from the CC3Layer whenever a touch event occurs, if that layer has indicated t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVisitorClass</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a55e61fb1704bca5917081b69640e0050</Anchor>
    <Abstract>Returns the class of visitor that will automatically be instantiated into the updateVisitor property...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWorld</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a8f03e596eda611ff33cf0deca9b081fb</Anchor>
    <Abstract>Invokes the udpateWorld: method with the value of the minUpdateInterval property.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateWorld:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a96a67f998773213dff47d1f11ab78b25</Anchor>
    <Abstract>This method is invoked periodically when the components in the CC3World are to be updated...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>world</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a159a26eccf5b8dcb180edd86c801e3e2</Anchor>
    <Abstract>Allocates and initializes an autoreleased unnamed instance with an automatically generated unique tag...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activeCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a60c88e4c67cd30393e5d5612dd4259c6</Anchor>
    <Abstract>The 3D camera that is currently displaying the scene of this world.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ambientLight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a11c4c38fed3e5c48c09249a31a158154</Anchor>
    <Abstract>The color of the ambient light of the world.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cc3Layer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>acca4e761f942e4473cb317102fc9dfbc</Anchor>
    <Abstract>The CC3Layer that is holding this 3D world.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawingSequencer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>ae40fd28ab2f13568e9877c917427cc9d</Anchor>
    <Abstract>The node sequencer being used by this instance to order the drawing of child nodes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawingSequenceVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a698ade173d82d5a28f2346f8f4830f18</Anchor>
    <Abstract>The sequencer visitor used to visit the drawing sequencer during operations on the drawing sequencer...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>drawVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>ad0e1712b746067328c4292a6d7bcde85</Anchor>
    <Abstract>The visitor that is used to visit the nodes to draw them to the GL engine.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a99bc8b6e37b8506517e52a0eb436ada3</Anchor>
    <Abstract>If set, creates fog within the CC3World.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUsingDrawingSequence</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a117ad5c56b93f0b1f2b06a3022be79f6</Anchor>
    <Abstract>Returns whether this instance is using a drawing sequencer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxUpdateInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>acacd7e19e4cf69671812dae706775997</Anchor>
    <Abstract>If the value of this property is greater than zero, it will be used as the upper limit accepted by th...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minUpdateInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a50041d65fe611309060e23e0b68a1413</Anchor>
    <Abstract>The value of this property is used as the lower limit accepted by the updateWorld: method...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>performanceStatistics</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a75034883f24c2a436d2bc72bf0dca52e</Anchor>
    <Abstract>If set, collects statistics about the updating and drawing performance of the 3D world.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldClearDepthBufferBefore2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a05eaae1b50852df0166d902cb212593c</Anchor>
    <Abstract>Indicates whether the OpenGL depth buffer should be cleared before reverting back to the 2D world...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shouldClearDepthBufferBefore3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a67c4b667cd476c32dcf0503fbf0ce700</Anchor>
    <Abstract>Indicates whether the OpenGL depth buffer should be cleared before drawing the 3D world...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>touchedNodePicker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a454fae6d00bfe5cca3cbff4fc8c533c4</Anchor>
    <Abstract>The touchedNodePicker picks the node under the point at which a touch event occurred.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a2cef1389cd02f253ff6487102a441baf</Anchor>
    <Abstract>The visitor that is used to visit the nodes when transforming them without updating.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateVisitor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>af838ecc6aa6577fb220c5068adc6b482</Anchor>
    <Abstract>The visitor that is used to visit the nodes to update and transform them during scheduled updates...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewportManager</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CC3World</Scope>
    </TokenIdentifier>
    <Path>interface_c_c3_world.html</Path>
    <Anchor>a5e1304a3ece0063bac3401b199f855f4</Anchor>
    <Abstract>The viewport manager manages the viewport and device orientation, including handling coordinate rotat...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCArray(CC3)</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Abstract>Extension category to support cocos3d functionality.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addUnretainedObject:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>a2eb29ca69a6e09064e01a9899c04eab7</Anchor>
    <Abstract>Adds the specified object to the end of the array, but does not retain the object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fullDescription</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>ae58049ea7b20ab736257370c9514b52f</Anchor>
    <Abstract>Returns a more detailed description of this instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indexOfObjectIdenticalTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>a28307b404de746e7fb731ca180244faa</Anchor>
    <Abstract>Returns the index of the specified object, by comparing objects using the == operator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertUnretainedObject:atIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>ae57dd3a8d8432e3536f76333c0d346d9</Anchor>
    <Abstract>Inserts the specified object at the specified index within the array, but does not retain the object...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>releaseAsUnretained</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>aa46970c908fde5a07dec2e18b53f04c1</Anchor>
    <Abstract>Releases the array without releasing each contained object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjectsAsUnretained</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>a3b6ca7f2f2ba8be73e276fa9b3797ee7</Anchor>
    <Abstract>Removes all objects in the array, without releasing them.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectIdenticalTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>a48ebfb3a7803f1572070d40731ab487f</Anchor>
    <Abstract>Removes the specified object, by comparing objects using the == operator.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeUnretainedObjectAtIndex:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>a91447630e2563b32ee2de36a634d2745</Anchor>
    <Abstract>Removes the object at the specified index, without releasing it.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeUnretainedObjectIdenticalTo:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>a2d3d390a3c49d406ef9e9edf3937f683</Anchor>
    <Abstract>Removes the specified object from the array, without releasing it, by comparing objects using the == ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>replaceObjectAtIndex:withObject:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCArray(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_array_07_c_c3_08.html</Path>
    <Anchor>aaca1d75ac0851c99818fb2d337843659</Anchor>
    <Abstract>Replaces the object at the specified index with the specified object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCDirector(CC3)</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CCDirector(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_director_07_c_c3_08.html</Path>
    <Abstract>Extension category to support cocos3d functionality.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameInterval</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCDirector(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_director_07_c_c3_08.html</Path>
    <Anchor>a91936b6a665d4811fd6e78c162e79f08</Anchor>
    <Abstract>Returns the time interval in seconds between the current render frame and the previous frame...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>frameRate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCDirector(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_director_07_c_c3_08.html</Path>
    <Anchor>a3f7327c979ae36099391ecbd1e52b818</Anchor>
    <Abstract>Returns the current rendering perfromance in average frames per second.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCNode(CC3)</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CCNode(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_07_c_c3_08.html</Path>
    <Abstract>Extension category to support cocos3d functionality.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalBoundingBoxInPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNode(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_07_c_c3_08.html</Path>
    <Anchor>a0b2655312de3f63a5dfa720bca08b3ea</Anchor>
    <Abstract>Returns the bounding box of this CCNode, measured in pixels, in the global coordinate system...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>updateViewport</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNode(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_07_c_c3_08.html</Path>
    <Anchor>a040331b4b2b69668152bb5b7597679ff</Anchor>
    <Abstract>Updates the viewport of any contained CC3World instances with the dimensions of its CC3Layer and the ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCNode(CC3Billboard)</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CCNode(CC3Billboard)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_07_c_c3_billboard_08.html</Path>
    <Abstract>CCNode extension to support embedding 2D CCNodes in the 3D world.</Abstract>
    <DeclaredIn>CC3Billboard.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>measureBoundingBoxInPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNode(CC3Billboard)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_07_c_c3_billboard_08.html</Path>
    <Anchor>a0f92276e1c78a7d92d0c734cf8eee8e3</Anchor>
    <Abstract>Returns the bounding box of this node in pixels, measuring it if necessary.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>billboard3DContentScaleFactor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CCNode(CC3Billboard)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_07_c_c3_billboard_08.html</Path>
    <Anchor>a4f359ec33b856d18bbb4f9a789a1f25a</Anchor>
    <Abstract>Returns a scaling factor to be applied to this node when it is set as the 2D billboard in a CC3Billbo...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCNode(ControlledCCNodeProtocol)</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CCNode(ControlledCCNodeProtocol)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_07_controlled_c_c_node_protocol_08.html</Path>
    <Abstract>Methods added to the base CCNode to support structural node hierarchies containing controlled nodes...</Abstract>
    <DeclaredIn>CCNodeController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deviceOrientationDidChange:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNode(ControlledCCNodeProtocol)</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_07_controlled_c_c_node_protocol_08.html</Path>
    <Anchor>ada455b0a29ea14ddfaa59dccb2374787</Anchor>
    <Abstract>Called automatically on the child node of a controlled node to propagate the notification of the chan...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CCNodeController</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Abstract>An instance of CCNodeController manages a single CCNode (typically a CCLayer) as changes occur to the...</Abstract>
    <DeclaredIn>CCNodeController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deviceOrientationDidChange:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>aaae74126699afd214bbe88378d10c034</Anchor>
    <Abstract>Called automatically when the orientation of the device (portrait, landscape, etc) has changed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didChangeIsOverlayingDeviceCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>afef1188dd324525e9969b8872420cf3b</Anchor>
    <Abstract>Called automatically just after the isOverlayingDeviceCamera property has been changed, and after the picker has been modally presented or dismissed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newDeviceCameraPicker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>a87c5d782042c1fa87785d210832dd0ab</Anchor>
    <Abstract>If the device supports a camera, returns a newly allocated and initialized UIImagePickerController, suitable for use in overlaying the EAGLView underlying the CCNode on top of the device camera image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>runSceneOnNode:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>a91a7f9153ea2a6316c8f2074948aa00c</Anchor>
    <Abstract>This is a convenience method designed to keep the CCNode&amp;lt;ControlledCCNodeProtocol&amp;gt; being controlled b...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willChangeIsOverlayingDeviceCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>ab2d34403d12f65830c85082bda3c3b52</Anchor>
    <Abstract>Called automatically just before the isOverlayingDeviceCamera property is about to be changed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>aa71725d0b1ffc447a5cbeb39117e3dfe</Anchor>
    <Abstract>Allocates and initializes an autoreleased instance.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>controlledNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>a552bbfc4ae2907207315dd5715d257c2</Anchor>
    <Abstract>The CCNode that is being controlled by this controller.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>defaultCCDeviceOrientation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>a5a0485ecd3b0e500ca89e655f64029b4</Anchor>
    <Abstract>Within cocos2d, not all UIDeviceOrientation enumerations are mapped to ccDeviceOrientations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doesAutoRotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>ab31580dea443fb6a859f6b3d99e82ca6</Anchor>
    <Abstract>Indicates whether the controller should automatically rotate the rendering of the CCNode as the devic...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isDeviceCameraAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>a1047b48890a262c10456a365625c4aa7</Anchor>
    <Abstract>Indicates whether this device supports a camera.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOverlayingDeviceCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>a4789eb81c99cfbe6ed41d6d953806bdd</Anchor>
    <Abstract>Controls whether the controlled CCNode is overlaying the view of the device camera.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>picker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>CCNodeController</Scope>
    </TokenIdentifier>
    <Path>interface_c_c_node_controller.html</Path>
    <Anchor>a190b8f999ae83021cad7e0bc20b68f13</Anchor>
    <Abstract>The UIImagePickerController instance that this controller uses to overlay the CCNode on the device ca...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControllableCCLayer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Abstract>A CCLayerColor that implements the ControlledCCNodeProtocol protocol, and therefore can be controlled...</Abstract>
    <DeclaredIn>ControllableCCLayer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didUpdateContentSizeFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a098d4aad96351c8f15d7d5338a748652</Anchor>
    <Abstract>Called automatically whenever the contentSize of this layer is changed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didUpdateHomeContentSizeFrom:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a2dc46da8879f1a073537e75716695367</Anchor>
    <Abstract>Called automatically whenever the homeContentSize of this layer is changed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initInitialState</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a407e52d7291bcbfc4724dcec5b4495d3</Anchor>
    <Abstract>Template method that is called automatically during initialization, regardless of the actual init* me...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onEnter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a0a9189e13a131a1e66e72c796d912174</Anchor>
    <Abstract>Called automatically when this layer is first displayed, and subsequently whenever the layer is overl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>onExit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a01bb076170d6221e0222d12576032bf2</Anchor>
    <Abstract>Called automatically when this layer is first displayed, and subsequently whenever the layer is overl...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a15a876939622a8176c0fe490ef7ff804</Anchor>
    <Abstract>The controller that is controlling this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alignContentSizeWithDeviceOrientation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>ab0041877ed6b21ea9217c646c35aa56e</Anchor>
    <Abstract>Indicates whether this CCLayer should adjust the content size when the device orientation changes...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>homeContentSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a119beeca7228cc6a4478289d3c0c7cd8</Anchor>
    <Abstract>The content size of the layer when it is in its home orientation (kCCDeviceOrientationPortrait).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isColored</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a90f16b4a26578aa6e2e54674a5e1210e</Anchor>
    <Abstract>Indicates whether or not a background color and blend have been specified and will be drawn as a back...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOverlayingDeviceCamera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instp</Type>
      <Scope>ControllableCCLayer</Scope>
    </TokenIdentifier>
    <Path>interface_controllable_c_c_layer.html</Path>
    <Anchor>a94ac5c9ab96e340f905585bc8b9a64b2</Anchor>
    <Abstract>Indicates whether this layer is currently overlaying the view of the device camera, permitting an augmented reality view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlledCCNodeProtocol</Name>
      <APILanguage>unknown</APILanguage>
      <Type>intf</Type>
      <Scope>ControlledCCNodeProtocol</Scope>
    </TokenIdentifier>
    <Path>protocol_controlled_c_c_node_protocol-p.html</Path>
    <Abstract>This protocol adds to a CCNode the ability to be managed by a CCNodeController so that the CCNode can...</Abstract>
    <DeclaredIn>CCNodeController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deviceOrientationDidChange:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>intfm</Type>
      <Scope>ControlledCCNodeProtocol-p</Scope>
    </TokenIdentifier>
    <Path>protocol_controlled_c_c_node_protocol-p.html</Path>
    <Anchor>a78f6d03f8aafd8ea1790701b564a781d</Anchor>
    <Abstract>Called automatically by the controller when the orientation of the device (portrait, landscape, etc) has changed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>controller</Name>
      <APILanguage>cpp</APILanguage>
      <Type>intfp</Type>
      <Scope>ControlledCCNodeProtocol-p</Scope>
    </TokenIdentifier>
    <Path>protocol_controlled_c_c_node_protocol-p.html</Path>
    <Anchor>a343bbc7e79ecde9ee12531a3df653178</Anchor>
    <Abstract>The controller that is controlling this node.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EAGLView(CC3Picking)</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>EAGLView(CC3Picking)</Scope>
    </TokenIdentifier>
    <Path>interface_e_a_g_l_view_07_c_c3_picking_08.html</Path>
    <Abstract>This extension category adds support for node-picking while multisampling antialiasing is active...</Abstract>
    <DeclaredIn>CC3EAGLView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>closePicking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>EAGLView(CC3Picking)</Scope>
    </TokenIdentifier>
    <Path>interface_e_a_g_l_view_07_c_c3_picking_08.html</Path>
    <Anchor>a9c593b250a3a8c3323e9534ff6f12e63</Anchor>
    <Abstract>Invoked after the rendering pass used during node-picking to restore normal rendering operations...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>openPicking</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>EAGLView(CC3Picking)</Scope>
    </TokenIdentifier>
    <Path>interface_e_a_g_l_view_07_c_c3_picking_08.html</Path>
    <Anchor>a12ff42eb88086c504be020bc06afa114</Anchor>
    <Abstract>Invoked before the rendering pass used during node-picking, which uses a specialized coloring and pix...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSObject(CC3)</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>NSObject(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_n_s_object_07_c_c3_08.html</Path>
    <Abstract>Extension category to support cocos3d functionality.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>copyAutoreleased</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>NSObject(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_n_s_object_07_c_c3_08.html</Path>
    <Anchor>aaf14f7f4183172f3564dab9df3189040</Anchor>
    <Abstract>Convenience method to automatically autorelease when copying objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UIColor(CC3)</Name>
      <APILanguage>unknown</APILanguage>
      <Type>cl</Type>
      <Scope>UIColor(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_u_i_color_07_c_c3_08.html</Path>
    <Abstract>Extension category to support cocos3d functionality.</Abstract>
    <DeclaredIn>CC3Foundation.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>asCCColor4F</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>UIColor(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_u_i_color_07_c_c3_08.html</Path>
    <Anchor>a7091e23499a0177981ce78391c92ab76</Anchor>
    <Abstract>Returns a transparent ccColor4F struct containing the RGBA values for this color.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorWithCCColor4F:</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>UIColor(CC3)</Scope>
    </TokenIdentifier>
    <Path>interface_u_i_color_07_c_c3_08.html</Path>
    <Anchor>afbb735072979d0326731b171ff5d2f0e</Anchor>
    <Abstract>Returns an autoreleased UIColor instance created from the RGBA values in the specified ccColor4F...</Abstract>
  </Token>
</Tokens>
